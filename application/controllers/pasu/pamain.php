<?php defined('BASEPATH') OR exit ('No direct access script allowed!');
/**
 *
 */
class PAMAIN extends CI_Controller
{

	function __construct()
	{
		parent::__construct();
        $this->load->library('image_lib');// Message: Undefined property: MY_Upload::$load
        $this->load->library('googlemap');
		$this->load->model([
			'pasu/pamain_model',
            'pasu/dashboard_model'
		]);


		if ($this->session->userdata('isLogIn') == FALSE || $this->session->userdata('user_role') !=3)
        redirect('login');

	}


    public function list(){
        $user_region = $this->session->userdata('region');
        $user_role   = $this->session->userdata('user_role');
        $user_id     = $this->session->userdata('user_id');
        $gencode     = $this->input->post('gencode');

        $data['regions'] = $this->dashboard_model->region_display($user_region);
        $data['read'] = $this->dashboard_model->read_by_id($user_id);
        $data['blood'] = $this->dashboard_model->blood_list();
        $data['gender'] = $this->dashboard_model->gender_list();
        $data['region'] = $this->dashboard_model->region_list();
        $data['yearList'] = $this->dashboard_model->yearList();

        $data['page_title'] = "Dashboard";
        $data['setting'] = $this->setting_model->read();
        $data['year'] = $this->dashboard_model->getYear();
        $data['pamain'] = $this->dashboard_model->getPA($user_id);

        $data['content'] = $this->load->view('pasu/padashboard',$data,true);
        $this->load->view('pasu/main_wrapper',$data);
    }

    public function fetchallpainformations()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->pa_name";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function fetchallpainformationsformername()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->formerpaname";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

     public function fetchallpainkbas()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->cpabi_id";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function resetinfoland()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= number_format("$try->terrestrial",3);
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function resetinfowater()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= number_format("$try->marine_area",3);
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function get_data(){
        $codegens = $this->input->post('codegens');
        $user_id     = $this->session->userdata('user_id');
        $data = $this->pamain_model->getAllPAs($user_id);
        $datapic = $this->pamain_model->primaryimagedashboardslide($codegens,$user_id);
        $datalegal = $this->pamain_model->getAllLegislationbyIDs($codegens,$user_id);
        foreach($data as $datas){
            ?>
            <tr>

            </tr>
            <tr>
                <td>
                    <div>
                        <?php foreach ($datapic as $pic):
                              if ($datas->generatedcode == $pic->generatedcode ): ?>
                                    <img src="<?php echo base_url().'bmb_assets2/upload/pa_profile_pic/'.$pic->pa_image ?>" style="width: 400px" />
                        <?php endif;
                              endforeach;
                              ?>
                    </div>
                </td>
                <td colspan="" style="font-weight: bold; font-size: 24px;text-transform: uppercase;">
                    <?php echo $datas->pa_name; ?>

                    <table class="table">
                        <tbody style="font-size: 12px;font-weight: 400">
                            <tr>
                                <td style="font-weight: 700">Category</td>
                                <td><?php echo $datas->categoryName?></td>
                            </tr>
                            <tr>
                                <td style="font-weight: 700">Total Area</td>
                                <td><?php echo number_format($datas->marine_area + $datas->terrestrial,2)." has" ?></td>
                            </tr>
                            <tr>
                                <td style="font-weight: 700">Legal Status</td>
                                <?php foreach($datalegal as $row){ ?>
                                    <?php if (!empty($row->nipsub_id) || $row->nipsub_id==0){ ?>
                                        <tr>
                                        <td><?php echo $row->nipDesc." ".$row->sub_nip_description."<br>Date issued: ".$row->month." ".$row->date_year; ?></td>
                                    <?php } else { ?>
                                        <td><?php echo $row->nipDesc?></td>    </tr>
                                    <?php } ?>
                                <?php } ?>

                            </tr>

                            <tr>
                                <td><a type='button' class='table-btn btn btn-warning' href='./pamain/edit/<?php echo $datas->generatedcode ?>' title='Edit Information' >Edit</a></td>
                            </tr>
                        </tbody>
                    </table>
                </td>
            </tr>

            <?php
        }
    }

public function insertbamsreports()
 {
   if(!empty($_FILES['bams_file_attached']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
        $config['file_name'] = $_FILES['bams_file_attached']['name'];
        $config['allowed_types'] = 'pdf|csv';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('bams_file_attached')){
                $uploadData = $this->upload->data();
                $filenames2 = $uploadData['file_name'];
            }
    }

    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'bams_filename' => $this->input->post('bams_filename',true),
            'bams_date_month' => $this->input->post('bams_date_month',true),
            'bams_date_year' => $this->input->post('bams_date_year',true),
            'bams_status' => $this->input->post('bams_status',true),
            'bams_remarks' => $this->input->post('bams_remarks',true),
            'bams_file_attached' => (!empty($filenames2)?$filenames2:""),
            'date_created' => date("Y-m-d"),
        ];

        // $query = $this->pamain_model->addResearchNextID($postData);
        $query = $this->pamain_model->createbamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
 }

 public function fetchbamsresultss(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallbamsresults($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_bams_result; ?>" class="trow">
                <td><?php echo $row->bams_filename; ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_bams_file/'.$row->bams_file_attached.'">'.$row->bams_file_attached.'</a>' ?></td>
                <td><?php echo $row->month." ".$row->bams_date_year ?></td>
                <td class="hide"><?php echo $row->tenure_status_desc ?></td>
                <td><?php echo $row->bams_remarks ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebamsresults" data-id="<?php echo $row->id_bams_result ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

public function deletebamsresults($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblbamsresult WHERE id_bams_result = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function insertbmsreports()
 {
   if(!empty($_FILES['bms_file_attached']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_bms_file';
        $config['file_name'] = $_FILES['bms_file_attached']['name'];
        $config['allowed_types'] = 'pdf';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('bms_file_attached')){
                $uploadData = $this->upload->data();
                $filenames2 = $uploadData['file_name'];
            }
    }

    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'bms_filename' => $this->input->post('bms_filename',true),
            'bms_date_month' => $this->input->post('bms_date_month',true),
            'bms_date_year' => $this->input->post('bms_date_year',true),
            'bms_status' => $this->input->post('bms_status',true),
            'bms_remarks' => $this->input->post('bms_remarks',true),
            'bms_file_attached' => (!empty($filenames2)?$filenames2:""),
            'date_created' => date("Y-m-d"),
        ];

        // $query = $this->pamain_model->addResearchNextID($postData);
        $query = $this->pamain_model->createbmsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added bms!';
        }else{

        }
        echo json_encode($output);
 }

 public function fetchbmsresultss(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallbmsresults($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_bms_result; ?>" class="trow">
                <td><?php echo $row->bms_filename; ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_bms_file/'.$row->bms_file_attached.'">'.$row->bms_file_attached.'</a>' ?></td>
                <td><?php echo $row->month." ".$row->bms_date_year ?></td>
                <td class="hide"><?php echo $row->tenure_status_desc ?></td>
                <td><?php echo $row->bms_remarks ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebmsresults" data-id="<?php echo $row->id_bms_result ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

    public function deletebmsresults($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblbmsresult WHERE id_bms_result = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function insertseamsreports()
 {
   if(!empty($_FILES['seams_file_attached']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_seams_file';
        $config['file_name'] = $_FILES['seams_file_attached']['name'];
        $config['allowed_types'] = 'pdf|csv';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('seams_file_attached')){
                $uploadData = $this->upload->data();
                $filenames2 = $uploadData['file_name'];
            }
    }
    if(!empty($_FILES['seamsaut']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_seams_saut';
        $config['file_name'] = $_FILES['seamsaut']['name'];
        $config['allowed_types'] = 'pdf|csv';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('seamsaut')){
                $uploadData2 = $this->upload->data();
                $filenames = $uploadData2['file_name'];
            }
    }

    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'seams_filename' => $this->input->post('seams_filename',true),
            'seams_date_month' => $this->input->post('seams_date_month',true),
            'seams_date_year' => $this->input->post('seams_date_year',true),
            'seams_status' => $this->input->post('seams_status',true),
            'seams_remarks' => $this->input->post('seams_remarks',true),
            'seams_file_attached' => (!empty($filenames2)?$filenames2:""),
            'saut_file' => (!empty($filenames)?$filenames:""),
            'date_created' => date("Y-m-d"),
        ];

        // $query = $this->pamain_model->addResearchNextID($postData);
        $query = $this->pamain_model->createseamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
 }

 public function fetchseamsresultss(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallseamsresults($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_seams_result; ?>" class="trow">
                <td><?php echo $row->seams_filename; ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_seams_file/'.$row->seams_file_attached.'">'.$row->seams_file_attached.'</a>' ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_seams_saut/'.$row->saut_file.'">'.$row->saut_file.'</a>' ?></td>
                <td><?php echo $row->month." ".$row->seams_date_year ?></td>
                <td><?php echo $row->seams_stat_desc ?></td>
                <td><?php echo $row->seams_remarks ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeseamsresults" data-id="<?php echo $row->id_seams_result ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

public function deleteseamsresults($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblseamsresult WHERE id_seams_result = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function insertmettreports()
 {
   if(!empty($_FILES['mett_file_attached']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_mett_file';
        $config['file_name'] = $_FILES['mett_file_attached']['name'];
        $config['allowed_types'] = 'pdf|csv';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('mett_file_attached')){
                $uploadData = $this->upload->data();
                $filenames2 = $uploadData['file_name'];
            }
    }

    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'mett_file_attached' => $this->input->post('mett_filename',true),
            'mett_date_month' => $this->input->post('mett_date_month',true),
            'mett_date_year' => $this->input->post('mett_date_year',true),
            'mett_status' => $this->input->post('mett_status',true),
            'mes_status' => $this->input->post('messtatus',true),
            'mes_rating' => str_replace(',','',$this->input->post('mesrating',true)),
            'mett_remarks' => $this->input->post('mett_remarks',true),
            'mett_file_attached' => (!empty($filenames2)?$filenames2:""),
            'date_created' => date("Y-m-d"),
        ];

        // $query = $this->pamain_model->addResearchNextID($postData);
        $query = $this->pamain_model->createmettresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
 }

 public function fetchmettresultss(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallmettresults($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_mett_result; ?>" class="trow">
                <td><?php echo $row->mett_file_attached; ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_mett_file/'.$row->mett_file_attached.'">'.$row->mett_file_attached.'</a>' ?></td>
                <td><?php echo $row->month." ".$row->mett_date_year ?></td>
                <td><?php echo $row->mett_stat_desc."(".$row->mes_rating."%)" ?></td>
                <td><?php echo $row->mett_remarks ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removemettresults" data-id="<?php echo $row->id_mett_result ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

public function deletemettresults($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblmettresult WHERE id_mett_result = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

//     public function insertPAthreats()
// {
//         date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
//         $now = date('Y-m-d');
//         $output = array();
//         $data['data'] = (object)$postData = [
//             'generatedcode' => $this->input->post('gencode',true),
//             'threat_gencode' => $this->input->post('threatgencodes',true),
//             'threats_month_observe' => $this->input->post('threat_dMonth',true),
//             'threats_year_observe' => $this->input->post('threat_dYear',true),
//             'threats_longitude_dms_direction' => $this->input->post('threats_longitude_dms_direction',true),
//             'threats_longitude_dms_degrees' => $this->input->post('threats_longitude_dms_degrees',true),
//             'threats_longitude_dms_minutes' => $this->input->post('threats_longitude_dms_minutes',true),
//             'threats_longitude_dms_seconds' => $this->input->post('threats_longitude_dms_seconds',true),
//             'threats_latitude_dms_direction' => $this->input->post('threats_latitude_dms_direction',true),
//             'threats_latitude_dms_degrees' => $this->input->post('threats_latitude_dms_degrees',true),
//             'threats_latitude_dms_minutes' => $this->input->post('threats_latitude_dms_minutes',true),
//             'threats_latitude_dms_seconds' => $this->input->post('threats_latitude_dms_seconds',true),
//             'img_threat' => $this->input->post('pic_threat_text',true),
//             'x_long' => $this->input->post('ddlongoutput',true),
//             'y_lat' => $this->input->post('ddlatoutput',true),
//             'threat_region' => $this->input->post('threat_region_id',true),
//             'threat_province' => $this->input->post('threat_province_id',true),
//             'threat_municipality' => $this->input->post('threat_municipal_id',true),
//             'threat_barangay' => $this->input->post('threat_barangay_id',true),
//             'date_upload' => $now,
//             // 'threat_json_file' => $this->input->post('gencode',true),
//         ];
//                 $query = $this->pamain_model->createPAthreats($postData);
//                 // }
//                 if($query){
//                 $output['message'] = 'Add';
//                 $output['status'] = 'Successfully added new ecotourism attraction';
//                 }else{

//                 }
//         echo json_encode($output);
// }

public function insertecorreports()
 {
   if(!empty($_FILES['ecor_file_attached']['name'])){
        $config ['upload_path'] = 'bmb_assets2/upload/mne_ecor_file';
        $config['file_name'] = $_FILES['ecor_file_attached']['name'];
        $config['allowed_types'] = 'pdf|csv';
        $this->load->library('upload', $config);
        $this->upload->initialize($config);
            if($this->upload->do_upload('ecor_file_attached')){
                $uploadData = $this->upload->data();
                $filenames2 = $uploadData['file_name'];
            }
    }

    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecor_filename' => $this->input->post('ecor_filename',true),
            'ecor_date_month' => $this->input->post('ecor_date_month',true),
            'ecor_date_year' => $this->input->post('ecor_date_year',true),
            'ecor_status' => $this->input->post('ecor_status',true),
            'ecor_remarks' => $this->input->post('ecor_remarks',true),
            'ecor_file_attached' => (!empty($filenames2)?$filenames2:""),
            'date_created' => date("Y-m-d"),
        ];

        // $query = $this->pamain_model->addResearchNextID($postData);
        $query = $this->pamain_model->createecorresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
 }

 public function fetchecorresultss(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallecorresults($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_ecor_result; ?>" class="trow">
                <td><?php echo $row->ecor_filename; ?></td>
                <td><?php echo '<a  target="_blank" href="'.base_url().'bmb_assets2/upload/mne_ecor_file/'.$row->ecor_file_attached.'">'.$row->ecor_file_attached.'</a>' ?></td>
                <td><?php echo $row->month." ".$row->ecor_date_year ?></td>
                <td><?php echo $row->ecoimpact_stat_desc ?></td>
                <td><?php echo $row->ecor_remarks ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeecorresults" data-id="<?php echo $row->id_ecor_result ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

public function deleteecorresults($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblecorresult WHERE id_ecor_result = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function insertPAthreats()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'threat_gencode' => $this->input->post('threatgencodes',true),
            'threats_month_observe' => $this->input->post('threat_dMonth',true),
            'threats_year_observe' => $this->input->post('threat_dYear',true),
            'threats_longitude_dms_direction' => $this->input->post('threats_longitude_dms_direction',true),
            'threats_longitude_dms_degrees' => $this->input->post('threats_longitude_dms_degrees',true),
            'threats_longitude_dms_minutes' => $this->input->post('threats_longitude_dms_minutes',true),
            'threats_longitude_dms_seconds' => $this->input->post('threats_longitude_dms_seconds',true),
            'threats_latitude_dms_direction' => $this->input->post('threats_latitude_dms_direction',true),
            'threats_latitude_dms_degrees' => $this->input->post('threats_latitude_dms_degrees',true),
            'threats_latitude_dms_minutes' => $this->input->post('threats_latitude_dms_minutes',true),
            'threats_latitude_dms_seconds' => $this->input->post('threats_latitude_dms_seconds',true),
            'img_threat' => $this->input->post('pic_threat_text',true),
            'x_long' => $this->input->post('ddlongoutput',true),
            'y_lat' => $this->input->post('ddlatoutput',true),
            'threat_region' => $this->input->post('threat_region_id',true),
            'threat_province' => $this->input->post('threat_province_id',true),
            'threat_municipality' => $this->input->post('threat_municipal_id',true),
            'threat_barangay' => $this->input->post('threat_barangay_id',true),
            'threat_shpfile' => $this->input->post('shp_threat_txt'),
            'date_upload' => $now,
            // 'threat_json_file' => $this->input->post('gencode',true),
        ];
                $query = $this->pamain_model->createPAthreats($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism attraction';
                }else{

                }
        echo json_encode($output);
}

    public function insertPALocations()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'region_id' => $this->input->post('region_id',true),
            'province_id' => $this->input->post('province_id',true),
            'municipal_id' => $this->input->post('municipal_id',true),
            'barangay_id' => $this->input->post('barangay_id'),
            ];
                $query = $this->pamain_model->createPAlocations($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new location';
                }else{

                }
        echo json_encode($output);
}

    public function insertpathreatslist()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'threat_gencode' => $this->input->post('threatgencodes',true),
            'nature_threat_x' => $this->input->post('nature_threats',true),
            'nature_category_x' => $this->input->post('threats_cat',true),
            'sub_nature_category_x' => $this->input->post('threats_cat_sub',true),
            'threat_desc_x' => $this->input->post('threats_desc'),
            'threat_dd_long_x' => $this->input->post('ddlongoutputes'),
            'threat_long_direction_x' => $this->input->post('threats_longitude_dms_directiones'),
            'threat_long_degree_x' => $this->input->post('threats_longitude_dms_degreeses'),
            'threat_long_minute_x' => $this->input->post('threats_longitude_dms_minuteses'),
            'threat_long_second_x' => $this->input->post('threats_longitude_dms_secondses'),
            'threat_dd_lat_x' => $this->input->post('ddlatoutputes'),
            'threat_lat_direction_x' => $this->input->post('threats_latitude_dms_directiones'),
            'threat_lat_degree_x' => $this->input->post('threats_latitude_dms_degreeses'),
            'threat_lat_minute_x' => $this->input->post('threats_latitude_dms_minuteses'),
            'threat_lat_second_x' => $this->input->post('threats_latitude_dms_secondses'),
            'date_created' => date('Y-m-d'),
            ];
                $query = $this->pamain_model->createthreatlist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added threat';
                }else{

                }
        echo json_encode($output);
}

    public function insertpathreatslistEdit()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('threats-gencode',true),
            'threat_gencode' => $this->input->post('threats-gencode2',true),
            'nature_threat_x' => $this->input->post('edit-nature_threats',true),
            'nature_category_x' => $this->input->post('edit-threats_cat',true),
            'sub_nature_category_x' => $this->input->post('edit-threats_cat_sub',true),
            'threat_desc_x' => $this->input->post('edit-threats_desc'),
            'threat_dd_long_x' => $this->input->post('edit-ddlongoutputes'),
            'threat_long_direction_x' => $this->input->post('edit-threats_longitude_dms_directiones'),
            'threat_long_degree_x' => $this->input->post('edit-threats_longitude_dms_degreeses'),
            'threat_long_minute_x' => $this->input->post('edit-threats_longitude_dms_minuteses'),
            'threat_long_second_x' => $this->input->post('edit-threats_longitude_dms_secondses'),
            'threat_dd_lat_x' => $this->input->post('edit-ddlatoutputes'),
            'threat_lat_direction_x' => $this->input->post('edit-threats_latitude_dms_directiones'),
            'threat_lat_degree_x' => $this->input->post('edit-threats_latitude_dms_degreeses'),
            'threat_lat_minute_x' => $this->input->post('edit-threats_latitude_dms_minuteses'),
            'threat_lat_second_x' => $this->input->post('edit-threats_latitude_dms_secondses'),
            'date_created' => date('Y-m-d'),
            ];
                $query = $this->pamain_model->createthreatlist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added threat';
                }else{

                }
        echo json_encode($output);
}

public function insertpambtechcomm()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('ser-gencode',true),
            'pambcode' => $this->input->post('ser-gencode2',true),
            'techcomm' => $this->input->post('edit-techcomname',true),
            'other_techcomm' => $this->input->post('edit-othertechcom'),
            ];
                $query = $this->pamain_model->createpambtechcomms($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Technical Committee';
                }else{

                }
        echo json_encode($output);
}

public function listoftrehay()
{
    $code = $this->input->post('codegens');
    $datathreat = $this->pamain_model->getthreatlistperPA($code); ?>
    <?php $pctr=0;foreach($datathreat as $cc):$pctr+=1;
                    ?>
                                        <?php
                             if ($cc->threat_long_direction_x == 1):
                                 $longs = "East";
                             elseif($cc->threat_long_direction_x == 2):
                                 $longs = "West";
                             else:
                                 $longs = "";
                             endif;
                             if ($cc->threat_lat_direction_x == 1):
                                 $lats = "North";
                             elseif($cc->threat_lat_direction_x == 2):
                                 $lats = "South";
                             else:
                                 $lats = "";
                             endif;
                          ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_multi_threat?>" class="showdata">
                    <!-- <fieldset>  -->
                        <!-- <div class="col-xs-12"> -->
                            <div class="col-xs-12 container-boxes">
                                <div class="row-boxes">
                                    <b>Nature of threat : </b> <?php echo $cc->natural_threats_desc; ?><br>
                                    <b>Category : </b> <?php echo $cc->threats_category_desc; ?><br>
                                    <b>Threats : </b> <?php echo $cc->sub_cat_desc; ?><br>
                                    <b><?php echo "Longitude : ".$longs." ".(!empty($cc->threat_long_degree_x)?$cc->threat_long_degree_x."° ":"").(!empty($cc->threat_long_minute_x)?$cc->threat_long_minute_x."' ":"").(!empty($cc->threat_long_second_x)?$cc->threat_long_second_x."'' ":"")."<br>".
                                                                                                    "Latitude : ".$lats." ".(!empty($cc->threat_lat_degree_x)?$cc->threat_lat_degree_x."° ":"").(!empty($cc->threat_lat_minute_x)?$cc->threat_lat_minute_x."' ":"").(!empty($cc->threat_lat_second_x)?$cc->threat_lat_second_x."'' ":"") ?></b>
                                    <br><button type="button" class="btn btn-danger btn-xs removethreatlist" id="<?php echo $cc->id_multi_threat ?>" data-id="<?php echo $cc->id_multi_threat ?>">Remove</button> <br><br>
                                </div>
                            </div>

                        <!-- </div> -->
                    <!-- </fieldset>   -->
                    </div>
                <?php endforeach; ?>
    <?php
}
public function fetchthreatlist(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallthreatsLists($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->threat_gencode; ?></td>
                <td class="hide"><?php echo $row->nature_threat_x; ?></td>
                <td class="hide"><?php echo $row->nature_category_x; ?></td>
                <td class="hide"><?php echo $row->sub_nature_category_x; ?></td>
                <td class="hide"><?php echo $row->threat_desc_x; ?></td>
                <td><?php echo $row->natural_threats_desc; ?></td>
                <td><?php echo $row->threats_category_desc; ?></td>
                <td><?php echo $row->sub_cat_desc; ?></td>
                <td><?php echo "Longitude : ".(!empty($row->threat_long_direction_x)?($row->threat_long_direction_x==1?"East ":"West "):"")." ".(!empty($row->threat_long_degree_x)?$row->threat_long_degree_x."° ":"").(!empty($row->threat_long_minute_x)?$row->threat_long_minute_x."' ":"").(!empty($row->threat_long_second_x)?$row->threat_long_second_x."'' ":"")."<br>"."Latitude : ".(!empty($row->threat_lat_direction_x)?($row->threat_lat_direction_x==1?"North ":"South "):"")." ".(!empty($row->threat_lat_degree_x)?$row->threat_lat_degree_x."° ":"").(!empty($row->threat_lat_minute_x)?$row->threat_lat_minute_x."' ":"").(!empty($row->threat_lat_second_x)?$row->threat_lat_second_x."'' ":"") ?></td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removethreatimagmulti" data-id="<?php echo $row->id_multi_threat; ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function insertbiodiv_ter()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $nows = date('Y-m-d');
        $output = array();
        $data[] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'biodiv_terrestrial' => $this->input->post('tbz_id',true),
            'date_created' => $nows
            ];
                $query = $this->pamain_model->createbiodiv_ter($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertbiodiv_mar()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $nows = date('Y-m-d');
        $output = array();
        $data[] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'biodiv_marine' => $this->input->post('tbz_idm',true),
            'marine_shpfile' => $this->input->post('shp_influerivers_txt',true),
            'date_created' => $nows
            ];
                $query = $this->pamain_model->createbiodiv_mar($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAmapOthers()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'filename' => $this->input->post('imagemaplast_txt',true),
            'remarks' => $this->input->post('remarks_image',true),
            'map_shpfile' => $this->input->post('shp_othermap_txt',true),
            ];
                $query = $this->pamain_model->createPAmapimageOthers($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new image';
                }else{

                }
        echo json_encode($output);
}

public function insertIPAFdisburement()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'year_disbursement' => $this->input->post('disburse_year',true),
            'disbursement_paria' =>      ($this->input->post('oldsubparia')==2?str_replace(',','',$this->input->post('paria',true)):""),
            'disbursement_sagf' =>      str_replace(',','',$this->input->post('sagf',true)),
            'disbursement_oldsubfund' =>      ($this->input->post('oldsubparia')==1?str_replace(',','',$this->input->post('subfund_disbursement',true)):""),
            'balance_oldsubfund' =>      ($this->input->post('oldsubparia')==1?str_replace(',','',$this->input->post('subfund_balance',true)):""),
            'balance_paria' =>      ($this->input->post('oldsubparia')==2?str_replace(',','',$this->input->post('paria_balance',true)):""),
            'balance_sagf' =>      str_replace(',','',$this->input->post('sagf_balance',true)),
            'disbursement_paria_file' => $this->input->post('disburseparia_span',true),
            'disbursement_sagf_file' => $this->input->post('disbursesagf_span',true),
            'disbursement_old_income' =>  ($this->input->post('oldsubparia')==1?str_replace(',','',$this->input->post('subfund_disbursement_income',true)):""),
            'income_paria' =>  ($this->input->post('oldsubparia')==2?str_replace(',','',$this->input->post('income_paria',true)):""),
            'income_sagf' =>  str_replace(',','',$this->input->post('income_sagfs',true)),
            'annual_income_old' =>  str_replace(',','',$this->input->post('actual_income_annuals',true)),
            'oldsubparia' => $this->input->post('oldsubparia',true),
            'annual_disbursements' =>  str_replace(',','',$this->input->post('annual_disbursements',true)),
            'annual_balances' =>  str_replace(',','',$this->input->post('annual_balances',true)),
            'starting_balance_prev' =>  str_replace(',','',$this->input->post('remaining_balance',true)),
            'starting_balance_oldsub' =>  ($this->input->post('oldsubparia')==1?str_replace(',','',$this->input->post('running_balance2015',true)):""),
            'starting_balance_paria' =>  ($this->input->post('oldsubparia')==2?str_replace(',','',$this->input->post('running_balance2016',true)):""),
            'starting_balance_sagf' =>  str_replace(',','',$this->input->post('running_balancesagf',true)),
            'date_created' => $now,
            ];
                $query = $this->pamain_model->createIPAFdisbursement($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ipaf disbursement';
                }else{

                }
        echo json_encode($output);
}


    public function insertPApambmember()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $rel_data1 = $this->input->post('tabletechcomm');
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'pamb_codegen' => $this->input->post('pambcodes',true),
            'fname' => $this->input->post('fname',true),
            'lname' => $this->input->post('lname',true),
            'mname' => $this->input->post('mname',true),
            'pamb_suffix' => $this->input->post('pamb_suffix',true),
            'office_name' => $this->input->post('office',true),
            'sex' => $this->input->post('sex',true),
            'civil_status' => $this->input->post('maritalstatus',true),
            'designation' => $this->input->post('position',true),
            'appointment' => $this->input->post('appointment',true),
            'sub_appointment' => $this->input->post('appointmentsub',true),
            'appointment_month' => $this->input->post('appointment_m',true),
            'appointment_day' => $this->input->post('appointment_d',true),
            'appointment_year' => $this->input->post('appointment_y',true),
            'status' => $this->input->post('appointment_status',true),
            'residential_address' => $this->input->post('address',true),
            'pamb_landline' => $this->input->post('pamo_landline',true),
            'pamb_mobile' => $this->input->post('pamo_mobile',true),
            'techworkgrp' => $this->input->post('twgchck',true)==null?0:1,
            'techcom' => $this->input->post('techcomchck',true)==null?0:1,
            'execom' => $this->input->post('execomchck',true)==null?0:1,
            'pamb_file_appt' => $this->input->post('pambfile_appt_span',true),
            'alternateofficial' => $this->input->post('alternateofficials',true),
            'alternateofficial_sex' => $this->input->post('aoposition',true),
            'alternateofficial_appoint_month' => $this->input->post('aosex',true),
            'alternateofficial_appoint_day' => $this->input->post('aoamonth',true),
            'alternateofficial_appoint_year' => $this->input->post('aoaday',true),
            'alternateofficial_postition' => $this->input->post('aoayear',true),
            'name_twg' => $this->input->post('twgname',true),
            'cofname' => $this->input->post('cofname',true),
            'comname' => $this->input->post('comname',true),
            'colname' => $this->input->post('colname',true),
            'cosuffix' => $this->input->post('cosuffix',true),
            'coposition' => $this->input->post('coposition',true),
            'cosex' => $this->input->post('cosex',true),
            'colandline' => $this->input->post('colandline',true),
            'comobile' => $this->input->post('comobile',true),
            'cochair' => $this->input->post('appointchkcochair',true)==null?0:1,
            // 'name_techcom' => $this->input->post('techcomname',true),
            'techcomm_other' => $this->input->post('othertechcom',true),
            'date_created' => $now,
            ];
                $query = $this->pamain_model->createPApambmembers($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new PAMB Member';
                }else{

                }
        echo json_encode($output);
}

    public function insertPAecoAttraction()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'eco_activity' => $this->input->post('eco_activities',true),
            'other_activity' => $this->input->post('otherecoactivity',true),
            'title' => $this->input->post('attraction',true),
            'description' => $this->input->post('description2'),
            'image_attr' => $this->input->post('pic_attract_txt'),
            'source_photo' => $this->input->post('source_photo'),
            'chk_activity1' => $this->input->post('chk_activity1')==null? 0 : 1,
            'chk_activity2' => $this->input->post('chk_activity2')==null? 0 : 1,
            'chk_activity3' => $this->input->post('chk_activity3')==null? 0 : 1,
            'chk_activity4' => $this->input->post('chk_activity4')==null? 0 : 1,
            'chk_activity5' => $this->input->post('chk_activity5')==null? 0 : 1,
            'chk_activity6' => $this->input->post('chk_activity6')==null? 0 : 1,
            'chk_activity7' => $this->input->post('chk_activity7')==null? 0 : 1,
            'chk_activity8' => $this->input->post('chk_activity8')==null? 0 : 1,
            'chk_activity9' => $this->input->post('chk_activity9')==null? 0 : 1,
            'chk_activity10' => $this->input->post('chk_activity10')==null? 0 : 1,
            'chk_activity11' => $this->input->post('chk_activity11')==null? 0 : 1,
            'chk_activity12' => $this->input->post('chk_activity12')==null? 0 : 1,
            'chk_activity13' => $this->input->post('chk_activity13')==null? 0 : 1,
            'chk_activity14' => $this->input->post('chk_activity14')==null? 0 : 1,
            'chk_activity15' => $this->input->post('chk_activity15')==null? 0 : 1,
        ];
                $query = $this->pamain_model->createPAecoattraction($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism attraction';
                }else{

                }
        echo json_encode($output);
}

    public function insertPAreference()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'link' => $this->input->post('links',true),
            'sponsoring_body' => $this->input->post('sponsoring_body',true),
            'author' => $this->input->post('author',true),
            'ref_date_month' => $this->input->post('ref_date_month',true),
            'ref_date_year' => $this->input->post('ref_date_year',true),
            // 'title' => $this->input->post('title',true),
            'place' => $this->input->post('place',true),
            'ref_desc' => $this->input->post('reference_desc',true),
            'ref_usage' => $this->input->post('ref_usage',true),
            'type_citation' => $this->input->post('type_citation',true),
            'webtitleRef' => $this->input->post('webtitleRef',true),
            'websiteRef' => $this->input->post('websiteRef',true),
            'worktitleRef' => $this->input->post('worktitleRef',true),
            'bookpublisherRef' => $this->input->post('bookpublisherRef',true),
            'journaltitleRef' => $this->input->post('journaltitleRef',true),
            'periodicalRef' => $this->input->post('periodicalRef',true),
            'journalVolRef' => $this->input->post('journalVolRef',true),
            'journalpagerangeRef' => $this->input->post('journalpagerangeRef',true),

            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAreference($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new references';
                }else{

                }
        echo json_encode($output);
}

    public function insertPAreferenceEditform()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('research2-gencode',true),
            'research_code' => $this->input->post('research2-researchGenCode',true),
            'ref_date_month' => $this->input->post('edit-research_ref_date_month',true),
            'ref_date_year' => $this->input->post('edit-research_ref_date_year',true),
            'type_citation' => $this->input->post('edit-researchtype_citation',true),
            'author' => $this->input->post('edit-research_author',true),
            'webtitleRef' => $this->input->post('edit-researchwebtitleRef',true),
            'websiteRef ' => $this->input->post('edit-researchwebsiteRef',true),
            'worktitleRef' => $this->input->post('edit-researchworktitleRef',true),
            'bookpublisherRef' => $this->input->post('edit-researchbookpublisherRef',true),
            'journaltitleRef' => $this->input->post('edit-researchjournaltitleRef',true),
            'periodicalRef' => $this->input->post('edit-researchperiodicalRef',true),
            'journalVolRef' => $this->input->post('edit-researchjournalVolRef',true),
            'journalpagerangeRef' => $this->input->post('edit-researchjournalpagerangeRef',true),
            'link' => $this->input->post('edit-research_links',true),
            'ref_desc' => $this->input->post('edit-research_reference_desc',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAreference($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new references';
                }else{

                }
        echo json_encode($output);
}

public function insertPAreferenceEditProgramForm()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('searche-gencode',true),
            'research_code' => $this->input->post('searche-searchcode',true),
            'id_program' => $this->input->post('searche-id_program',true),
            'ref_date_month' => $this->input->post('editprog-research_ref_date_month',true),
            'ref_date_year' => $this->input->post('editprog-research_ref_date_year',true),
            'type_citation' => $this->input->post('editprog-researchtype_citation',true),
            'author' => $this->input->post('editprog-research_author',true),
            'webtitleRef' => $this->input->post('editprog-researchwebtitleRef',true),
            'websiteRef' => $this->input->post('editprog-researchwebsiteRef',true),
            'worktitleRef' => $this->input->post('editprog-researchworktitleRef',true),
            'bookpublisherRef' => $this->input->post('editprog-researchbookpublisherRefs',true),
            'journaltitleRef' => $this->input->post('editprog-researchjournaltitleRef',true),
            'periodicalRef' => $this->input->post('editprog-researchperiodicalRef',true),
            'journalVolRef' => $this->input->post('editprog-researchjournalVolRef',true),
            'journalpagerangeRef' => $this->input->post('editprog-researchjournalpagerangeRef',true),
            'link' => $this->input->post('editprog-research_links',true),
            'ref_desc' => $this->input->post('editprog-research_reference_desc',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAreference($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new references';
                }else{

                }
        echo json_encode($output);
}

public function insertPAPAMO()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'pamoCode' => $this->input->post('pamoCode',true),
            'tfname' => $this->input->post('tfname',true),
            'tmname' => $this->input->post('tmname',true),
            'tlname' => $this->input->post('tlname',true),
            'tsuffix' => $this->input->post('tsuffix',true),
            'tsex' => $this->input->post('tsex',true),
            'tage' => $this->input->post('tage',true),
            'tstatus' => $this->input->post('tappointment',true),
            'tposition' => $this->input->post('tposition',true),
            'appointed_month' => $this->input->post('pamb_date_month',true),
            'appointed_year' => $this->input->post('pamb_date_year',true),
            'status' => $this->input->post('status_employment',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPApamo($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new protected area managament staff';
                }else{

                }
        echo json_encode($output);
}

public function insertPAecoFacility()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'facilitycode' => $this->input->post('facility-gencode',true),
            'title_facility' => $this->input->post('facilities',true),
            'facility_others' => $this->input->post('ecofacilityother',true),
            'description_facility' => $this->input->post('description3',true),
            'facility_condition' => $this->input->post('facility_condition'),
            'image_facility' => $this->input->post('pic_facilities_txt'),
            'facility_date_month' => $this->input->post('facilities_month'),
            'facility_date_year' => $this->input->post('facilities_year'),
            'noaccomodate' => $this->input->post('nopeopleaccom'),
       ];
                $query = $this->pamain_model->createPAecofacility($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism facility';
                }else{

                }
        echo json_encode($output);
}

public function insertPAecoProduct()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'prod_img' => $this->input->post('pic_products_txt',true),
            'prod_desc' => $this->input->post('tourism_products',true),
       ];
                $query = $this->pamain_model->createPAecoproduct($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism products';
                }else{

                }
        echo json_encode($output);
}

public function insertPAecoEnterprise()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'enterprise_img' => $this->input->post('pic_enterprises_txt',true),
            'enterprise_desc' => $this->input->post('tourism_enterprises',true),
       ];
                $query = $this->pamain_model->createPAecoenterprise($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism enterprise';
                }else{

                }
        echo json_encode($output);
}
    public function insertPAStrictProt()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'spzcat' => $this->input->post('splcat'),
            's_area' => str_replace(',','',$this->input->post('stricthas',true)),
            'strictarchipelagic' => $this->input->post('strictarchisea',true),
            'description' => $this->input->post('strictzone',true),
        ];
                $query = $this->pamain_model->createPAstrictprot($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new strict protection zone';
                }else{

                }
        echo json_encode($output);
}

    public function insertPAMultipleused()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'multicat' => $this->input->post('multicat'),
            'area' => str_replace(',','',$this->input->post('multiplehas',true)),
            'multiarchipelagic' => $this->input->post('multiplearchisea',true),
            'description' => $this->input->post('multiplezone',true),
        ];
                $query = $this->pamain_model->createPAmultipleused($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new strict protection zone';
                }else{

                }
        echo json_encode($output);
}

public function ecoplan_img()
    {
        if($_FILES["ecoplanfile"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/ecotourism_mgmt_plan';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["ecoplanfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["ecoplanfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["ecoplanfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["ecoplanfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["ecoplanfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["ecoplanfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/ecotourism_mgmt_plan/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/ecotourism_mgmt_plan/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function mfofiles()
    {
        if(isset($_FILES["mfofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/income_mfo_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('mfofile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mfofilesEdited()
    {
        if(isset($_FILES["edit-mfofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/income_mfo_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-mfofile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function phybar1files()
    {
        if(isset($_FILES["far4file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/physical_bar1_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('far4file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function phybar1filesEdit()
    {
        if(isset($_FILES["edit-far4file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/physical_bar1_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-far4file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function ecoplanfiless()
    {
        if(isset($_FILES["ecoplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('ecoplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function ecoplanfilessEdit()
    {
        if(isset($_FILES["edit-ecoplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-ecoplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function wetlandplanfiless()
    {
        if(isset($_FILES["wetlandplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('wetlandplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function wetlandpambresofiles()
    {
        if(isset($_FILES["wetmgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('wetmgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function wetlandpambresofilesEdit()
    {
        if(isset($_FILES["edit-wetmgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-wetmgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function wetlandplanfilessEdit()
    {
        if(isset($_FILES["edit-wetlandplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-wetlandplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function caveplanfiless()
    {
        if(isset($_FILES["caveplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('caveplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cavepambresoplan()
    {
        if(isset($_FILES["cavemgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('cavemgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cavepambresoplanEdit()
    {
        if(isset($_FILES["edit-cavemgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-cavemgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function caveplanfilessEdit()
    {
        if(isset($_FILES["edit-caveplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-caveplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherplanfiless()
    {
        if(isset($_FILES["otherplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_plan_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('otherplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherplanpambreso()
    {
        if(isset($_FILES["otherplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_pamb_reso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('otherplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherplanpambresoEdit()
    {
        if(isset($_FILES["edit-otherplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_pamb_reso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-otherplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherplanfilessEdit()
    {
        if(isset($_FILES["edit-otherplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_plan_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-otherplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function editotherplanfiless()
    {
        if(isset($_FILES["edit-otherplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_plan_file';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-otherplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function insertPAmgmtplans()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'multicat' => $this->input->post('multicat'),
            'area' => $this->input->post('multiplehas',true),
            'multiarchipelagic' => $this->input->post('multiplearchisea',true),
            'description' => $this->input->post('multiplezone',true),
        ];
                $query = $this->pamain_model->createPAmultipleused($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new multiple used zone';
                }else{

                }
        echo json_encode($output);
}

    public function insertPADemographic()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'seams_region' => $this->input->post('region_ids',true),
            'seams_province' => $this->input->post('province_ids',true),
            'seams_municipality' => $this->input->post('municipal_ids',true),
            'seams_barangay' => $this->input->post('barangay_ids'),
            'name_household_head' => $this->input->post('seams_name_head'),
            'seams_sex_head' => $this->input->post('seams_sex'),
            'seams_male' => str_replace(',','',$this->input->post('seams_male',true)),
            'seams_female' => str_replace(',','',$this->input->post('seams_female',true)),
            'area_farmlot' => str_replace(',','',$this->input->post('seams_farmlot',true)),
            'chkhomelot' => $this->input->post("whf")==null?0:1,
            'area_homelot' => str_replace(',','',$this->input->post('seams_homelot',true)),
            'other_uses' => str_replace(',','',$this->input->post('seams_otheruses',true)),
            'area_occupied' => str_replace(',','',$this->input->post('seams_occupied',true)),
            'date_occupy_month' => $this->input->post('seams_date_months'),
            'date_occupy_year' => $this->input->post('seams_date_years'),
            'seams_remarks' => $this->input->post('seams_remarks'),
            'longitude_dms_direction' => $this->input->post('longitude_dms_direction'),
            'longitude_dms_degrees' => $this->input->post('longitude_dms_degrees'),
            'longitude_dms_minutes' => $this->input->post('longitude_dms_minutes'),
            'longitude_dms_seconds' => $this->input->post('longitude_dms_seconds'),
            'latitude_dms_direction' => $this->input->post('latitude_dms_direction'),
            'latitude_dms_degrees' => $this->input->post('latitude_dms_degrees'),
            'latitude_dms_minutes' => $this->input->post('latitude_dms_minutes'),
            'latitude_dms_seconds' => $this->input->post('latitude_dms_seconds'),
            'tenured_migrant' => $this->input->post('tenure_migrantyns')==null?0:1,
            'ip_recognize' => $this->input->post('ip_recognize')==null?0:1,
            'ip_inside_pa' => $this->input->post('ip_inside_pa')==null?0:1,
            'ip_outside_pa' => $this->input->post('ip_outside_pa')==null?0:1,            
            'ip_titled_land' => $this->input->post('ip_andostitle')==null?0:1,
            'ip_andotl' => $this->input->post('ip_titled_land')==null?0:1,
            'ip_and' => $this->input->post('ip_and')==null?0:1,
            'ip_andwtl' => $this->input->post('ip_andwititle')==null?0:1,
            'ipsiccs' => $this->input->post('select_iccsips'),
            'x_long' => $this->input->post('ddlatoutputdemo'),
            'y_lat' => $this->input->post('ddlongoutputdemo'),
            'shp_zip' => $this->input->post('demoshpfiletxt'),
        ];
                $query = $this->pamain_model->createPAdemographic($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new demographic information';
                }else{

                }
        echo json_encode($output);
}

public function insertPAHydrology()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $rel_data1 = $this->input->post('tablehydr');

        if(!empty($_FILES['zip_shpfile_hydro']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/hydro_shp_file';
            $config['file_name'] = $_FILES['zip_shpfile_hydro']['name'];
            $config['allowed_types'] = 'zip|7z|gz|bz2|rar|tar';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
                if($this->upload->do_upload('zip_shpfile_hydro')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }

        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'hydro_code' => $this->input->post('hydro-gencode',true),
            'hydro_class' => $this->input->post('waterclass',true),
            'hydroSub_class' => ($this->input->post('waterclass',true)==1?$this->input->post('waterclasssub',true):""),
            'riverinflow' => $this->input->post('riverinflow',true),
            'riveroutflow' => $this->input->post('riveroutflow'),
            'hydro_desc' => $this->input->post('hydro'),
            'hydro_map_img' => $this->input->post('picdatainsert'),
            'hydro_shp_file' => $this->input->post('ziphydrodatainsert'),
            'date_assessed' => ($this->input->post('waterclass',true)==1?$this->input->post('hydroyearassess',true):""),            
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAhydrology($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new hydrology';
                }else{

                }
        echo json_encode($output);
}

public function insertPAwatershed()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('watershedcode',true),
            'riverbasin_name' => $this->input->post('riverbasinname',true),
            'watershed_name' => $this->input->post('watershedname',true),
            'subwatershed_name' => $this->input->post('subwatershedname',true),
            'watershedmap_img' => $this->input->post('picdatainsertwatershed'),
            'watershedmap_shpfile' => $this->input->post('shp_watersheds_txt'),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAWatersheds($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new river basin and watershed';
                }else{

                }
        echo json_encode($output);
}

public function insertPAtopoandslope()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'topology_desc' => $this->input->post('topo',true),
            'topo_shpfile' => $this->input->post('shp_topo_txt',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAtopoandslope($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new topography and slope';
                }else{

                }
        echo json_encode($output);
}

public function insertPATenureSAPA()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'sapa_generatedcode' => $this->input->post('sapaCode',true),
            'sapa_no' => $this->input->post('sapano',true),
            'sapa_name_proponent' => $this->input->post('sapaproponent',true),
            'sapa_duration_from' => $this->input->post('sapa_yearstart',true),
            'sapa_duration_to' => $this->input->post('sapa_yearend',true),
            'sapa_nature_development' => $this->input->post('sapa_development',true),
            'sapa_development_others' => $this->input->post('otheruses',true),
            'sapa_project_location' => $this->input->post('sapa_location',true),
            'sapa_area' => str_replace(',','',$this->input->post('sapa_area',true)),
            'sapa_project_cost' => str_replace(',','',$this->input->post('sapa_cost',true)),
            'sapa_rehabbond_cost' => str_replace(',','',$this->input->post('rehabbondcost',true)),
            'sapa_scanned_file' => $this->input->post('sapafile_span',true),
            'sapa_remarks' => $this->input->post('sapa_remarks',true),
            'sapa_mgm_plan' => $this->input->post('sapamgmtplanfile_span',true),
            'sapa_cdmp_file' => $this->input->post('sapacdmpplanfile_span',true),
            'sapa_pamb_reso' => $this->input->post('sapapambresofile_span',true),
            'sapa_date_month' => $this->input->post('sapa_approve_month',true),
            'sapa_date_year' => $this->input->post('sapa_approve_year',true),
            'sapa_status' => $this->input->post('sapa_status',true),
            'sapa_pamb_clearance' => $this->input->post('sapapambclearancefile_span',true),
            'sapa_shpfile' => $this->input->post('shp_sapa_txt',true),
        ];
                $query = $this->pamain_model->createPAtenureSAPA($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Special Use Agreement in Protected Area (SAPA)';
                }else{

                }
        echo json_encode($output);
}

public function insertPATenureMOA()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'moa_generatedcode' => $this->input->post('moaCode',true),
            'moa_holder' => $this->input->post('moa_proponent',true),
            'moa_second_party' => $this->input->post('moa_party',true),
            'moa_from_month' => $this->input->post('moa_month',true),
            'moa_from_day' => $this->input->post('moa_day',true),
            'moa_from_year' => $this->input->post('moa_year',true),
            'moa_to_month' => $this->input->post('moa_exp_month',true),
            'moa_to_day' => $this->input->post('moa_exp_day',true),
            'moa_to_year' => $this->input->post('moa_exp_year',true),
            'moa_devt' => $this->input->post('moa_development',true),
            'moa_location' => $this->input->post('moa_location',true),
            'moa_area' => str_replace(',','',$this->input->post('moa_area',true)),
            'moa_cost' => str_replace(',','',$this->input->post('moa_cost',true)),
            'moa_doc_file' => $this->input->post('moafile_span',true),
            'moa_status' => $this->input->post('moa_status',true),
            'moa_remarks' => $this->input->post('moa_remarks',true),
            'moa_mgm_plan' => $this->input->post('moaprojplanfile_span',true),
            'moa_pamb_approve' => $this->input->post('moapambapprovefile_span',true),
            'moa_pamb_reso' => $this->input->post('moapambresofile_span',true),
            'moa_pamb_clearance' => $this->input->post('moapambclearancefile_span',true),
            'moa_shpfile' => $this->input->post('shp_moa_txt',true),
        ];
                $query = $this->pamain_model->createPAtenureMOA($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Memorandum of Agreement (MOA)';
                }else{

                }
        echo json_encode($output);
}

public function insertPATenurePACBRMA()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'pacbrma_no' => $this->input->post('pcbrma_no',true),
            'pacbrma_holder' => $this->input->post('pcbrma_holder',true),
            'pacbrma_po' => $this->input->post('pcbrma_po',true),
            'pacbrma_devt' => $this->input->post('pcbrma_devt',true),
            'pacbrma_location' => $this->input->post('pcbrma_location',true),
            'pacbrma_area' => str_replace(',','',$this->input->post('pcbrma_area',true)),
            'pacbrma_cost' => $this->input->post('pcbrma_cost',true),
            'pacbrma_start' => $this->input->post('pcbrma_yearstart',true),
            'pacbrma_end' => $this->input->post('pcbrma_yearend',true),
            'pacbrma_doc_file' => $this->input->post('approveodcs_span',true),
            'pacbrma_member_file' => $this->input->post('pcbrmamember_span',true),
            'pacbrma_male' => str_replace(',','',$this->input->post('pcbrma_member_male',true)),
            'pacbrma_female' => str_replace(',','',$this->input->post('pcbrma_member_female',true)),
            'pacbrma_total' => str_replace(',','',$this->input->post('pcbrma_member',true)),
            'pacbrma_status' => $this->input->post('pcbrma_status',true),
            'pacbrma_remarks' => $this->input->post('pcbrma_remarks',true),
            'pacbrma_pamb_clearance' => $this->input->post('pacbrmapambclearancefile_span',true),
            'pacbrma_shpfile' => $this->input->post('shp_pacbrma_txt',true)
        ];
                $query = $this->pamain_model->createPAtenurePACBRMA($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Protected Area Community-Based Resource Management Agreement (PACBRMA)';
                }else{

                }
        echo json_encode($output);
}

public function insertPAclimatetype()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'climate_type' => $this->input->post('climate',true),
            'climate_desc' => $this->input->post('climate_desc',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAclimatetype($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Climate type';
                }else{

                }
        echo json_encode($output);
}

public function insertPAothertenurialins()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'type_instrument' => $this->input->post('typesinstrument',true),
            'othertype_details' => $this->input->post('othertenure',true),
            'titledno' => $this->input->post('titledinstrument',true),
            'tenure_holder' => $this->input->post('holderinstrument',true),
            'tenure_purpose' => $this->input->post('purposeinstrument',true),
            'other_instrument_location' => $this->input->post('otlocation',true),
            'other_instrument_area' => str_replace(',','',$this->input->post('otarea',true)),
            'other_instrument_start' => $this->input->post('otyearstart',true),
            'other_instrument_expire' => $this->input->post('otyearend',true),
            'other_instrument_status' => $this->input->post('otstatus',true),
            'other_instrument_map' => $this->input->post('old_otother',true),
            'other_instrument_shp' => $this->input->post('old_shpfileotherinstrument',true),
            'other_instrument_file' => $this->input->post('shpzip_otherinstrumentfile',true),
            'other_instrument_pamb_clearance' => $this->input->post('otherpambclearancefile_span',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAteureothers($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new tenurial instrument';
                }else{

                }
        echo json_encode($output);
}

public function getprogramsector()
{
    $sector = $this->input->post('sector');
        if (!empty($sector)) {
        $query = $this->db->select('*')
            ->from('tblpaprogram_agency_program')
            ->order_by('program_names')
            ->where('agency_id',$sector)
            ->or_where('agency_id',0)
            ->get();

        $option = "<option value=\"\">Select</option>";
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $sector) {
                $option .= "<option value=\"$sector->id_agencyprog\">$sector->program_names</option>";
            }
            $data['message'] = $option;
            $data['desc'] = $option;
            $data['status'] = true;
        } else {
            $data['message'] = "No available item";
            $data['status'] = false;
        }
    } else {
        $data['message'] = "Invalid selected";
        $data['status'] = null;
    }

    echo json_encode($data);
}

public function getprojsector()
{
    $sector = $this->input->post('sector');
        if (!empty($sector)) {
        $query = $this->db->select('*')
            ->from('tblmainprojects_projectlist')
            ->order_by('id_sector','desc')
            ->where('id_sector',$sector)
            ->or_where('id_sector',0)
            ->get();

        $option = "<option value=\"\">Select</option>";
        if ($query->num_rows() > 0) {
            foreach ($query->result() as $sector) {
                $option .= "<option value=\"$sector->id_projectlist\">$sector->proj_names</option>";
            }
            $data['message'] = $option;
            $data['desc'] = $option;
            $data['status'] = true;
        } else {
            $data['message'] = "No available item";
            $data['status'] = false;
        }
    } else {
        $data['message'] = "Invalid selected";
        $data['status'] = null;
    }

    echo json_encode($data);
}

public function getprograminfo()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblpaprogram_agency_program')
                ->where('id_agencyprog',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->program_desc;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected item";
            $data['status'] = null;
        }

        echo json_encode($data);
    }


public function getprojinfo()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblmainprojects_projectlist')
                ->where('id_projectlist',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->proj_desc;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected item";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

public function insertPAprogramList()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'program_sector' => $this->input->post('programsector',true),
            'program_partner' => $this->input->post('program_partner',true),
            'sector_program_id' => $this->input->post('programsectorlist',true),
            'program_name' => $this->input->post('program_name',true),
            'program_details' => $this->input->post('program_details',true),
            'prog_duration_from_month' => $this->input->post('prog_duration_from_month',true),
            'prog_duration_from_year' => $this->input->post('prog_duration_from_year',true),
            'prog_duration_to_month' => $this->input->post('prog_duration_to_month',true),
            'prog_duration_to_year' => $this->input->post('prog_duration_to_year',true),
            'date_created' => date('Y-m-d'),
        ];
                $query = $this->pamain_model->createPAprojectList($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new project';
                }else{

                }
        echo json_encode($output);
}

public function insertIPAFvisit()
{

        $data1 = $this->input->post('tablevisitorslogfee');
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'visitors_gencode' => $this->input->post('pavisitorscodegenerated',true),
            'visitorlog_month' => $this->input->post('month_monitoring_ecotour',true),
            'visitorlog_day' => $this->input->post('day_monitoring_ecotour',true),
            'visitorlog_year' => $this->input->post('year_monitoring_ecotour',true),
            'visitorlog_fullname' => $this->input->post('visitorsname',true),
            'visitorlog_nationality' => $this->input->post('visitorsnationality',true),
            'visitorlog_below' => $this->input->post('chkv1',true)==null ? 0 : 1,
            'visitorlog_student' => $this->input->post('visitstud',true)==null ? 0 : 1,
            'visitorlog_senior' => $this->input->post('visitsenior',true)==null ? 0 : 1,
            'visitorlog_pwd' => $this->input->post('visitpwd',true)==null ? 0 : 1,
            'visitorlog_sex' => $this->input->post('visitorssex',true),
            'visitorlog_forloc' => $this->input->post('visitorsforloc',true),
            'visitorlog_address' => $this->input->post('visitorsaddress',true),
            'visitorlog_typeofpaid' => $this->input->post('visitorsfeetype',true),
            'visitorlog_amount' => str_replace(',','',$this->input->post('visitorsfeeamount',true)),
            'visitor_purpose' => $this->input->post('visitorpurpose',true),
            'visitors_category' => $this->input->post('visit_cat',true),
            'date_created' => date('Y-m-d'),
        ];
                $query = $this->pamain_model->createIPAFvisitors($postData,$data1);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added IPAF visitors';
                }else{

                }
        echo json_encode($output);
}

public function insertPAexsitinglanduse()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('landgencodes',true),
            'landuse_type' => $this->input->post('existing_landuses',true),
            'landuse_sub' => $this->input->post('sub_existing_landuse',true),
            'landuse_area' => str_replace(',','',$this->input->post('existing_landuse_area',true)),
            'remarks' => $this->input->post('existing_landuse_remarks',true),
            'landuse_shpfile' => $this->input->post('shp_landuse_txt',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAexistinglanduse($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new existing landuse';
                }else{

                }
        echo json_encode($output);
}

public function insertPAlandslide()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'landslide_desc' => $this->input->post('landslide',true),
            'landslide_area' => str_replace(',','',$this->input->post('landslide_area',true)),
            'landslide_remarks' => $this->input->post('landslide_remarks',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAlandslidesusceptibility($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new landslide susceptibility';
                }else{

                }
        echo json_encode($output);
}

public function insertPAflooding()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'flooding_desc' => $this->input->post('flooding',true),
            'flooding_area' => str_replace(',','',$this->input->post('flooding_area',true)),
            'flooding_remarks' => $this->input->post('flooding_remarks',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAfloodingsusceptibility($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new flooding susceptibility';
                }else{

                }
        echo json_encode($output);
}

public function insertPAsealevel()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'sea_desc' => $this->input->post('sea',true),
            'sea_img' => $this->input->post('imgseatxt',true),
            'sealevel_shpfile' => $this->input->post('shpzip_sealevel_text',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAsealevel($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new sea level rise';
                }else{

                }
        echo json_encode($output);
}

public function insertPAtsunamin()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'tsunami_desc' => $this->input->post('tsunami',true),
            'tsunami_img' =>(!empty($this->input->post('imagetsunamitxt'))?$this->input->post('imagetsunamitxt'):'nophoto.jpg'),
            'stormsurge_shpfile' => $this->input->post('shpzip_storm_text',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAtsunami($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new tsunami susceptibility';
                }else{

                }
        echo json_encode($output);
}

public function insertPAfire()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'fire_desc' => $this->input->post('fire',true),
            'fire_img' =>(!empty($this->input->post('imgfiretxt'))?$this->input->post('imgfiretxt'):'nophoto.jpg'),
            'faultline_shpfile' => $this->input->post('shpzip_fault_text',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAfaultline($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new fault line susceptibility';
                }else{

                }
        echo json_encode($output);
}

public function insertPAothergeohazards()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'geohazard_desc' => $this->input->post('geohazard',true),
            'geohazard_map' =>(!empty($this->input->post('imggeohazardtxt'))?$this->input->post('imggeohazardtxt'):'nophoto.jpg'),
            'geohazard_shpfile' => $this->input->post('shpzip_othergeohazard_text',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAothergeohazard($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new other geohazard';
                }else{

                }
        echo json_encode($output);
}

public function rockShpFile()
    {
        if(isset($_FILES["edit-shp_rock"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/rock_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_rock'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

public function rockShpFileEdit()
    {
        if(isset($_FILES["edit-shp_rock"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/rock_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_rock'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

public function soilShpFile()
    {
        if(isset($_FILES["edit-shp_soil"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/soil_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_soil'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

public function soilShpFileEdit()
    {
        if(isset($_FILES["edit-shp_soil"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/soil_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_soil'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

public function insertPArockform()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'rock_details' => $this->input->post('rock',true),
            'rock_shpfile' => $this->input->post('shp_rock_txt',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPArockform($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new rock formation';
                }else{

                }
        echo json_encode($output);
}


public function insertPAsoilform()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'geology_desc' => $this->input->post('soil_type',true),
            'soil_shpfile' => $this->input->post('shp_soil_txt',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAsoilform($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new soil formation';
                }else{

                }
        echo json_encode($output);
}

public function insertPAurbanEco()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'cityurbanarea' => $this->input->post('chk_cupa',true)==null ? 0 : 1,
            'cityurbanarea_specify' => $this->input->post('cupa_details',true),
            'citybioindex' => $this->input->post('chk_cbi',true)==null ? 0 : 1,
            'lgu_reso_file' => $this->input->post('lguresolutiontext',true),
            'urbaneco_shpfile' => $this->input->post('shp_urbaneco_txt',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAurbanEco($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new urban ecosystem';
                }else{

                }
        echo json_encode($output);
}

public function insertPAmanagementPlan()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'mngmtplan_file' => $this->input->post('old_mngmtplanfile',true),
            'mngmtplan_pambreso' => $this->input->post('old_mgmtplanpambreso',true),
            'mngmtplan_shpfile' => $this->input->post('old_shpfilemgmntplan',true),
            'mpObjectives' => $this->input->post('mgmtplanobjective',true),
            'mngmtplan_remarks' => $this->input->post('mngmtplanremarks',true),
            'mpMonth' => $this->input->post('mpMonth',true),
            'mpDay' => $this->input->post('mpDay',true),
            'mpYear' => $this->input->post('mpYear',true),
            'mpStatus' => $this->input->post('mpStatus',true),
            'mpDuration' => $this->input->post('mpduration',true),
            'date_upload' => $now,
        ];
                $query = $this->pamain_model->createPAmanagementPlan($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new management plan';
                }else{

                }
        echo json_encode($output);
}

public function insertPAcepa_kap()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'kap_month' => $this->input->post('date_kap_month',true),
            'kap_day' => $this->input->post('date_kap_day',true),
            'kap_year' => $this->input->post('date_kap_year',true),
            'surveyed_report' => $this->input->post('surveyed_report_span',true),
            'kap_respondents' => $this->input->post('kap_respondents',true),
            'kap_remarks' => $this->input->post('kap_remarks',true),
            'summary_surveyed_report' => $this->input->post('summarysurveyed_report_span',true),
            'no_respondents' => str_replace(',','',$this->input->post('kap_norespondents',true)),
            'proponent_name' => $this->input->post('kap_nameproponent',true),
            'uploaded_on' => $now,
        ];
                $query = $this->pamain_model->createPAkapsurveyed($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new surveyed conducted';
                }else{

                }
        echo json_encode($output);
}

public function insertPAEcoPlanFile()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'upload_eco_plan' => $this->input->post('old_ecoplanfile',true),
            'upload_eco_pambreso' => $this->input->post('old_ecomgmtplanpambreso',true),
            'ecotourism_plan_dateM' => $this->input->post('ecoplanM',true),
            'ecotourism_plan_dateD' => $this->input->post('ecoplanD',true),
            'ecotourism_plan_dateY' => $this->input->post('ecoplanY',true),
            'ecotourism_status' => $this->input->post('ecoplanStatus',true),
            'upload_eco_shpfile' => $this->input->post('shp_mgmteco_txt',true),
        ];
                $query = $this->pamain_model->createPAEcoPlanFile($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new ecotourism plan';
                }else{

                }
        echo json_encode($output);
}

public function insertPAwetlandPlanFile()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'upload_wetland_plan' => $this->input->post('old_wetlandplanfile',true),
            'upload_wetland_pambreso' => $this->input->post('old_cavemgmtplanpambreso',true),
            'wetland_plan_dateM' => $this->input->post('wetlandplanM',true),
            'wetland_plan_dateD' => $this->input->post('wetlandplanD',true),
            'wetland_plan_dateY' => $this->input->post('wetlandplanY',true),
            'wetland_plan_status' => $this->input->post('wetlandplanStatus',true),
            'upload_wetland_shpfile' => $this->input->post('shp_mgmtwetland_txt',true),
        ];
                $query = $this->pamain_model->createPAWetlandPlanFile($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new wetland plan';
                }else{

                }
        echo json_encode($output);
}

public function insertPAcavePlanFile()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'upload_cave_plan' => $this->input->post('old_caveplanfile',true),
            'upload_cave_pambreso' => $this->input->post('old_caveplanfile',true),
            'cave_plan_dateM' => $this->input->post('caveplanM',true),
            'cave_plan_dateD' => $this->input->post('caveplanD',true),
            'cave_plan_dateY' => $this->input->post('caveplanY',true),
            'cave_plan_status' => $this->input->post('caveplanStatus',true),
            'upload_cave_shpfile' => $this->input->post('shp_mgmtcave_txt',true),
        ];
                $query = $this->pamain_model->createPACavePlanFile($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new cave plan';
                }else{

                }
        echo json_encode($output);
}

public function insertPAotherPlanFile()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'specify_otherplan' => $this->input->post("sotherplan"),
            'upload_other_plan' => $this->input->post('old_otherplanfile',true),
            'upload_other_plan_pambreso' => $this->input->post('old_otherplanpambreso',true),
            'other_plan_dateM' => $this->input->post('otherplanM',true),
            'other_plan_dateD' => $this->input->post('otherplanD',true),
            'other_plan_dateY' => $this->input->post('otherplanY',true),
            'other_plan_status' => $this->input->post('otherplanStatus',true),
            'upload_other_plan_shpfile' => $this->input->post('shp_mgmtotherplan_txt',true),
        ];
                $query = $this->pamain_model->createPAotherPlanFile($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new management plan';
                }else{

                }
        echo json_encode($output);
}

public function insertPABiologicalFF()
{
        $rel_data1 = $this->input->post('tablepopulation');
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'id_genus_get' => $this->input->post('getcommonid',true),
            'chk_forest' => $this->input->post('chk_forest')==null ? 0 : 1,
            'chk_inland' => $this->input->post('chk_inland')==null ? 0 : 1,
            'chk_cave' => $this->input->post('chk_cave')==null ? 0 : 1,
            'chk_coral' => $this->input->post('chk_coral')==null ? 0 : 1,
            'chk_seagrass' => $this->input->post('chk_seagrass')==null ? 0 : 1,
            'chk_mangrove' => $this->input->post('chk_mangrove')==null ? 0 : 1,
            'chk_mudflats' => $this->input->post('chk_tidal')==null ? 0 : 1,
            'chk_coastalwetland' => $this->input->post('chk_coastalwetland')==null ? 0 : 1,
            'chk_grassland' => $this->input->post('chk_grassland')==null ? 0 : 1,
            // 'estimate_population' => $this->input->post('populationcount'),
            'localname' => $this->input->post('locanamespecies'),
            'photo_references' => $this->input->post('reference_photo_ff'),
            'species_codegen' => $this->input->post('gencodespecies'),
        ];
                $query = $this->pamain_model->createPAbiologicalFF($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new biological species';
                }else{

                }
        echo json_encode($output);
}

public function insertPABiologicalFF2()
{
        $rel_data1 = $this->input->post('tablepopulation2');
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'id_genus_get' => $this->input->post('getcommonid2',true),
            'chk_forest' => $this->input->post('chk_forest2')==null ? 0 : 1,
            'chk_inland' => $this->input->post('chk_inland2')==null ? 0 : 1,
            'chk_cave' => $this->input->post('chk_cave2')==null ? 0 : 1,
            'chk_coral' => $this->input->post('chk_coral2')==null ? 0 : 1,
            'chk_seagrass' => $this->input->post('chk_seagrass2')==null ? 0 : 1,
            'chk_mangrove' => $this->input->post('chk_mangrove2')==null ? 0 : 1,
            'chk_mudflats' => $this->input->post('chk_tidal2')==null ? 0 : 1,
            'chk_coastalwetland' => $this->input->post('chk_coastalwetland2')==null ? 0 : 1,
            'chk_grassland' => $this->input->post('chk_grassland2')==null ? 0 : 1,
            'localname' => $this->input->post('locanamespecies2'),
            'photo_references' => $this->input->post('reference_photo_ff2'),
            // 'estimate_population' => $this->input->post('populationcount2'),
            'species_codegen' => $this->input->post('gencodespecies'),
        ];
                $query = $this->pamain_model->createPAbiologicalFF2($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new biological species';
                }else{

                }
        echo json_encode($output);
}

function insertspeciesimage()
 {
    sleep(3);
        // if($_FILES["files_species"]["name"] != '')
        // {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/species_img_local';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_species"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_species"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_species"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_species"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_species"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_species"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/species_img_local/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'species_id' => $this->input->post('getcommonid',true),
            'species_image' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d"),
            'species_codegen' => $this->input->post('gencodespecies'),

          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createspeciesimage($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        // }
 }

 function insertspeciesimage2()
 {
    sleep(3);
        if($_FILES["files_species2"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/species_img_local';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_species2"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_species2"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_species2"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_species2"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_species2"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_species2"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/species_img_local/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'species_id' => $this->input->post('getcommonid2',true),
            'species_image' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d"),
            'species_codegen' => $this->input->post('gencodespecies'),

          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createspeciesimage($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insertspeciesimageEdit()
 {
    sleep(3);
        if($_FILES["files_speciesedit"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/species_img_local';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_speciesedit"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_speciesedit"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_speciesedit"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_speciesedit"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_speciesedit"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_speciesedit"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/species_img_local/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('ffb-gencode',true),
            'species_image' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d"),
            'species_codegen' => $this->input->post('ffb-gencode-species'),

          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createspeciesimage($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_facility_multiimg()
 {
    sleep(3);
        if($_FILES["facility_img_files"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/facility_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["facility_img_files"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["facility_img_files"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["facility_img_files"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["facility_img_files"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["facility_img_files"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["facility_img_files"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/facility_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'facilitycode' => $this->input->post('facility-gencode',true),
            'facilities_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createfacilitymultiimg($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_1()
 {
    sleep(3);
        if($_FILES["attraction_img_file_1"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_1"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_1"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_1"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_1"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_1"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_1"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 1,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_2()
 {
    sleep(3);
        if($_FILES["attraction_img_file_2"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_2"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_2"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_2"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_2"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_2"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_2"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 2,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_3()
 {
    sleep(3);
        if($_FILES["attraction_img_file_3"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_3"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_3"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_3"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_3"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_3"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_3"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 3,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_4()
 {
    sleep(4);
        if($_FILES["attraction_img_file_4"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_4"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_4"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_4"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_4"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_4"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_4"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 4,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_5()
 {
    sleep(5);
        if($_FILES["attraction_img_file_5"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_5"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_5"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_5"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_5"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_5"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_5"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 5,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_6()
 {
    sleep(6);
        if($_FILES["attraction_img_file_6"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_6"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_6"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_6"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_6"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_6"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_6"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 6,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_7()
 {
    sleep(7);
        if($_FILES["attraction_img_file_7"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_7"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_7"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_7"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_7"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_7"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_7"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 7,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_8()
 {
    sleep(8);
        if($_FILES["attraction_img_file_8"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_8"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_8"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_8"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_8"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_8"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_8"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 8,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_9()
 {
    sleep(9);
        if($_FILES["attraction_img_file_9"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_9"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_9"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_9"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_9"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_9"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_9"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 9,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_10()
 {
    sleep(10);
        if($_FILES["attraction_img_file_10"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_10"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_10"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_10"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_10"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_10"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_10"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 10,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_11()
 {
    sleep(11);
        if($_FILES["attraction_img_file_11"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_11"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_11"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_11"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_11"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_11"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_11"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 11,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_12()
 {
    sleep(12);
        if($_FILES["attraction_img_file_12"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_12"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_12"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_12"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_12"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_12"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_12"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 12,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_13()
 {
    sleep(13);
        if($_FILES["attraction_img_file_13"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_13"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_13"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_13"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_13"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_13"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_13"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 13,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_14()
 {
    sleep(14);
        if($_FILES["attraction_img_file_14"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_14"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_14"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_14"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_14"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_14"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_14"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 14,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insert_activity_15()
 {
    sleep(15);
        if($_FILES["attraction_img_file_15"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["attraction_img_file_15"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attraction_img_file_15"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attraction_img_file_15"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attraction_img_file_15"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attraction_img_file_15"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attraction_img_file_15"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'ecogeneratedcode' => $this->input->post('tourism-gencode',true),
            'activty_code' => 15,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

  function editinsert_activity_1()
 {
    sleep(3);
        if($_FILES["edit-attraction_img_file_1"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $config['encrypt_name'] = true;
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_1"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_1"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_1"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_1"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_1"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_1"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 1,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_2()
 {
    sleep(3);
        if($_FILES["edit-attraction_img_file_2"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_2"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_2"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_2"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_2"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_2"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_2"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 2,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_3()
 {
    sleep(3);
        if($_FILES["edit-attraction_img_file_3"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_3"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_3"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_3"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_3"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_3"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_3"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 3,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_4()
 {
    sleep(4);
        if($_FILES["edit-attraction_img_file_4"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_4"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_4"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_4"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_4"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_4"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_4"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 4,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_5()
 {
    sleep(5);
        if($_FILES["edit-attraction_img_file_5"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_5"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_5"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_5"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_5"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_5"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_5"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 5,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_6()
 {
    sleep(6);
        if($_FILES["edit-attraction_img_file_6"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_6"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_6"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_6"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_6"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_6"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_6"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 6,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_7()
 {
    sleep(7);
        if($_FILES["edit-attraction_img_file_7"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_7"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_7"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_7"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_7"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_7"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_7"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 7,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_8()
 {
    sleep(8);
        if($_FILES["edit-attraction_img_file_8"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_8"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_8"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_8"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_8"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_8"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_8"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 8,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_9()
 {
    sleep(9);
        if($_FILES["edit-attraction_img_file_9"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_9"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_9"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_9"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_9"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_9"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_9"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 9,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_10()
 {
    sleep(10);
        if($_FILES["edit-attraction_img_file_10"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_10"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_10"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_10"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_10"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_10"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_10"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 10,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_11()
 {
    sleep(11);
        if($_FILES["edit-attraction_img_file_11"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_11"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_11"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_11"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_11"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_11"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_11"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 11,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_12()
 {
    sleep(12);
        if($_FILES["edit-attraction_img_file_12"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_12"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_12"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_12"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_12"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_12"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_12"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 12,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_13()
 {
    sleep(13);
        if($_FILES["edit-attraction_img_file_13"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_13"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_13"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_13"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_13"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_13"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_13"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 13,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_14()
 {
    sleep(14);
        if($_FILES["edit-attraction_img_file_14"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_14"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_14"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_14"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_14"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_14"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_14"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 14,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function editinsert_activity_15()
 {
    sleep(15);
        if($_FILES["edit-attraction_img_file_15"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-attraction_img_file_15"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-attraction_img_file_15"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-attraction_img_file_15"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-attraction_img_file_15"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-attraction_img_file_15"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-attraction_img_file_15"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/attraction_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('attraction-gencode',true),
            'ecogeneratedcode' => $this->input->post('attraction-gencode2',true),
            'activty_code' => 15,
            'activity_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createattractionactivity($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }


 function insertapasuinformation()
 {
    sleep(3);
        if($_FILES["apasuspecialorder"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/pamo_apasu_so_file';
         $config["allowed_types"] = 'pdf';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["apasuspecialorder"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["apasuspecialorder"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["apasuspecialorder"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["apasuspecialorder"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["apasuspecialorder"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["apasuspecialorder"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
          }

          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'apasu_code' => $this->input->post('apasucode',true),
            'file_name' => (!empty($filenames)?$filenames:""),
            'upload_on' => date("Y-m-d"),

          ];

                $query = $this->pamain_model->createapasufileso($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
         }
         echo $output;
        }
 }

 function insertapasuinformationEdit()
 {
    sleep(3);
        if($_FILES["edit-apasuspecialorder"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/pamo_apasu_so_file';
         $config["allowed_types"] = 'pdf';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-apasuspecialorder"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-apasuspecialorder"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-apasuspecialorder"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-apasuspecialorder"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-apasuspecialorder"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-apasuspecialorder"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
          }

          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('apasuinfo-gencode',true),
            'apasu_code' => $this->input->post('apasuinfo-gencode2',true),
            'file_name' => (!empty($filenames)?$filenames:""),
            'upload_on' => date("Y-m-d"),

          ];

                $query = $this->pamain_model->createapasufileso($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
         }
         echo $output;
        }
 }
public function apasuinfodisplay(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getapasuinfo($codegens);

        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_apasu; ?>" class="trow">
                <td class="hidden"><?php echo (!empty($row->generatedcode)?$row->generatedcode:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_code)?$row->apasu_code:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_fname)?$row->apasu_fname:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_mname)?$row->apasu_mname:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_lname)?$row->apasu_lname:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_office)?$row->apasu_office:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_position)?$row->apasu_position:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_mobile)?$row->apasu_mobile:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_email)?$row->apasu_email:"") ?></td>
                <td class="hidden"><?php echo (!empty($row->apasu_so)?$row->apasu_so:"") ?></td>
                <td><?php echo (!empty($row->apasu_fname)?$row->apasu_fname:"").(!empty($row->apasu_mname)?" ".$row->apasu_mname." ":"").(!empty($row->apasu_lname)?" ".$row->apasu_lname." ":"").(!empty($row->apasu_suffix)?$row->apasu_suffix:"") ?></td>
                <td><?php echo (!empty($row->apasu_sex)?$row->sexdesc:"") ?></td>
                <td>
                    <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/pamo_apasu_so_file/').$row->apasu_so ?>"><?php echo $row->apasu_so ?></a>
                </td>
                <td class="hidden"><?php echo (!empty($row->apasu_suffix)?$row->apasu_suffix:"") ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_apasu;?>" class="btn btn-info btn-xs" onclick="edit_apasuinformation(this)">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeapasuinfos" data-id="<?php echo $row->id_apasu ?>" title="Remove">Remove</i></button>
                    <input type="hidden" id="apasu12<?php echo $row->id_apasu;?>" value="<?php echo $row->apasu_sex ?>" />

                </td>

            </tr>
            <?php } ?>

<?php }

    public function refreshpasuinfoso(){
        $code=$this->input->post('codegens');
        $dd = $this->pamain_model->getapasuinfoSO($code);
        $pctr=0;foreach($dd as $cc):$pctr+=1;
        ?>
        <div id="divids<?php echo $cc->id_file_apasu?>" class="showdata">
        <button type="button" class="btn btn-danger removeapasusos" id="<?php echo $cc->id_file_apasu ?>" data-id="<?php echo $cc->id_file_apasu ?>" style="position: absolute;right: 25px">
            Remove
        </button>
        <fieldset>
            <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/pamo_apasu_so_file/').$cc->file_name ?>"><?php echo $cc->file_name ?></a>
        </fieldset>
        </div>
        <?php endforeach;
    }

 function insertcavesimage()
 {
    sleep(3);
        if($_FILES["files_caves"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/caves_image_upload';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_caves"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_caves"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_caves"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_caves"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_caves"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_caves"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/caves_image_upload/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'cavegenerator' => $this->input->post('cavegenerator',true),
            'cave_image_multi' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createcavesimage($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insertcavesimageEdit()
 {
    sleep(3);
        if($_FILES["edit-files_caves"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/caves_image_upload';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-files_caves"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-files_caves"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-files_caves"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-files_caves"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-files_caves"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-files_caves"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/caves_image_upload/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'cavegenerator' => $this->input->post('caves-gencodex',true),
            'cave_image_multi' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createcavesimage($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 public function fetchcaveimages(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllcavesimagess($codegens);
        foreach($datar as $row){
            $output .= '
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat removecavesimages gal-btn" data-id="'.$row->id_cave_image_multi.'" title="Remove">Remove</button>
                    <img src="'.base_url().'bmb_assets2/upload/caves_image_upload/'.$row->cave_image_multi.'" class="img-responsive img-thumbnail img-gallery" /><br>
                </div>

           ';
        }
        echo $output;

    }

    public function insertlegalstatus()
{
        $output = array();
        $rel_data1 = $this->input->post('tablehistory');
        $data['palegalstatus'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'legis_id' => $this->input->post('legis_id',true),
            'legal_generatedcode' => $this->input->post('legalcodegenerated',true),
            'legis_no' => $this->input->post('legisno',true),
            'date_month' => $this->input->post('date_month',true),
            'date_day' => $this->input->post('date_day',true),
            'date_year' => $this->input->post('date_year',true),
            'legis_area' => str_replace(',','',$this->input->post('legis_area',true)),
            'nipsub_id' => $this->input->post('paclasssub',true),
            'nip_id' => $this->input->post('nip_id',true),
            'pa_category_id' => $this->input->post('pacategory_id',true),
            'pa_category_other' => $this->input->post('othernipascategory',true),
            'prev_category' => $this->input->post('previouscat',true),
            'chk_compilemap' => $this->input->post('chk_compileMap',true) ==null ?0:1,
            'chk_publicconsult' => $this->input->post('chk_pasasrpao',true) ==null ?0:1,
            'chk_pasa' => $this->input->post('chk_pubconsult',true) ==null ?0:1,
            'chk_inipaplan' => $this->input->post('chk_initplan',true) ==null ?0:1,
            'chk_regionalreview' => $this->input->post('chk_regionalreview',true) ==null ?0:1,
            'chk_nationalreview' => $this->input->post('chk_nationalreview',true) ==null ?0:1,
            'chk_presidentialproc' => $this->input->post('chk_presproc',true) ==null ?0:1,
            'chk_congressenactment' => $this->input->post('chk_congressenact',true) ==null ?0:1,
            'compilemap_file' => $this->input->post('legis_compileMap_span',true),
            'compilemap_shp' => $this->input->post('legis_compileMapshp_span',true),
            'pasa_file' => $this->input->post('legis_pasasrpao_span',true),
            'cert_proceed_file' => $this->input->post('legis_certproceed_span',true),
            'cert_consult_file' => $this->input->post('legis_certconsult_span',true),
            'inipaplan_file' => $this->input->post('legis_paplan_span',true),
            'regionalreview_file' => $this->input->post('legis_regionalreview_span',true),
            'regional_complete_sw_file' => $this->input->post('legis_regionalreviewstaffwork_span',true),
            'regional_endorsement_file' => $this->input->post('legis_regionalreviewendorse_span',true),
            'nationalreview_file' => $this->input->post('legis_nationalreview_span',true),
            'national_complete_sw_file' => $this->input->post('legis_nationalreviewstaffwork_span',true),
            'national_endorsement_file' => $this->input->post('legis_nationalreviewendorse_span',true),
            'presidentialproc_file' => $this->input->post('legis_presproc_span',true),
            'presproc_recommendation_file' => $this->input->post('legis_presprocrecom_span',true),
            'congressenactment_file' => $this->input->post('legis_congressenact_span',true),
        ];
                $query = $this->pamain_model->createPAlegalstatus($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new legal status';
                }else{

                }
        echo json_encode($output);
}

public function insertInternationRecogs()
{
        $output = array();
        $rel_data1 = $this->input->post('tablecrit');
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'recognition' => $this->input->post('recognition',true),
            'recognition_code' => $this->input->post('recognitioncodes',true),
            'recog_sub' => $this->input->post('int_crit',true),
            'siteno' => $this->input->post('sitenumber',true),
            'month_declared' => $this->input->post('date_declared_month',true),
            'year_declared' => $this->input->post('date_declared_year',true),
            'day_declared' => $this->input->post('date_declared_day',true),
            'inscribed' => $this->input->post('inscribe',true),
            'file_attached_map' => $this->input->post('recog_shapefile_span',true),
            'recog_area_ha' => str_replace(',','',$this->input->post('recog_area_has',true)),
            'recog_area_sq' => str_replace(',','',$this->input->post('recog_area_sqr',true)),
        ];
                $query = $this->pamain_model->createPAinterRecogs($postData,$rel_data1);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new International Recognition';
                }else{

                }
        echo json_encode($output);
}

public function insertforestformation()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'forest_formation' => $this->input->post('forest_formation',true),
            'forest_formation_area' => str_replace(',','',$this->input->post('forest_formation_area',true)),
            'forest_formation_remarks' => $this->input->post('forest_formation_remarks',true),
            'date_created' => date("Y-m-d H:i:s"),
        ];
                $query = $this->pamain_model->createPAforestformation($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Forest Formation details';
                }else{

                }
        echo json_encode($output);
}

    public function insertinlandNatural()
    {
        if(!empty($_FILES['zip_shpfile_inland']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/iwshp';
            $config['file_name'] = $_FILES['zip_shpfile_inland']['name'];
            $config['allowed_types'] = 'zip';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('zip_shpfile_inland')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['pic_inlandimg']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/iwimg';
            $config['file_name'] = $_FILES['pic_inlandimg']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            $config['quality'] = '60%';
            $config['width'] = 200;
            $config['height'] = 200;
            $this->load->library('image_lib', $config);
            $this->image_lib->resize();
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_inlandimg')){
                $uploadDatapic = $this->upload->data();
                $filenamespic = $uploadDatapic['file_name'];
            }
        }

            $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'iw_name' => $this->input->post('iwname',true),
            'iw_province' => $this->input->post('iwprovid',true),
            'iw_municipal' => $this->input->post('iwmunid',true),
            'iw_area' => str_replace(',','',$this->input->post('iwarea',true)),
            'iw_long' => $this->input->post('iwddlongoutput',true),
            'iw_lat' => $this->input->post('iwddlatoutput',true),
            'iw_longitude_dms_direction' => $this->input->post('iw_longitude_dms_direction',true),
            'iw_longitude_dms_degrees' => $this->input->post('iw_longitude_dms_degrees',true),
            'iw_longitude_dms_minutes' => $this->input->post('iw_longitude_dms_minutes',true),
            'iw_longitude_dms_seconds' => $this->input->post('iw_longitude_dms_seconds',true),
            'iw_latitude_dms_direction' => $this->input->post('iw_latitude_dms_direction',true),
            'iw_latitude_dms_degrees' => $this->input->post('iw_latitude_dms_degrees',true),
            'iw_latitude_dms_minutes' => $this->input->post('iw_latitude_dms_minutes',true),
            'iw_latitude_dms_seconds' => $this->input->post('iw_latitude_dms_seconds',true),
            'iw_year_assessed' => $this->input->post('iwassessed',true),
            'iw_description' => $this->input->post('iw_desc',true),
            'wetland_type' => $this->input->post('iwtype',true),
            'waterbody_classID' => $this->input->post('inlandwaterbodyclass',true),
            'waterbodysub_classID' => $this->input->post('inlandwaterbodyclassSub',true),
            'down_long_dms_direction' => $this->input->post('midstream_longitude_dms_direction',true),
            'down_long_dms_degrees' => $this->input->post('midstream_longitude_dms_degrees',true),
            'down_long_dms_minutes' => $this->input->post('midstream_longitude_dms_minutes',true),
            'down_long_dms_seconds' => $this->input->post('midstream_longitude_dms_seconds',true),
            'down_long_dms_convert' => $this->input->post('midstreamddlongoutput',true),
            'down_lat_dms_direction' => $this->input->post('midstream_latitude_dms_direction',true),
            'down_lat_dms_degrees' => $this->input->post('midstream_latitude_dms_degrees',true),
            'down_lat_dms_minutes' => $this->input->post('midstream_latitude_dms_minutes',true),
            'down_lat_dms_seconds' => $this->input->post('midstream_latitude_dms_seconds',true),
            'down_lat_dms_convert' => $this->input->post('midstreamddlatoutput',true),
            'mid_long_dms_direction' => $this->input->post('downstream_longitude_dms_direction',true),
            'mid_long_dms_degrees' => $this->input->post('downstream_longitude_dms_degrees',true),
            'mid_long_dms_minutes' => $this->input->post('downstream_longitude_dms_minutes',true),
            'mid_long_dms_seconds' => $this->input->post('downstream_longitude_dms_seconds',true),
            'mid_long_dms_convert' => $this->input->post('downstreamddlongoutput',true),
            'mid_lat_dms_direction' => $this->input->post('downstream_latitude_dms_direction',true),
            'mid_lat_dms_degrees' => $this->input->post('downstream_latitude_dms_degrees',true),
            'mid_lat_dms_minutes' => $this->input->post('downstream_latitude_dms_minutes',true),
            'mid_lat_dms_seconds' => $this->input->post('downstream_latitude_dms_seconds',true),
            'mid_lat_dms_convert' => $this->input->post('downstreamddlatoutput',true),
            'up_long_dms_direction' => $this->input->post('upstream_longitude_dms_direction',true),
            'up_long_dms_degrees' => $this->input->post('upstream_longitude_dms_degrees',true),
            'up_long_dms_minutes' => $this->input->post('upstream_longitude_dms_minutes',true),
            'up_long_dms_seconds' => $this->input->post('upstream_longitude_dms_seconds',true),
            'up_long_dms_convert' => $this->input->post('upstreamddlongoutput',true),
            'up_lat_dms_direction' => $this->input->post('upstream_latitude_dms_direction',true),
            'up_lat_dms_degrees' => $this->input->post('upstream_latitude_dms_degrees',true),
            'up_lat_dms_minutes' => $this->input->post('upstream_latitude_dms_minutes',true),
            'up_lat_dms_seconds' => $this->input->post('upstream_latitude_dms_seconds',true),
            'up_lat_dms_convert' => $this->input->post('upstreamddlatoutput',true),
            'inland_map_img' => (!empty($filenamespic)?$filenamespic:""),
            'inland_shp_file' => $this->input->post('shpzip_iw_text',true),
        ];
            $query = $this->pamain_model->createPAWetlandNatural($postData);
            if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Inland Wetland Natural';
                }else{

                }
                echo json_encode($output);
    }

    public function insertcaveinfo()
    {
         date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'cavegenerator' => $this->input->post('cavegenerator',true),
            'caves_area' => str_replace(',','',$this->input->post('caves_area',true)),
            'caves_name' => $this->input->post('cave_name',true),
            'cave_class_sub' => $this->input->post('cavesubclass',true),
            'cave_status' => $this->input->post('cavestatus',true),
            'cave_province' => $this->input->post('caveprovid',true),
            'cave_municipal' => $this->input->post('cavemunid',true),
            'cave_barangay' => $this->input->post('cavebarid',true),
            'land_status' => $this->input->post('caveclass',true),
            'cave_longitude_dms_direction' => $this->input->post('clongdmsdir',true),
            'cave_longitude_dms_degrees' => $this->input->post('clongdmsdegree',true),
            'cave_longitude_dms_minutes' => $this->input->post('clongdmsminute',true),
            'cave_longitude_dms_seconds' => $this->input->post('clongdmssecond',true),
            'cave_latitude_dms_direction' => $this->input->post('clatdmsdir',true),
            'cave_latitude_dms_degrees' => $this->input->post('clatdmsdegree',true),
            'cave_latitude_dms_minutes' => $this->input->post('clatdmsminute',true),
            'cave_latitude_dms_seconds' => $this->input->post('clatdmssecond',true),
            'x_long' => $this->input->post('clongoutputdd',true),
            'y_lat' => $this->input->post('clatoutputdd',true),
            'cave_map_shpfile' => $this->input->post('old_shpfilecave',true),
            'date_created' => $now,

        ];
            $query = $this->pamain_model->createcaveinfo($postData);
            if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
                echo json_encode($output);
    }

public function insertapasusss()
    {
         date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');
            $data['apasuinfo'] = (object)$postapasuinfo = [
            'generatedcode' => $this->input->post('gencode',true),
            'apasu_code' => $this->input->post('apasucode',true),
            'apasu_fname' => $this->input->post('apasu_fname'),
            'apasu_mname' => $this->input->post('apasu_mname'),
            'apasu_lname' => $this->input->post('apasu_lname'),
            'apasu_office' => $this->input->post('apasu_officeAddress'),
            'apasu_sex' => $this->input->post('apasu_sex'),
            'apasu_position' => $this->input->post('apasu_position'),
            'apasu_mobile' => $this->input->post('apasu_mobile'),
            'apasu_email' => $this->input->post('apasu_email'),
            'apasu_so' => $this->input->post('apasusofile'),
            'apasu_suffix' => $this->input->post('apasu_suffix'),
          ];
            $query = $this->pamain_model->createApasuinfo($postapasuinfo);
            if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
                echo json_encode($output);
    }
    public function insertinlandHumanmade()
    {
        if(!empty($_FILES['zip_shpfile_hinland']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/humanmade_shp';
            $config['file_name'] = $_FILES['zip_shpfile_hinland']['name'];
            $config['allowed_types'] = 'zip';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('zip_shpfile_hinland')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['pic_hinlandimg']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/humanmade_map';
            $config['file_name'] = $_FILES['pic_hinlandimg']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            $config['quality'] = '60%';
            $config['width'] = 200;
            $config['height'] = 200;
            $this->load->library('image_lib', $config);
            $this->image_lib->resize();
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_hinlandimg')){
                $uploadDatapic = $this->upload->data();
                $filenamespic = $uploadDatapic['file_name'];
            }
        }

            $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'hiw_name' => $this->input->post('hiwname',true),
            'hiw_province' => $this->input->post('hiwprovid',true),
            'hiw_municipal' => $this->input->post('hiwmunid',true),
            'hiw_area' => str_replace(',','',$this->input->post('hiwarea',true)),
            'hiw_long' => $this->input->post('hiwddlongoutput',true),
            'hiw_lat' => $this->input->post('hiwddlatoutput',true),
            'hiw_longitude_dms_direction' => $this->input->post('hiw_longitude_dms_direction',true),
            'hiw_longitude_dms_degrees' => $this->input->post('hiw_longitude_dms_degrees',true),
            'hiw_longitude_dms_minutes' => $this->input->post('hiw_longitude_dms_minutes',true),
            'hiw_longitude_dms_seconds' => $this->input->post('hiw_longitude_dms_seconds',true),
            'hiw_latitude_dms_direction' => $this->input->post('hiw_latitude_dms_direction',true),
            'hiw_latitude_dms_degrees' => $this->input->post('hiw_latitude_dms_degrees',true),
            'hiw_latitude_dms_minutes' => $this->input->post('hiw_latitude_dms_minutes',true),
            'hiw_latitude_dms_seconds' => $this->input->post('hiw_latitude_dms_seconds',true),
            'hiw_year_assessed' => $this->input->post('hiwassessed',true),
            'hiw_description' => $this->input->post('hiw_desc',true),
            'hwetland_type' => $this->input->post('hiwtype',true),
            'hwaterbody_classID' => $this->input->post('hinlandwaterbodyclass',true),
            'hwaterbodysub_classID' => $this->input->post('hinlandwaterbodyclassSub',true),
            'hdown_long_dms_direction' => $this->input->post('hmidstream_longitude_dms_direction',true),
            'hdown_long_dms_degrees' => $this->input->post('hmidstream_longitude_dms_degrees',true),
            'hdown_long_dms_minutes' => $this->input->post('hmidstream_longitude_dms_minutes',true),
            'hdown_long_dms_seconds' => $this->input->post('hmidstream_longitude_dms_seconds',true),
            'hdown_long_dms_convert' => $this->input->post('hmidstreamddlongoutput',true),
            'hdown_lat_dms_direction' => $this->input->post('hmidstream_latitude_dms_direction',true),
            'hdown_lat_dms_degrees' => $this->input->post('hmidstream_latitude_dms_degrees',true),
            'hdown_lat_dms_minutes' => $this->input->post('hmidstream_latitude_dms_minutes',true),
            'hdown_lat_dms_seconds' => $this->input->post('hmidstream_latitude_dms_seconds',true),
            'hdown_lat_dms_convert' => $this->input->post('hmidstreamddlatoutput',true),
            'hmid_long_dms_direction' => $this->input->post('hdownstream_longitude_dms_direction',true),
            'hmid_long_dms_degrees' => $this->input->post('hdownstream_longitude_dms_degrees',true),
            'hmid_long_dms_minutes' => $this->input->post('hdownstream_longitude_dms_minutes',true),
            'hmid_long_dms_seconds' => $this->input->post('hdownstream_longitude_dms_seconds',true),
            'hmid_long_dms_convert' => $this->input->post('hdownstreamddlongoutput',true),
            'hmid_lat_dms_direction' => $this->input->post('hdownstream_latitude_dms_direction',true),
            'hmid_lat_dms_degrees' => $this->input->post('hdownstream_latitude_dms_degrees',true),
            'hmid_lat_dms_minutes' => $this->input->post('hdownstream_latitude_dms_minutes',true),
            'hmid_lat_dms_seconds' => $this->input->post('hdownstream_latitude_dms_seconds',true),
            'hmid_lat_dms_convert' => $this->input->post('hdownstreamddlatoutput',true),
            'hup_long_dms_direction' => $this->input->post('hupstream_longitude_dms_direction',true),
            'hup_long_dms_degrees' => $this->input->post('hupstream_longitude_dms_degrees',true),
            'hup_long_dms_minutes' => $this->input->post('hupstream_longitude_dms_minutes',true),
            'hup_long_dms_seconds' => $this->input->post('hupstream_longitude_dms_seconds',true),
            'hup_long_dms_convert' => $this->input->post('hupstreamddlongoutput',true),
            'hup_lat_dms_direction' => $this->input->post('hupstream_latitude_dms_direction',true),
            'hup_lat_dms_degrees' => $this->input->post('hupstream_latitude_dms_degrees',true),
            'hup_lat_dms_minutes' => $this->input->post('hupstream_latitude_dms_minutes',true),
            'hup_lat_dms_seconds' => $this->input->post('hupstream_latitude_dms_seconds',true),
            'hup_lat_dms_convert' => $this->input->post('hupstreamddlatoutput',true),
            'hinland_map_img' => (!empty($filenamespic)?$filenamespic:""),
            'hinland_shp_file' => (!empty($filenames)?$filenames:""),
        ];
            $query = $this->pamain_model->createPAWetlandHumanMade($postData);
            if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Inland Wetland Humanmade';
                }else{

                }
                echo json_encode($output);
    }

public function insertwdpalocations()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'wdpa_id' => $this->input->post('wdpaiso',true),
            'date_created' => date("Y-m-d H:i:s"),
        ];
                $query = $this->pamain_model->createPAwdpaLocations($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Sub-national location';
                }else{

                }
        echo json_encode($output);
}

public function fetchWDPALocationsDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllwdpasublocDetails($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_wdpa_loc; ?>" class="trow">
                <td><?php echo $row->iso_value."(".$row->iso_desc.")"; ?> <button type="button" class="btn btnbtn btn-danger btn-xs removewdaplocs" data-id="<?php echo $row->id_wdpa_loc ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

public function insertvegetativecover()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'vegetative_desc' => $this->input->post('vegetative',true),
            'vegetative_area' => str_replace(',','',$this->input->post('vegetative_area',true)),
            'vremarks' => $this->input->post('vegetative_remarks',true),
            'date_created' => date("Y-m-d H:i:s"),
        ];
                $query = $this->pamain_model->createPAvegetative($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new Forest Formation details';
                }else{

                }
        echo json_encode($output);
}

    public function get_dataDashboard(){
        $codegens = $this->input->post('codegens');
        $user_id     = $this->session->userdata('user_id');
        $data = $this->pamain_model->getAllPAs($user_id);
        $datalegal = $this->pamain_model->getAllLegislationbyIDs($codegens,$user_id);
        $datalocation = $this->pamain_model->getAllUsersIDs($codegens,$user_id);
        foreach ($data as $row): ?>
            <tr id="<?php echo $row->id_main; ?>" class="trows">
                <td colspan="2"><div class="annoying-warning"><?php echo strtoupper($row->pa_name) ?></div></td>
            </tr>
            <tr>
                <td width=50%><img src="<?php echo base_url().'bmb_assets2/upload/pa_profile_pic/'.(!empty($row->pa_image)?$row->pa_image:"nophoto.jpg") ?>" style="display: block; margin-left: auto; margin-right: auto; width: 100%;" /></td>
                <td style="padding-left: 5%;padding-bottom: 10%">
                    <!-- <b>Category : </b><br> <?php echo (!empty($row->other_category)?$row->categoryName."(".$row->other_category.")":$row->categoryName) ?><br> -->
                    <b>Total Area : </b><br> <?php echo number_format($row->marine_area + $row->terrestrial,2)?> has<br>
                    <b>Legal Status and Legal Basis : </b><br>
                    <?php foreach($datalegal as $rowl):
                            if (!empty($rowl->nipsub_id) || $rowl->nipsub_id==0): ?>
                            <div class="col-xs-12 container-boxes">
                                <div class="row-boxes">
                                    <?php echo $rowl->nipDesc." ".$rowl->sub_nip_description."<br>".$rowl->LegisDesc." No. ".$rowl->legis_no."<br>Date issued: ".(!empty($rowl->month)?$rowl->month." ".$rowl->date_year."<br>":"<br>"); ?>
                                </div>
                            </div>
                            <?php endif;
                           endforeach; ?><br>
                    <div class="col-xs-12 col-lg-12"><b>Location(<i>Format: Barangay,Municipal,Province,Region</i>) : </b><br>
                        <?php foreach($datalocation as $rowloc): ?>
                            <?php echo (!empty($rowloc->barangayName)?$rowloc->barangayName.",":"").$rowloc->municipalName." (".$rowloc->cong_dist.")".", ".$rowloc->provinceName.", ".$rowloc->regionName."<br>" ?>
                        <?php endforeach; ?>
                    </div>
                    <hr><div class="col-xs-12 col-lg-12"><a type="button" class="table-btn btn btn-warning" href="././pamain/edit/<?php echo $row->gencod ?>" title="Edit Information" >Edit</a></div>
                </td>
            </tr>
        <?php endforeach;
    }

    public function get_datases()
    {
        $draw   = intval($this->input->get("draw"));
        $start  = intval($this->input->get("start"));
        $length = intval($this->input->get("length"));
        $user_id = $this->session->userdata('user_id');
        $counter = 1;

        $this->db->select("*");
        $this->db->from('tblpamain');
        $this->db->where('pasu_id',$user_id);
        $query = $this->db->get();

        $data = [];
        foreach ($query->result() as $r) {
            $data[] = array(
                $counter,//this if for auto number
                ucwords($r->pa_name),
                "<a type='button' class='btn btn-flat btn-success' href='edit/".$r->generatedcode."' title='Edit' ><i class='ti-pencil-alt'></i></a>"." ".
                "<a type='button' class='btn btn-flat btn-warning' href='../report/printpdf/pdffilepa/".$r->generatedcode."' target='_blank' title='PDF' data-id=".$r->generatedcode."><i class='ti-file'></i></a>"." ".
                "<a type='button' class='btn btn-flat btn-danger btn-deletepamain' title='Delete' data-id=".$r->generatedcode."><i class='ti-close'></i></a>"
            );
            $counter++;
        }

        $result = array(
            "draw" => $draw,
            "recordsTotal" => $query->num_rows(),
            "recordsFiltered" => $query->num_rows(),
            "data" => $data
        );

        echo json_encode($result);
        exit();
    }

    public function pambFileUploads()
    {
        $data = array();
        // If file upload form submitted
        if($this->input->post('fileSubmit') && !empty($_FILES['files']['name'])){
            $filesCount = count($_FILES['files']['name']);
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['file']['name']     = $_FILES['files']['name'][$i];
                $_FILES['file']['type']     = $_FILES['files']['type'][$i];
                $_FILES['file']['tmp_name'] = $_FILES['files']['tmp_name'][$i];
                $_FILES['file']['error']     = $_FILES['files']['error'][$i];
                $_FILES['file']['size']     = $_FILES['files']['size'][$i];

                // File upload configuration
                $uploadPath = 'bmb_assets2/upload/pamb_file';
                $config['upload_path'] = $uploadPath;
                $config['allowed_types'] = 'jpg|jpeg|png|gif';

                // Load and initialize upload library
                $this->load->library('upload', $config);
                $this->upload->initialize($config);

                // Upload file to server
                if($this->upload->do_upload('file')){
                    // Uploaded file data
                    $fileData = $this->upload->data();
                    $uploadData[$i]['file_name'] = $fileData['file_name'];
                    $uploadData[$i]['uploaded_on'] = date("Y-m-d H:i:s");
                }
            }

            if(!empty($uploadData)){
                // Insert files data into the database
                $insert = $this->pamain_model->insert($uploadData);

                // Upload status message
                $statusMsg = $insert?'Files uploaded successfully.':'Some problem occurred, please try again.';
                $this->session->set_flashdata('statusMsg',$statusMsg);
            echo json_encode(['result' => 'things you want to show']);

            }
        }

        // Get files data from the database
        $data['files'] = $this->pamain_model->getRows();

        // Pass the files data to view
        // $this->load->view('upload_files/index', $data);
    }

    public function pambFileUpload()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['pambFile']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/pamb_file';
            $config['file_name'] = $_FILES['pambFile']['name'];
            $config['allowed_types'] = 'xlsx|csv|xls|docx|doc|DOC|DOCX';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pambFile')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_pamb_file') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainPambFile'] = (object)$postDataPambFile = [
            'generatedcode '    => $this->input->post('gencode',true),
            'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'uploaded_on'       =>  date("Y-m-d H:i:s")
        ];
        }else{
        $data['pamainPambFile'] = (object)$postDataPambFile = [
            'generatedcode '    => $this->input->post('gencode',true),
            'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'uploaded_on'       =>  date("Y-m-d H:i:s")
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No Document upload';
            } else {
               if(empty($postDataPambFile['id_pamb_file'])){
                $query = $this->pamain_model->createPambFile($postDataPambFile);
                if($query){
                $output['status'] = 'Document successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No document upload';
                }
            }
            }


        }
        $data['files'] = $this->pamain_model->getRows();
        echo json_encode($output);
    }

    public function fetchPAMBFile(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllPAMBFile($codegens);
        foreach($data as $row){
            ?>

            <tr>
                <td><a href="<?php echo base_url('bmb_assets2/upload/pamb_file/').$row->file_name ?>"><?php echo $row->file_name ?></a></td>
                <td><?php echo '<p>'.$row->uploaded_on.'</p>'; ?></td>
                <td><button type="button" class="btn btn-danger btn-flat removePAMBFile" data-id="<?php echo $row->id_pamb_file ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deletePAMBFile($id = null)
        {
            $sql1 = $this->db->where('id_pamb_file',$id)
                                            ->get('tblpambmemberfile')
                                            ->row();
            // unlink('bmb_assets2/upload/pamb_file/'.$sql1->file_name);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpambmemberfile WHERE id_pamb_file = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

	public function index()
	{

		$data['page_title'] = 'Create Protected Area';
        $data['map'] = $this->googlemap->create_map();
		$data['pamain'] = (object)$postData = [
            'pa_name'       => $this->input->post('pa_name',true),
            'formerpaname'  => $this->input->post('formerpa_name',true),
            'landmark'              => $this->input->post('landmark',true),
			'pamb_approve' 	=> $this->input->post('pambcheck')==null ? 0 : 1,
			'id_main'		=> $this->input->post('id_main',true),
			'pasu_id'		=> $this->input->post('pasu_id',true),
			'generatedcode'	=> $this->input->post('gencode',true),
            'area'          => $this->input->post('area',true),
            'terrestrial'   => $this->input->post('terrestrial',true),
            'buffer'        => $this->input->post('buffer',true),
            'marine_area'   => $this->input->post('marine',true),
			'nip_id'		=> $this->input->post('terrestrial',true),
            'nipsub_id'     => $this->input->post('paclasssub',true),
			'pacategory_id'	=> $this->input->post('pacategory_id',true),
            'other_category'         => $this->input->post('other_category',true),
			'cpabi_id'		=> $this->input->post('cpabi_id',true),
			'tbz_id'		=> $this->input->post('tbz_id',true),
			'pamb_month'	=> $this->input->post('pamb_month',true),
			'pamb_day'		=> $this->input->post('pamb_day',true),
			'pamb_year'		=> $this->input->post('pamb_year',true),
			'nipas_mapstd'	=> $this->input->post('nipas_mapstd',true),
			'nipas_pasa'	=> $this->input->post('nipas_pasa',true),
			'nipas_ipap'	=> $this->input->post('nipas_ipap',true),
			'nipas_delineation'	=> $this->input->post('nipas_delineation',true),
			'nipas_proclaimed'	=> $this->input->post('nipas_proclaimed',true),
			'nipas_legislated'	=> $this->input->post('nipas_legislated',true),
			'nipas_demarcation'	=> $this->input->post('nipas_demarcation',true),
			'nipas_pamp'	=> $this->input->post('nipas_pamp',true),
            'nipas_ipaf'    => $this->input->post('nipas_ipaf',true),
			'nipas_sapa'	=> $this->input->post('nipas_sapa',true),
            'geographic_long1'    => $this->input->post('geographic_long1',true),
            'geographic_long2'    => $this->input->post('geographic_long2',true),
            'geographic_lat1'    => $this->input->post('geographic_lat1',true),
            'geographic_lat2'    => $this->input->post('geographic_lat2',true),
            'pa_boundary'    => $this->input->post('pa_boundary',true),
            'pa_boundary_north'    => $this->input->post('pa_boundary_north',true),
            'pa_boundary_east'    => $this->input->post('pa_boundary_east',true),
            'pa_boundary_west'    => $this->input->post('pa_boundary_west',true),
            'pa_boundary_south'    => $this->input->post('pa_boundary_south',true),
            'landuses'    => $this->input->post('landuses',true),
            'boundary_upper'              => $this->input->post('boundary_upper',true),
            'iucn_cat'      => $this->input->post('iucn_cat',true),
            'accessibility'    => $this->input->post('accessibility',true),
            'elevation_highest'    => $this->input->post('elevation_highest',true),
            'elevation_lowest'    => $this->input->post('elevation_lowest',true),
            'topology'    => $this->input->post('topology',true),
            'climate'    => $this->input->post('climate',true),
            'hydrology'    => $this->input->post('hydrology',true),
            'location_details'    => $this->input->post('location_details',true),
            'existing_landuse'    => $this->input->post('existing_landuse',true),
            'landcover'    => $this->input->post('landcover',true),
            'landslide'    => $this->input->post('landslide',true),
            'flooding'    => $this->input->post('flooding',true),
            'sealevelrise'    => $this->input->post('sealevelrise',true),
            'tsunami'    => $this->input->post('tsunami',true),
            'cultural_resource'    => $this->input->post('cultural_resource',true),
            'politics'    => $this->input->post('politics',true),
            'belief'    => $this->input->post('belief',true),
            'archeology'    => $this->input->post('archeology',true),
            'ethinicity'    => $this->input->post('ethinicity',true),
            'local_inter_knowledge_practices'    => $this->input->post('local_inter_knowledge_practices',true),
            'social_service'    => $this->input->post('social_service',true),
            'tourism'    => $this->input->post('tourism',true),
            'facilities'    => $this->input->post('facility',true),
            'science_research'    => $this->input->post('science_research',true),
            'educational'    => $this->input->post('educational',true),
            'reference'    => $this->input->post('reference',true),
            'image'    => $this->input->post('image',true),
            'kba'    => $this->input->post('kba',true),
            'forest_formation' => $this->input->post('forest_formation',true),
            'forest_formation_area' => $this->input->post('forest_formation_area',true),
            'wetland' => $this->input->post('wetland',true),
            'wetland_area' => $this->input->post('wetland_area',true),
            'inland' => $this->input->post('inland',true),
            'inland_area' => $this->input->post('inland_area',true),
            'institutional_profile' => $this->input->post('institutional_profile',true),
            'no_occupants'      => $this->input->post('occupants',true),
            'no_occupant_male'      => $this->input->post('occupants_male',true),
            'no_occupant_female'    => $this->input->post('occupants_female',true),
            'no_tenured_migrant'    => $this->input->post('migrant',true),
            'no_migrant_female'    => $this->input->post('migrant_female',true),
            'no_migrant_male'    => $this->input->post('migrant_male',true),
            'edit-appointment-sub' => $this->input->post('edit-appointment-sub',true),
            'firstname' => $this->input->post('firstname',true),
            'middlename' => $this->input->post('middlename',true),
            'lastname' => $this->input->post('lastname',true),
            'apasu_fname' => $this->input->post('apasu_fname',true),
            'apasu_mname' => $this->input->post('apasu_mname',true),
            'apasu_lname' => $this->input->post('apasu_lname',true),
            'apasu_officeaddress' => $this->input->post('apasu_officeaddress',true),
            'apasu_sex' => $this->input->post('apasu_sex',true),
            'apasu_mobile' => $this->input->post('apasu_mobile',true),
            'apasu_position' => $this->input->post('apasu_position',true),
            'apasu_email' => $this->input->post('apasu_email',true),
            'vegetative'  =>  $this->input->post('vegetative',true),
            'id_management'  =>  $this->input->post('id_management',true),
            'managementzone_image'  =>  $this->input->post('managementzone_image',true),
            'strict_protection_map'           => (!empty($filenames)?$filenames:$this->input->post('old_picture_strict')),
            'sexdesc'  =>  $this->input->post('sexdesc',true),
            'designation'  =>  $this->input->post('designation',true),
            'mobile'  =>  $this->input->post('mobile',true),
            'landline'  =>  $this->input->post('landline',true),
            'email'  =>  $this->input->post('email',true),
            'marine_buffer'  =>  $this->input->post('marine_buffer',true),
            'embeded_map'  =>  $this->input->post('embded_map_link',true),
            'wdpamarineid' => $this->input->post('wdpamarineid',true),
            'wdpanotake' => $this->input->post('wdpanotake',true),
            'wdpastatus' => $this->input->post('wdpastatus',true),
            'wdpayrstatus' => $this->input->post('wdpayrstatus',true),
            'wdpagovtype' => $this->input->post('wdpagovtype',true),
            'wdpaowntype' => $this->input->post('wdpaowntype',true),
            'wdpaverif' => $this->input->post('wdpaverif',true),
            'wdpaiso' => $this->input->post('wdpaiso',true),
            'wdpaid' => $this->input->post('wdpaid',true),
            'desig_type' => $this->input->post('desig_type',true),

		];
		$user_id = $this->session->userdata('user_id');
		$data['read'] = $this->dashboard_model->read_by_id($user_id);
        $data['classList']      = $this->pamain_model->classList();
		$data['classListsub']		= $this->pamain_model->classListsub();
		$data['categoryList']	= $this->pamain_model->categoryList();
		$data['cpabiList']		= $this->pamain_model->cpabiList($UserRegions);
        $data['zoneList']       = $this->pamain_model->zoneList();
        $data['zoneListm']       = $this->pamain_model->zoneListm();
		$data['monthList']		= $this->pamain_model->monthList();
        $data['monthListed']      = $this->pamain_model->monthListed();
        $data['progsourceoffund']      = $this->pamain_model->progsourceoffund();
        $data['progtypeoffund']      = $this->pamain_model->progtypeoffund();
        $data['progtypeofpayment']      = $this->pamain_model->progtypeofpayment();
        $data['projcurrency']      = $this->pamain_model->projcurrency();
        $data['programsector']      = $this->pamain_model->programsector();
        $data['citationlist']      = $this->pamain_model->citationlist();
        $data['lhpostatus']      = $this->pamain_model->lhpostatus();
		$data['yearList']		= $this->pamain_model->yearList();
		$data['dayList']		= $this->pamain_model->dayList();
        $data['appointment']    = $this->pamain_model->appointment();
        $UserRegions = $this->session->userdata('region');
		$data['regionList']	= $this->pamain_model->regionList($UserRegions);
        $data['region_demoList'] = $this->pamain_model->region_demoList($UserRegions);
        $data['appointment_status']    = $this->pamain_model->appointment_status();
        $data['sapa_devt']    = $this->pamain_model->sapa_devtlist();
        $data['iucn_category']    = $this->pamain_model->iucnCategory();
        $data['iucn_list']    = $this->pamain_model->iucnList();
        $data['residency_list_status']    = $this->pamain_model->residency_status();
        $data['desig_type']    = $this->pamain_model->desig_type();
        $data['wdpamarine']    = $this->pamain_model->wdpamarine();
        $data['wdpanotake']    = $this->pamain_model->wdpanotake();
        $data['wdpastatus']    = $this->pamain_model->wdpastatus();
        $data['wdpagovtype']    = $this->pamain_model->wdpagovtype();
        $data['wdpaowntype']    = $this->pamain_model->wdpaowntype();
        $data['wdpaverif']    = $this->pamain_model->wdpaverif();
        $data['wdpaiso']    = $this->pamain_model->wdpaiso();
        $data['clitype']    = $this->pamain_model->clitype();
        $data['existlanduse']    = $this->pamain_model->existlanduse();
        $data['slopecat']    = $this->pamain_model->slopecat();
        $data['fishdiversity']    = $this->pamain_model->fishdiversity();
        $data['fishcategorysa']    = $this->pamain_model->fishcategorysa();
        $data['fishspeciesdata']    = $this->pamain_model->fishspeciesdata();
        $data['fishdensity']    = $this->pamain_model->fishdensity();
        $data['fishbiomass']    = $this->pamain_model->fishbiomass();
        $data['riverbasinlist']    = $this->pamain_model->riverbasinlist();
        $data['bdfetyperegistration']    = $this->pamain_model->bdfetyperegistration();
        $data['sizeenterprise']    = $this->pamain_model->sizeenterprise();
        $data['bdfe_level']    = $this->pamain_model->bdfe_level();
        $data['visitoryesno'] = $this->pamain_model->yesorno();
        $data['feetype'] = $this->pamain_model->feetypeipaf();
        $data['quarter'] = $this->pamain_model->QuarterlyList();
        $data['donate'] = $this->pamain_model->donatelist();
        $data['vtrustfund'] =[
            '0'  => 'Select',
            '1' => 'Donation',
            '2' => 'Grants',
            '3' => 'Endowment'
            ];

        $data['vmodepayment'] =[
            '0'  => 'Select',
            '1' => 'In-kind',
            '2' => 'Cash'
            ];
        $data['multimedia'] = $this->pamain_model->cepa_multimedia();
        $data['multimedia2'] = $this->pamain_model->cepa_multimedia();
        $data['multimedia3'] = $this->pamain_model->cepa_multimedia();
        $data['multimedia4'] = $this->pamain_model->cepa_multimedia4();
        $data['cepa_event'] = $this->pamain_model->cepa_event();
        $data['iucncat']  = [
           ''  => 'Select IUCN Category',
        ];
        $data['visitorsforloc'] = $this->pamain_model->visitorsforloc();
        $data['kba'] =[
            ''  => 'Yes/No',
            '1' => 'Yes',
            '2' => 'No'
            ];
        $data['direct_long'] =[
            ''  => 'Select',
            '1' => 'East',
            '2' => 'West'
            ];
        $data['direct_lat'] =[
            ''  => 'Select',
            '1' => 'North',
            '2' => 'South'
            ];
        $data['whl'] =[
            ''  => 'Select',
            '1' => '1) Yes',
            '2' => '2) No'
            ];
        $data['splcategory'] =[
            ''  => 'Select',
            '1' => 'Terrestrial',
            '2' => 'Aquatic'
            ];
        $data['status'] =[
            ''  => 'Status',
            '1' => 'Active',
            '2' => 'Renew',
            '3' => 'Resigned',
            '4' => 'End of Contract'
            ];
        $data['cepa_activity'] = $this->pamain_model->cepa_activity_audience();
        $data['cepasouvenir'] = $this->pamain_model->cepasouvenir();
        // $data['cavestatus'] =[
        //     ''  => 'Status',
        //     '1' => 'Identified',
        //     '2' => 'Assessed',
        //     '3' => 'Classified'
        //     ];
        // $data['status_mngmtplan'] =[
        //     ''  => 'Status',
        //     '1' => 'Active',
        //     '2' => 'Pending',
        //     '3' => 'For review',
        //     '4' => 'Cancelled'
        //     ];
        $data['tenurestatus']       = $this->pamain_model->tenures_status();
        $data['seams_status']       = $this->pamain_model->seams_status();
        $data['mett_status']       = $this->pamain_model->mett_status();
        $data['ecoimpact_status']       = $this->pamain_model->ecoimpact_status();
        $data['nipselect']       = $this->pamain_model->nipselects();
        $data['status_mngmtplan']       = $this->pamain_model->mngmntplan_status();
        $data['ecotourism_activity']       = $this->pamain_model->ecotourismactivity();
        $data['pabstatus']       = $this->pamain_model->pabstatus();
        $data['province'] =[''  => 'Select Province'];
        $data['municipal'] =[''  => 'Select Municipality'];
        $data['barangay'] =[''  => 'Select Barangay'];
        $data['provincesList']       = $this->pamain_model->provinceListeds();
        $data['provinceList']       = $this->pamain_model->provinceListeds();
        $data['procList']       = $this->pamain_model->procList();
        $data['cave_landstat']       = $this->pamain_model->cavelandstat();
        $data['cave_type']       = $this->pamain_model->cavetype();
        $data['municipalss']       = $this->pamain_model->municipalss();
        $data['monthList'] = $this->pamain_model->monthList();
        $data['monthListed']      = $this->pamain_model->monthListed();
        $data['progsourceoffund']      = $this->pamain_model->progsourceoffund();
        $data['progtypeoffund']      = $this->pamain_model->progtypeoffund();
        $data['progtypeofpayment']      = $this->pamain_model->progtypeofpayment();
        $data['projcurrency']      = $this->pamain_model->projcurrency();
        $data['programsector']      = $this->pamain_model->programsector();
        $data['citationlist']      = $this->pamain_model->citationlist();
        $data['lhpostatus']      = $this->pamain_model->lhpostatus();
        $data['yearList'] = $this->pamain_model->yearList();
        $data['yearListed'] = $this->pamain_model->yearListed();
        $data['yearListedDisbursement'] = $this->pamain_model->yearListedDisbursement();
        $data['techcomm'] = $this->pamain_model->techcomm();
        $data['dayList'] = $this->pamain_model->dayList();
        $data['yearListedduration']     = $this->pamain_model->yearListedduration();
        $data['projstatus']     = $this->pamain_model->projstatus();
        $data['SpeciescategoryList'] = $this->pamain_model->SpeciescategoryList();
        $data['CommonListSpecies'] = $this->pamain_model->CommonListSpecies();
        $data['sexList'] = $this->pamain_model->sexList();
        $data['visitorspayment'] = $this->pamain_model->visitorspayment();
        $data['maritalStatus'] = $this->pamain_model->maritalStatus();
        $data['organizationposition'] = $this->pamain_model->organizationposition();
        $data['yearduration']     = $this->pamain_model->yearduration();
        $data['researchstatus']     = $this->pamain_model->researchstatus();
        $data['finespelaltiesdamages']     = $this->pamain_model->finespelaltiesdamages();
        $data['oldsubpariaListed']     = $this->pamain_model->oldsubpariaListed();
        $data['tribelist'] = $this->pamain_model->tribelist();
        $data['triberelation'] = $this->pamain_model->triberelation();
        $data['wcategory'] = $this->pamain_model->wcategory();
        $data['tappointment'] = $this->pamain_model->tappointment();
        $data['financialList'] = $this->pamain_model->financialList();
        $data['modepayment'] = $this->pamain_model->financialListsub();
        $data['recognitionList'] = $this->pamain_model->recognitionList();
        $data['fftype'] = $this->pamain_model->fftype();
        $data['iwtype'] = $this->pamain_model->iwtype();
        $data['householdid'] = $this->pamain_model->household();
        $data['hcc'] = $this->pamain_model->hcc();
        $data['hcccondition'] = $this->pamain_model->hcccondition();
        $data['tauscategory'] = $this->pamain_model->tauscategory();
        $data['seagrasscondition'] = $this->pamain_model->seagrasscondition();
        $data['seagrassdiversity'] = $this->pamain_model->seagrassdiversity();
        $data['mangrovescondition'] = $this->pamain_model->mangrovescondition();
        $data['mangroveregen'] = $this->pamain_model->mangroveregen();
        $data['mangrovesaverage'] = $this->pamain_model->mangrovesaverage();
        $data['mangrovesobservation'] = $this->pamain_model->mangrovesobservation();
        $data['mangrovesdiversity'] = $this->pamain_model->mangrovesdiversity();
        $data['coralspecies'] = $this->pamain_model->coralspecies();
        $data['seagrasspecies'] = $this->pamain_model->seagrasspecies();
        $data['mangrovespecies'] = $this->pamain_model->mangrovespecies();
        $data['floodingLegend'] =   $this->pamain_model->floodingLegend();
        $data['landslideLegend'] =   $this->pamain_model->landslideLegend();
        $data['threats_cat'] =   $this->pamain_model->threatsCategory();
        $data['nature_threats'] =   $this->pamain_model->nature_threats();
        $data['threats_rank'] =   $this->pamain_model->threatsrank();
        $data['lh_type'] = $this->pamain_model->lh_type();
        $data['lh_products'] = $this->pamain_model->lh_products();
        $data['waterclass'] = $this->pamain_model->waterclass();
        $data['waterqualitystatus'] = $this->pamain_model->waterqualitystatus();
        $data['inlandwaterclass'] = $this->pamain_model->inlandwaterclass();
        $data['hmwetland'] = $this->pamain_model->hiwtype();
        $data['cavestatus'] = $this->pamain_model->cavestatus();
        $data['fcondition'] = $this->pamain_model->fcondition();
        $data['facilityList'] = $this->pamain_model->facilityList();
        $data['tenurelist'] = $this->pamain_model->tenurelist();
        $data['landcover'] = $this->pamain_model->landcover();
        $data['content'] = $this->load->view('pasu/FormMain',$data,TRUE);
		$this->load->view('pasu/main_wrapper',$data);
	}

    public function upload()
    {
        sleep(3);
        if($_FILES["files"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/gallaries';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/gallaries/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode '    => $this->input->post('gencode',true),
            'path'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'created_at'       =>  date("Y-m-d H:i:s")
          ];
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                // $output['status'] = 'No Document upload';
            } else {
               // if(empty($postDataPambFile['id'])){
                $query = $this->pamain_model->insertGallery($postDataPambGallery);
                if($query){
                // $output['status'] = 'Document successfully uploaded';
                }else{
                $output['error'] = true;
                // $output['status'] = 'No document upload';
                }
            // }
            }


        }
         }
         echo $output;
        }
    }

    public function fetchTopoImage(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllTopoImages($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/topology_img/'.$row->topo_map.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/topology_img/'.$row->topo_map.'" id="myImgTopo" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_topoimage" class="hidden" value="'.$row->id_topo.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimageTopoimage" data-id="'.$row->id_topo.'" title="Remove">Remove</button>

           </div>

           ';
        }
        echo $output;

    }

    public function insertPAOthersgallerys()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'path' => $this->input->post('imagegallery_txt',true),
            'image_details' => $this->input->post('remarks_image',true),
            'created_at' => $now,
            ];
                $query = $this->pamain_model->createPAmapimageOthersGallerys($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new image';
                }else{

                }
        echo json_encode($output);
}

    public function fetchGallery(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllGallery($codegens);
        foreach($datar as $row){ ?>
            <!--  $output .= '
            <div class="col-md-3">
            <button type="button" class="btn btn-danger btn-flat removeGallery gal-btn" data-id="'.$row->id.'" title="Remove">Remove</button>
             <img src="'.base_url().'bmb_assets2/upload/gallaries/'.$row->path.'" class="img-responsive img-thumbnail img-gallery" /><br>
             <span>Uploaded on '.date("M d, Y",strtotime($row->created_at)).'</span>
            </div>

            '; -->
            <tr id="<?php echo $row->id; ?>" class="trow">
                    <td><?php echo '<img src="'.base_url().'bmb_assets2/upload/gallaries/'.$row->path.'" class="img-responsive img-thumbnail img-gallery" /><br>'.$row->image_details ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_ecocostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeimagegalleryotherimage" data-id="<?php echo $row->id ?>" title="Remove">Remove</button>
                    </td>

                </tr>
        <?php
        }
        // echo $output;

    }

    public function fetchGalleryPFTopo(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllGalleryTopo($codegens);
        foreach($data as $row){
            $output .= '
                <div class="col-md-3 tooltip">
                    <img src="'.base_url().'bmb_assets2/upload/topology_img/'.$row->topo_map.'" class="img-responsive img-thumbnail img-gallery"/>
                    <span class="tooltiptext">Topology and Slope Map</span>
                </div>';
        }
        echo $output;

    }

    public function fetchGalleryPFrock(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryrock($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/rock_img/'.$row->rock_img.'" class="img-responsive img-thumbnail img-gallery"/>
                            <span class="tooltiptext">Rock Formation Map</span>
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryPFhydro(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryhydro($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/hydrology_img/'.$row->hydro_img.'" class="img-responsive img-thumbnail img-gallery"/>
                            <span class="tooltiptext">Hydrology/River System Map</span>
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryPFexLand(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryexland($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/existinglanduse_img/'.$row->landuse_img.'" class="img-responsive img-thumbnail img-gallery"/>
                            <span class="tooltiptext">Existing Land Use Map</span>
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryPFsoil(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerysoil($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/soil_img/'.$row->geology_map.'" class="img-responsive img-thumbnail img-gallery"/>
                            <span class="tooltiptext">Soil Map</span>
                            </div>';
            }
            echo $output;

        }

     public function fetchGalleryPFclimate(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryclimate($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/climate_img/'.$row->climate_img.'" class="img-responsive img-thumbnail img-gallery" />
                            <span class="tooltiptext">Climate Type Map</span>
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryPFlandslide(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerylandlside($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/landslide_img/'.$row->landslide_img.'" class="img-responsive img-thumbnail img-gallery" />
                            <span class="tooltiptext">Landslide Susceptibility</span>
                            </div>';
            }
            echo $output;
        }

    public function fetchGalleryPFflooding(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryflooding($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/flooding_img/'.$row->flooding_img.'" class="img-responsive img-thumbnail img-gallery" />
                            <span class="tooltiptext">Flooding Susceptibility</span>
                            </div>';
            }
            echo $output;
        }

     public function fetchGalleryPFsealevel(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerysealevel($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/sealevel_img/'.$row->sea_img.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;
        }

    public function fetchGalleryPFtsunami(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerytsunami($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/tsunami_img/'.$row->tsunami_img.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;
        }

    public function fetchGalleryPFothergeohazard(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryothergeohazard($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3 tooltip">
                            <img src="'.base_url().'bmb_assets2/upload/other_geohazard_img/'.$row->geohazard_map.'" class="img-responsive img-thumbnail img-gallery" />
                            <span class="tooltiptext">Other Geohazard Susceptibility</span>
                            </div>';
            }
            echo $output;

        }

    public function fetchGallerymz(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerymz($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/managementzone_img/'.$row->managementzone_image.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;

        }

    public function fetchGallerybdfe(){
                $products = "";
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerybdfe($codegens);
            foreach($data as $row)
            {

                $output .= '<div class="col-md-3">
                                <img src="'.base_url().'bmb_assets2/upload/bdfe_img/'.(!empty($row->bdfe_image_upload)?$row->bdfe_image_upload:'nophoto.jpg').'" class="img-responsive img-thumbnail img-gallery" />
                                <b>'.$row->enterprise_name.'</b></div>';
                                // '<img src="'.base_url().'bmb_assets2/upload/bdfe_po_product_img/'.(!empty($row->po_product_image)?$row->po_product_image:'nophoto.jpg').'" class="img-responsive img-thumbnail img-gallery" />'

            }
            echo $output;

        }

    public function fetchGallerybdfeprod(){
                $products = "";
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerybdfeprods($codegens);
            foreach($data as $row)
            {

                $output .= '<div class="col-md-3">
                                <img src="'.base_url().'bmb_assets2/upload/bdfe_po_product_img/'.(!empty($row->po_product_image)?$row->po_product_image:'nophoto.jpg').'" class="img-responsive img-thumbnail img-gallery" /></div>';

            }
            echo $output;

        }

    public function fetchGalleryattraction(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryattraction($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/attraction_img/'.$row->image_attr.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryfacility(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryfacility($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/facilities_img/'.$row->image_facility.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;

        }

    public function fetchGalleryactivity(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGalleryactivity($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/ecotourism_img/'.$row->image_eco.'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;

        }

    public function fetchGallerythreat(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerythreat($codegens);
            foreach($data as $row)
            {
                $output .= '<div class="col-md-3">
                            <img src="'.base_url().'bmb_assets2/upload/img_threat/'.(!empty($row->img_threat)?$row->img_threat:'nophoto.jpg').'" class="img-responsive img-thumbnail img-gallery" />
                            </div>';
            }
            echo $output;

        }

    public function fetchGallerymaps(){
            $output = '';
            $codegens = $this->input->post('codegens');
            $data = $this->pamain_model->getAllGallerymaps($codegens);
            foreach($data as $row)
            {
                // $output .= '<div class="col-md-3">
                //                 <div class="containerdiv">
                //                     <img src="'.base_url().'bmb_assets2/upload/map_image/'.$row->filename.'" class="img-responsive img-thumbnail img-gallery" />
                //                     <div class="overlay"></div>
                //                     <div class="mapbutton"><a href="#"> BUTTON </a></div>
                //                 </div>
                //             </div>';


                $output .= '<div class="col-md-3">
                                <div class="containerdiv">
                                    <img src="'.base_url().'bmb_assets2/upload/map_image/'.$row->filename.'" class="img-responsive img-thumbnail img-gallery" />
                                </div>
                            </div>';
            }
            echo $output;

        }

    public function deleteGallery($id = null)
        {
            $sql1 = $this->db->where('id',$id)
                                            ->get('gallery')
                                            ->row();
            unlink('bmb_assets2/upload/gallaries/'.$sql1->path);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM gallery WHERE id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletespeciesindiimage($id = null)
        {
            $sql1 = $this->db->where('id_biological_image ',$id)
                                            ->get('tblpamainbiological_img')
                                            ->row();
            unlink('bmb_assets2/upload/species_img_local/'.$sql1->species_image);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpamainbiological_img WHERE id_biological_image  = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletecavesimages($id = null)
        {
            $sql1 = $this->db->where('id_cave_image_multi ',$id)
                                            ->get('tblpacaves_images')
                                            ->row();
            unlink('bmb_assets2/upload/caves_image_upload/'.$sql1->cave_image_multi);
            $sql = "DELETE FROM tblpacaves_images WHERE id_cave_image_multi  = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function GetName(){
        // $keyword=$this->input->post('term');
        // $data=$this->pamain_model->GetRow($keyword);
        // echo json_encode($data);
        $codegens = $this->input->post('gencode');
        if (isset($_GET['term'])) {
            $result = $this->pamain_model->GetRow($_GET['term'],$codegens);
                if (count($result) > 0) {
                    foreach ($result as $row)
                        $arr_result[] = array(
                            'label' => $row->commonNameSpecies,
                            // 'label' => $row->commonNameSpecies."(".$row->scientificName_genus.")",
                        );
                        echo json_encode($arr_result);
                    }
                }
    }

    public function initThumb($file){
        $config['image_library'] = 'gd2';
        $config['create_thumb'] = TRUE;
        $config['maintain_ratio'] = TRUE;
        $config['width']         = 75;
        $config['height']       = 50;
        $config['source_image'] = $file;
        $this->load->library('image_lib', $config);
    }

    function searchBiol(){
        $title=$this->input->post('search');
        $data = $this->pamain_model->getAllbiologicalNew($title);
        foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->commonNameSpecies; ?></td>
            </tr>

            <?php
        }
    }

    public function registerMain()
    {
        $rel_data1 = $this->input->post('table_sample');
        $rel_data2 = $this->input->post('table_legislationData_sample');
        $rel_data3 = $this->input->post('table_biological_sample');
        $rel_data3flora = $this->input->post('table_biologicalflora_sample');
        $rel_data4 = $this->input->post('table_pamb_sample');
        $rel_data5 = $this->input->post('table_tenurial');
        $rel_data6 = $this->input->post('tableTribe');
        $rel_data6_1 = $this->input->post('tableTribe_sample');
        $rel_data7 = $this->input->post('table_income');
        $rel_data7_1 = $this->input->post('table_income_sample');
        $rel_data8 = $this->input->post('table_strict_sample');
        $rel_data9 = $this->input->post('table_multiple_sample1');
        $rel_data10 = $this->input->post('table_ipaf');
        $rel_data11 = $this->input->post('table_threat_sample');
        $rel_data12 = $this->input->post('table_reference_sample');
        $rel_data13 = $this->input->post('tableipafss');
        $rel_data13_1 = $this->input->post('tableipafss_sample');
        $rel_data14 = $this->input->post('tablelgu1');
        $rel_data14_1 = $this->input->post('tablelgu1_sample');
        $rel_data15 = $this->input->post('tableiccip');
        $rel_data16 = $this->input->post('tableprograms_sample');
        $rel_data17 = $this->input->post('tableresearch_sample');
        $rel_data18 = $this->input->post('tablestaff_sample');
        $rel_data19 = $this->input->post('table_topo_sample');
        $rel_data20 = $this->input->post('table_soil_sample');
        $rel_data21 = $this->input->post('table_climate_sample');
        $rel_data22 = $this->input->post('table_landslide_sample');
        $rel_data23 = $this->input->post('table_flooding_sample');
        $rel_data24 = $this->input->post('table_sealevel_sample');
        $rel_data25 = $this->input->post('table_tsunami_sample');
        $rel_data26 = $this->input->post('table_attraction_sample');
        $rel_data27 = $this->input->post('table_facility_sample');
        $rel_data28 = $this->input->post('table_activity_sample');
        $rel_data29 = $this->input->post('table_agro_sample');
        $rel_data30 = $this->input->post('table_map_sample');
        $rel_data31 = $this->input->post('table_visitor');
        // $rel_data32 = $this->input->post('table_contribution');
        $rel_data33 = $this->input->post('table_recognition_sample');
        $rel_data34 = $this->input->post('table_rock_sample');
        $rel_data35 = $this->input->post('table_geohazard_sample');
        $rel_data36 = $this->input->post('table_forestform');
        $rel_data37 = $this->input->post('table_inland');
        $rel_data38 = $this->input->post('table_wetland');
        $rel_data39 = $this->input->post('table_caves');
        $rel_data40 = $this->input->post('table_projects');
        $rel_data41 = $this->input->post('table_seams_demo');
        $rel_data42 = $this->input->post('table_seams_sample');
        $rel_data43 = $this->input->post('table_hydro_sample');
        $rel_data44 = $this->input->post('table_landuse_sample');
        $rel_data45 = $this->input->post('table_vegetative_sample');
        $rel_data46 = $this->input->post('table_fire_sample');
        $rel_data47 = $this->input->post('table_iw');
        $rel_data103 = $this->input->post('table_coral_reef');
        $rel_data104 = $this->input->post('table_coral_reef_location');
        $rel_data105 = $this->input->post('table_coral_reef_species');
        $rel_data106 = $this->input->post('table_coral_reef_species_composition');
        $rel_data107 = $this->input->post('table_coral_reef_monitoring_station');
        $rel_data108 = $this->input->post('table_coral_reef_kmlkmz');
        $rel_data109 = $this->input->post('table_coral_reefs');
        $rel_data110 = $this->input->post('table_seagrass_details');
        $rel_data111 = $this->input->post('table_seagrass_species');
        $rel_data112 = $this->input->post('table_mangrove_details');
        $rel_data113 = $this->input->post('table_mangrove_species');
        $rel_data114 = $this->input->post('table_products');
        $rel_data115 = $this->input->post('table_enterprise');
        $rel_data116 = $this->input->post('table_bdfe');
        $rel_data117 = $this->input->post('tablesapa');
        $rel_data118 = $this->input->post('tablemoa');
        $rel_data119 = $this->input->post('tablepacbrma');
        $rel_data120 = $this->input->post('tablewatershed');
        $rel_data121 = $this->input->post('table_hiw');
        $rel_data122 = $this->input->post('tableothertenure');
        $rel_data123 = $this->input->post('tableurbaneco');
        $rel_data124 = $this->input->post('tableincomedisburse');
        $rel_data125 = $this->input->post('tablevisitorslog');
        if ($this->input->post('id_main',true) == null)
        {
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required|is_unique[tblpamain.pa_name]');

        $data['pamain'] = (object)$postData = [
            'id_main'               => $this->input->post('id_main',true),
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'pa_name'               => $this->input->post('pa_name',true),
            'formerpaname'          => $this->input->post('formerpa_name',true),
            'pacategory_id'         => $this->input->post('pacategory_id',true),
            'tbz_id'                => $this->input->post('tbz_id',true),
            'iucn_cat'              => $this->input->post('iucn_cat',true),
            'kba'                   => $this->input->post('kba',true),
            'cpabi_id'              => $this->input->post('cpabi_id',true),
            'terrestrial'           => $this->input->post('terrestrial',true),
            'marine_area'           => $this->input->post('marine',true),
            'area'                  => $this->input->post('area',true),
            'buffer'                => $this->input->post('buffer',true),
            'marine_buffer'         => $this->input->post('marine_buffer',true),
            'geographic_long1'      => $this->input->post('long1',true),
            'geographic_long2'      => $this->input->post('long2',true),
            'geographic_lat1'       => $this->input->post('lat1',true),
            'geographic_lat2'       => $this->input->post('lat2',true),
            'boundary_upper'              => $this->input->post('boundary_upper',true),
            'accessibility'         => $this->input->post('accessibility',true),
            'cultural_resource'     => $this->input->post('culturalresource',true),
            'belief'                => $this->input->post('belief',true),
            'local_inter_knowledge_practices'                => $this->input->post('likp',true),
            'archeology'            => $this->input->post('archeology',true),
            'ethinicity'            => $this->input->post('ethinicity',true),
            'institutional_profile' => $this->input->post('institutional_profile',true),
            'no_occupant_male'      => $this->input->post('occupants_male',true),
            'no_occupant_female'    => $this->input->post('occupants_female',true),
            'no_occupants'      => $this->input->post('occupants',true),
            'no_tenured_migrant'    => $this->input->post('migrant',true),
            'no_migrant_female'    => $this->input->post('migrant_female',true),
            'no_migrant_male'    => $this->input->post('migrant_male',true),
            'elevation_highest'     => $this->input->post('highestelev',true),
            'elevation_lowest'      => $this->input->post('lowestelev',true),
            'pamb_month'            => $this->input->post('pamb_month',true),
            'pamb_day'              => $this->input->post('pamb_day',true),
            'pamb_year'             => $this->input->post('pamb_year',true),
            'apasu_fname' => $this->input->post('apasu_fname',true),
            'apasu_mname' => $this->input->post('apasu_mname',true),
            'apasu_lname' => $this->input->post('apasu_lname',true),
            'apasu_officeAddress' => $this->input->post('apasu_officeAddress',true),
            'apasu_sex' => $this->input->post('apasu_sex',true),
            'apasu_mobile' => $this->input->post('apasu_mobile',true),
            'apasu_position' => $this->input->post('apasu_position',true),
            'apasu_email' => $this->input->post('apasu_email',true),
            'wdpamarineid' => $this->input->post('wdpamarineid',true),
            'wdpanotake' => $this->input->post('wdpanotake',true),
            'wdpastatus' => $this->input->post('wdpastatus',true),
            'wdpayrstatus' => $this->input->post('wdpayrstatus',true),
            'wdpagovtype' => $this->input->post('wdpagovtype',true),
            'wdpaowntype' => $this->input->post('wdpaowntype',true),
            'wdpaverif' => $this->input->post('wdpaverif',true),
            'wdpaiso' => $this->input->post('wdpaiso',true),
            'wdpaid' => $this->input->post('wdpaid',true),
            'desig_type' => $this->input->post('desig_type',true),
            'other_category' => $this->input->post('othernipascategory',true),
            'embeded_map'  => (!empty($this->input->post('embded_map_link',true))?$this->input->post('embded_map_link',true):$this->input->post('backup_html_map')),


        ];
        }else{
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
        // $this->form_validation->set_rules('pacategory_id','Protected Area Category','required');
        // $this->form_validation->set_rules('tbz_id','Biogeographic Zone','required');
        // $this->form_validation->set_rules('area','Total Area','required');

        $data['pamain'] = (object)$postData = [
            'id_main'               => $this->input->post('id_main',true),
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'pa_name'               => $this->input->post('pa_name',true),
            'formerpaname'          => $this->input->post('formerpa_name',true),
            'pacategory_id'         => $this->input->post('pacategory_id',true),
            'tbz_id'                => $this->input->post('tbz_id',true),
            'iucn_cat'                => $this->input->post('iucn_cat',true),
            'other_category'         => $this->input->post('other_category',true),
            'kba'                   => $this->input->post('kba',true),
            'cpabi_id'              => $this->input->post('cpabi_id',true),
            'terrestrial'           => $this->input->post('terrestrial',true),
            'marine_area'           => $this->input->post('marine',true),
            'area'                  => $this->input->post('area',true),
            'buffer'                => $this->input->post('buffer',true),
            'marine_buffer'           => $this->input->post('marine_buffer',true),
            'geographic_long1'      => $this->input->post('long1',true),
            'geographic_long2'      => $this->input->post('long2',true),
            'geographic_lat1'       => $this->input->post('lat1',true),
            'geographic_lat2'       => $this->input->post('lat2',true),
            'boundary_upper'              => $this->input->post('boundary_upper',true),
            'accessibility'         => $this->input->post('accessibility',true),
            'cultural_resource'     => $this->input->post('culturalresource',true),
            'belief'                => $this->input->post('belief',true),
            'local_inter_knowledge_practices'                => $this->input->post('likp',true),
            'archeology'            => $this->input->post('archeology',true),
            'ethinicity'            => $this->input->post('ethinicity',true),
            'institutional_profile' => $this->input->post('institutional_profile',true),
            'no_occupant_male'      => $this->input->post('occupants_male',true),
            'no_occupant_female'    => $this->input->post('occupants_female',true),
            'no_occupants'      => $this->input->post('occupants',true),
            'no_tenured_migrant'    => $this->input->post('migrant',true),
            'no_migrant_female'    => $this->input->post('migrant_female',true),
            'no_migrant_male'    => $this->input->post('migrant_male',true),
            'elevation_highest'     => $this->input->post('highestelev',true),
            'elevation_lowest'      => $this->input->post('lowestelev',true),
            'pamb_month'            => $this->input->post('pamb_month',true),
            'pamb_day'              => $this->input->post('pamb_day',true),
            'pamb_year'             => $this->input->post('pamb_year',true),
            'apasu_fname' => $this->input->post('apasu_fname',true),
            'apasu_mname' => $this->input->post('apasu_mname',true),
            'apasu_lname' => $this->input->post('apasu_lname',true),
            'apasu_officeAddress' => $this->input->post('apasu_officeAddress',true),
            'apasu_sex' => $this->input->post('apasu_sex',true),
            'apasu_mobile' => $this->input->post('apasu_mobile',true),
            'apasu_position' => $this->input->post('apasu_position',true),
            'apasu_email' => $this->input->post('apasu_email',true),
            'wdpamarineid' => $this->input->post('wdpamarineid',true),
            'wdpanotake' => $this->input->post('wdpanotake',true),
            'wdpastatus' => $this->input->post('wdpastatus',true),
            'wdpayrstatus' => $this->input->post('wdpayrstatus',true),
            'wdpagovtype' => $this->input->post('wdpagovtype',true),
            'wdpaowntype' => $this->input->post('wdpaowntype',true),
            'wdpaverif' => $this->input->post('wdpaverif',true),
            'wdpaiso' => $this->input->post('wdpaiso',true),
            'wdpaid' => $this->input->post('wdpaid',true),
            'desig_type' => $this->input->post('desig_type',true),
            'other_category' => $this->input->post('othernipascategory',true),
            'embeded_map'  => (!empty($this->input->post('embded_map_link',true))?$this->input->post('embded_map_link',true):$this->input->post('backup_html_map')),

        ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status_error'] = validation_errors();
        }else{
            if(empty($postData['id_main'])){
                $query = $this->pamain_model->createMain($postData,$rel_data1,$rel_data2,$rel_data3,$rel_data3flora,$rel_data4,$rel_data5,$rel_data6_1,$rel_data7_1,$rel_data8,$rel_data9,$rel_data10,$rel_data11,$rel_data12,$rel_data13_1,$rel_data14_1,$rel_data15,$rel_data16,$rel_data17,$rel_data18,$rel_data19,$rel_data20,$rel_data21,$rel_data22,$rel_data23,$rel_data24,$rel_data25,$rel_data26,$rel_data27,$rel_data28,$rel_data29,$rel_data30,$rel_data31,$rel_data33,$rel_data34,$rel_data35,$rel_data36,$rel_data37,$rel_data38,$rel_data39,$rel_data40,$rel_data41,$rel_data43,$rel_data44,$rel_data45,$rel_data46,$rel_data47,$rel_data104,$rel_data105,$rel_data106,$rel_data107,$rel_data108,$rel_data109,$rel_data110,$rel_data111,$rel_data112,$rel_data113,$rel_data114,$rel_data115,$rel_data116,$rel_data117,$rel_data118,$rel_data119,$rel_data120,$rel_data121,$rel_data122,$rel_data123,$rel_data124,$rel_data125);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'New Protected Area registered successfully';
                }
            }else{
                $query = $this->pamain_model->updateMain($postData,$rel_data1,$rel_data2,$rel_data3,$rel_data3flora,$rel_data4,$rel_data5,$rel_data6_1,$rel_data7_1,$rel_data8,$rel_data9,$rel_data10,$rel_data11,$rel_data12,$rel_data13_1,$rel_data14_1,$rel_data15,$rel_data16,$rel_data17,$rel_data18,$rel_data19,$rel_data20,$rel_data21,$rel_data22,$rel_data23,$rel_data24,$rel_data25,$rel_data26,$rel_data27,$rel_data28,$rel_data29,$rel_data30,$rel_data31,$rel_data33,$rel_data34,$rel_data35,$rel_data36,$rel_data37,$rel_data38,$rel_data39,$rel_data40,$rel_data41,$rel_data43,$rel_data44,$rel_data45,$rel_data46,$rel_data47,$rel_data104,$rel_data105,$rel_data106,$rel_data107,$rel_data108,$rel_data109,$rel_data110,$rel_data111,$rel_data112,$rel_data113,$rel_data114,$rel_data115,$rel_data116,$rel_data117,$rel_data118,$rel_data119,$rel_data120,$rel_data121,$rel_data122,$rel_data123,$rel_data124,$rel_data125);
                if($query){
                $output['message'] = 'Update';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'Protected Area successfully update';
                }
            }

        }
        echo json_encode($output);


    }

    public function frmGenInfo()
    {
        if ($this->input->post('gencode',true) == null)
        {
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
        $data['pamain'] = (object)$postData = [
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'pa_name'               => $this->input->post('pa_name',true),
            'formerpaname'          => $this->input->post('formerpa_name',true),
            'pacategory_id'         => $this->input->post('pacategory_id',true),
            'iucn_cat'                => $this->input->post('iucn_cat',true),
            'other_category'         => $this->input->post('other_category',true),
            'cpabi_id'              => $this->input->post('cpabi_id',true),
            'terrestrial'           => str_replace(',','',$this->input->post('terrestrial',true)),
            'marine_area'           => str_replace(',','',$this->input->post('marine',true)),
            'area'                  => str_replace(',','',$this->input->post('area',true)),
            'buffer'                => str_replace(',','',$this->input->post('buffer',true)),
            'marine_buffer'         => str_replace(',','',$this->input->post('marine_buffer',true)),
            'geographic_long1'      => $this->input->post('long1',true),
            'geographic_long2'      => $this->input->post('long2',true),
            'geographic_lat1'       => $this->input->post('lat1',true),
            'geographic_lat2'       => $this->input->post('lat2',true),
            'boundary_upper'              => $this->input->post('boundary_upper',true),
            'accessibility'         => $this->input->post('accessibility',true),
            'elevation_highest'     => $this->input->post('highestelev',true),
            'elevation_lowest'      => $this->input->post('lowestelev',true),
            'wdpamarineid' => $this->input->post('wdpamarineid',true),
            'wdpanotake' => $this->input->post('wdpanotake',true),
            'wdpastatus' => $this->input->post('wdpastatus',true),
            'wdpayrstatus' => $this->input->post('wdpayrstatus',true),
            'wdpagovtype' => $this->input->post('wdpagovtype',true),
            'wdpaowntype' => $this->input->post('wdpaowntype',true),
            'wdpaverif' => $this->input->post('wdpaverif',true),
            'wdpaiso' => $this->input->post('wdpaiso',true),
            'wdpaid' => $this->input->post('wdpaid',true),
            'desig_type' => $this->input->post('desig_type',true),
            'other_category' => $this->input->post('othernipascategory',true),
            'embeded_map'  => (!empty($this->input->post('embded_map_link',true))?$this->input->post('embded_map_link',true):$this->input->post('backup_html_map')),
            'uml_long_decimal'      => $this->input->post("uml2_clongoutputdd"),
            'uml_long_direction'    => $this->input->post("uml2_clongdmsdir"),
            'uml_long_degree'       => $this->input->post("uml2_clongdmsdegree"),
            'uml_long_minutes'      => $this->input->post("uml2_clongdmsminute"),
            'uml_long_seconds'      => $this->input->post("uml2_clongdmssecond"),
            'uml_lat_decimal'       => $this->input->post("uml2_clatoutputdd"),
            'uml_lat_direction'     => $this->input->post("uml2_clatdmsdir"),
            'uml_lat_degree'        => $this->input->post("uml2_clatdmsdegree"),
            'uml_lat_minute'        => $this->input->post("uml2_clatdmsminute"),
            'uml_lat_seconds'       => $this->input->post("uml2_clatdmssecond"),
            'lmr_long_decimal'      => $this->input->post("lmr2_clongoutputdd"),
            'lmr_long_direction'    => $this->input->post("lmr2_clongdmsdir"),
            'lmr_long_degree'       => $this->input->post("lmr2_clongdmsdegree"),
            'lmr_long_minutes'      => $this->input->post("lmr2_clongdmsminute"),
            'lmr_long_seconds'      => $this->input->post("lmr2_clongdmssecond"),
            'lmr_lat_decimal'       => $this->input->post("lmr2_clatoutputdd"),
            'lmr_lat_direction'     => $this->input->post("lmr2_clatdmsdir"),
            'lmr_lat_degree'        => $this->input->post("lmr2_clatdmsdegree"),
            'lmr_lat_minutes'       => $this->input->post("lmr2_clatdmsminute"),
            'lmr_lat_seconds'       => $this->input->post("lmr2_clatdmssecond")

        ];
        }else{
            $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
            $data['pamain'] = (object)$postData = [
                'pasu_id'               => $this->input->post('pasu_ids',true),
                'generatedcode'         => $this->input->post('gencode',true),
                'pa_name'               => $this->input->post('pa_name',true),
                'formerpaname'          => $this->input->post('formerpa_name',true),
                'pacategory_id'         => $this->input->post('pacategory_id',true),
                'iucn_cat'                => $this->input->post('iucn_cat',true),
                'other_category'         => $this->input->post('other_category',true),
                'cpabi_id'              => $this->input->post('cpabi_id',true),
                'terrestrial'           => str_replace(',','',$this->input->post('terrestrial',true)),
                'marine_area'           => str_replace(',','',$this->input->post('marine',true)),
                'area'                  => str_replace(',','',$this->input->post('area',true)),
                'buffer'                => str_replace(',','',$this->input->post('buffer',true)),
                'marine_buffer'         => str_replace(',','',$this->input->post('marine_buffer',true)),
                'geographic_long1'      => $this->input->post('long1',true),
                'geographic_long2'      => $this->input->post('long2',true),
                'geographic_lat1'       => $this->input->post('lat1',true),
                'geographic_lat2'       => $this->input->post('lat2',true),
                'boundary_upper'              => $this->input->post('boundary_upper',true),
                'accessibility'         => $this->input->post('accessibility',true),
                'elevation_highest'     => $this->input->post('highestelev',true),
                'elevation_lowest'      => $this->input->post('lowestelev',true),
                'wdpamarineid' => $this->input->post('wdpamarineid',true),
                'wdpanotake' => $this->input->post('wdpanotake',true),
                'wdpastatus' => $this->input->post('wdpastatus',true),
                'wdpayrstatus' => $this->input->post('wdpayrstatus',true),
                'wdpagovtype' => $this->input->post('wdpagovtype',true),
                'wdpaowntype' => $this->input->post('wdpaowntype',true),
                'wdpaverif' => $this->input->post('wdpaverif',true),
                'wdpaiso' => $this->input->post('wdpaiso',true),
                'wdpaid' => $this->input->post('wdpaid',true),
                'desig_type' => $this->input->post('desig_type',true),
                'other_category' => $this->input->post('othernipascategory',true),
                'embeded_map'  => (!empty($this->input->post('embded_map_link',true))?$this->input->post('embded_map_link',true):$this->input->post('backup_html_map')),
                'uml_long_decimal'      => $this->input->post("uml2_clongoutputdd"),
                'uml_long_direction'    => $this->input->post("uml2_clongdmsdir"),
                'uml_long_degree'       => $this->input->post("uml2_clongdmsdegree"),
                'uml_long_minutes'      => $this->input->post("uml2_clongdmsminute"),
                'uml_long_seconds'      => $this->input->post("uml2_clongdmssecond"),
                'uml_lat_decimal'       => $this->input->post("uml2_clatoutputdd"),
                'uml_lat_direction'     => $this->input->post("uml2_clatdmsdir"),
                'uml_lat_degree'        => $this->input->post("uml2_clatdmsdegree"),
                'uml_lat_minute'        => $this->input->post("uml2_clatdmsminute"),
                'uml_lat_seconds'       => $this->input->post("uml2_clatdmssecond"),
                'lmr_long_decimal'      => $this->input->post("lmr2_clongoutputdd"),
                'lmr_long_direction'    => $this->input->post("lmr2_clongdmsdir"),
                'lmr_long_degree'       => $this->input->post("lmr2_clongdmsdegree"),
                'lmr_long_minutes'      => $this->input->post("lmr2_clongdmsminute"),
                'lmr_long_seconds'      => $this->input->post("lmr2_clongdmssecond"),
                'lmr_lat_decimal'       => $this->input->post("lmr2_clatoutputdd"),
                'lmr_lat_direction'     => $this->input->post("lmr2_clatdmsdir"),
                'lmr_lat_degree'        => $this->input->post("lmr2_clatdmsdegree"),
                'lmr_lat_minutes'       => $this->input->post("lmr2_clatdmsminute"),
                'lmr_lat_seconds'       => $this->input->post("lmr2_clatdmssecond")

            ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status_error'] = validation_errors();
        }else{
            if(!empty($postData['gencode'])){
                $query = $this->pamain_model->createMain($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'New Protected Area registered successfully';
                }
            }else{
                $query = $this->pamain_model->updategeninfo($postData);
                if($query){
                $output['message'] = 'Update';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'Protected Area successfully update';
                }
            }
        }
        echo json_encode($output);
    }

    public function frmElevation()
    {
        if ($this->input->post('gencode',true) == null)
        {
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
        $data['pamain'] = (object)$postData = [
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'elevation_highest'               => str_replace(',','',$this->input->post('highestelev',true)),
            'elevation_lowest'          => str_replace(',','',$this->input->post('lowestelev',true)),
        ];
        }else{
            $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
            $data['pamain'] = (object)$postData = [
                'pasu_id'               => $this->input->post('pasu_ids',true),
                'generatedcode'         => $this->input->post('gencode',true),
                'elevation_highest'               => str_replace(',','',$this->input->post('highestelev',true)),
                'elevation_lowest'          => str_replace(',','',$this->input->post('lowestelev',true)),
            ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status_error'] = validation_errors();
        }else{
            if(!empty($postData['gencode'])){
                $query = $this->pamain_model->createMain($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'New Protected Area registered successfully';
                }
            }else{
                $query = $this->pamain_model->updategeninfo($postData);
                if($query){
                $output['message'] = 'Update';
                $output['status'] = 'Elevation';
                }else{
                $output['error'] = true;
                $output['status_error'] = 'Elevation successfully update';
                }
            }
        }
        echo json_encode($output);
    }

    public function frmCultural()
    {
        if ($this->input->post('gencode',true) == null)
        {
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
        $data['pamain'] = (object)$postData = [
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'ethinicity'               => $this->input->post('ethinicity',true),
            'archeology'               => $this->input->post('archeology',true),
            'cultural_resource'               => $this->input->post('culturalresource',true),
            'belief'               => $this->input->post('belief',true),
            'local_inter_knowledge_practices'               => $this->input->post('likp',true),
        ];
        }else{
            $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
            $data['pamain'] = (object)$postData = [
                'pasu_id'               => $this->input->post('pasu_ids',true),
                'generatedcode'         => $this->input->post('gencode',true),
                'ethinicity'               => $this->input->post('ethinicity',true),
                'archeology'               => $this->input->post('archeology',true),
                'cultural_resource'               => $this->input->post('culturalresource',true),
                'belief'               => $this->input->post('belief',true),
                'local_inter_knowledge_practices'               => $this->input->post('likp',true),
            ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status_error'] = validation_errors();
        }else{
            if(!empty($postData['gencode'])){
                $query = $this->pamain_model->createMain($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'New Protected Area registered successfully';
                }
            }else{
                $query = $this->pamain_model->updategeninfo($postData);
                if($query){
                $output['message'] = 'Update';
                $output['status'] = 'Cultural Profile';
                }else{
                $output['error'] = true;
                $output['status_error'] = 'Cultural Profile successfully update';
                }
            }
        }
        echo json_encode($output);
    }


    public function frmPAMO()
    {
        if ($this->input->post('gencode',true) == null)
        {
        $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
        $data['pamain'] = (object)$postData = [
            'pasu_id'               => $this->input->post('pasu_ids',true),
            'generatedcode'         => $this->input->post('gencode',true),
            'apasu_fname'               => $this->input->post('apasu_fname',true),
            'apasu_mname'               => $this->input->post('apasu_mname',true),
            'apasu_lname'               => $this->input->post('apasu_lname',true),
            'apasu_officeaddress'               => $this->input->post('apasu_officeAddress',true),
            'apasu_sex'               => $this->input->post('apasu_sex',true),
            'apasu_position'               => $this->input->post('apasu_position',true),
            'apasu_mobile'               => $this->input->post('apasu_mobile',true),
            'apasu_email'               => $this->input->post('apasu_email',true),
        ];
        }else{
            $this->form_validation->set_rules('pa_name','Name of Protected Area','required');
            $data['pamain'] = (object)$postData = [
                'pasu_id'               => $this->input->post('pasu_ids',true),
                'generatedcode'         => $this->input->post('gencode',true),
                'apasu_fname'               => $this->input->post('apasu_fname',true),
                'apasu_mname'               => $this->input->post('apasu_mname',true),
                'apasu_lname'               => $this->input->post('apasu_lname',true),
                'apasu_officeaddress'               => $this->input->post('apasu_officeAddress',true),
                'apasu_sex'               => $this->input->post('apasu_sex',true),
                'apasu_position'               => $this->input->post('apasu_position',true),
                'apasu_mobile'               => $this->input->post('apasu_mobile',true),
                'apasu_email'               => $this->input->post('apasu_email',true),
            ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status_error'] = validation_errors();
        }else{
            if(!empty($postData['gencode'])){
                $query = $this->pamain_model->createMain($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = $this->input->post('pa_name');
                }else{
                $output['error'] = true;
                $output['status_error'] = 'New Protected Area registered successfully';
                }
            }else{
                $query = $this->pamain_model->updategeninfo($postData);
                if($query){
                $output['message'] = 'Update';
                $output['status'] = 'Profile';
                }else{
                $output['error'] = true;
                $output['status_error'] = 'Profile successfully update';
                }
            }
        }
        echo json_encode($output);
    }

    public function edit($gencode=null,$year=NULL,$month=NULL)
    {
        if($year==NULL){
            $year=date('Y');
        }

        if($month==NULL){
            $month=date('m');
        }

        if($this->input->post('date')){
            $year=(int)substr($this->input->post('date'),1);
            $month=(int)substr($this->input->post('date'),5);
        }

        if(($year==date('Y') && $month <date('m')) || ($year<date('Y'))){
            $month=date('m');
            $year=date('Y');
        }
        $UserRegions = $this->session->userdata('region');

        // $data["calendar"]=$this->pamain_model->generate($year,$month);

        $data['page_title'] = "Edit Information";
        $data['map'] = $this->googlemap->create_map();
        $data['pamain'] = $this->pamain_model->getAllData($gencode);
        $user_id = $this->session->userdata('user_id');
        $data['read'] = $this->dashboard_model->read_by_id($user_id);
        $data['classList']      = $this->pamain_model->classList();
        $data['classListsub']       = $this->pamain_model->classListsub();
        $data['categoryList']   = $this->pamain_model->categoryList();
        $data['cpabiList']      = $this->pamain_model->cpabiList($UserRegions);
        $data['zoneList']       = $this->pamain_model->zoneList();
        $data['zoneListm']       = $this->pamain_model->zoneListm();
        $data['monthList']      = $this->pamain_model->monthList();
        $data['yearList']       = $this->pamain_model->yearList();
        $data['dayList']        = $this->pamain_model->dayList();
        $data['appointment']    = $this->pamain_model->appointment();
        $data['appointment_status']    = $this->pamain_model->appointment_status();
        $data['provinceList']       = $this->pamain_model->provinceListeds();
        $data['iucn_list']    = $this->pamain_model->iucnList();
        $data['residency_list_status']    = $this->pamain_model->residency_status();
        $data['iucncat']  = [
           ''  => 'Select IUCN Category',
        ];
        $data['multimedia'] = $this->pamain_model->cepa_multimedia();
        $data['multimedia2'] = $this->pamain_model->cepa_multimedia2();
        $data['multimedia3'] = $this->pamain_model->cepa_multimedia3();
        $data['multimedia4'] = $this->pamain_model->cepa_multimedia4();
        $data['cepa_event'] = $this->pamain_model->cepa_event();

        $data['kba'] =[
            ''  => 'Yes/No',
            '1' => 'Yes',
            '2' => 'No'
            ];
        $data['splcategory'] =[
            ''  => 'Select',
            '1' => 'Terrestrial',
            '2' => 'Aquatic'
            ];
        $data['cepa_activity'] = $this->pamain_model->cepa_activity_audience();
        $data['cepasouvenir'] = $this->pamain_model->cepasouvenir();
        $data['visitorsforloc'] = $this->pamain_model->visitorsforloc();
        $data['florafuanalist'] = $this->pamain_model->florafuanalist();
        $data['florafuanalistScientific'] = $this->pamain_model->florafuanalistScientific();

        $data['floralist'] = $this->pamain_model->florafuanalist2();
        $data['floralistScientific'] = $this->pamain_model->florafuanalistScientific2();
        $data['municipalss']       = $this->pamain_model->municipalss();
        $data['hcc'] = $this->pamain_model->hcc();
        $data['hcccondition'] = $this->pamain_model->hcccondition();
        $data['tauscategory'] = $this->pamain_model->tauscategory();
        $data['seagrasscondition'] = $this->pamain_model->seagrasscondition();
        $data['seagrassdiversity'] = $this->pamain_model->seagrassdiversity();
        $data['mangrovescondition'] = $this->pamain_model->mangrovescondition();
        $data['mangroveregen'] = $this->pamain_model->mangroveregen();
        $data['mangrovesaverage'] = $this->pamain_model->mangrovesaverage();
        $data['mangrovesobservation'] = $this->pamain_model->mangrovesobservation();
        $data['mangrovesdiversity'] = $this->pamain_model->mangrovesdiversity();
        $data['coralspecies'] = $this->pamain_model->coralspecies();
        $data['seagrasspecies'] = $this->pamain_model->seagrasspecies();
        $data['cave_landstat']       = $this->pamain_model->cavelandstat();
        $data['cave_type']       = $this->pamain_model->cavetype();
        $data['province'] =[''  => 'Select Province'];
        $data['municipal'] =[''  => 'Select Municipality'];
        $data['barangay'] =[''  => 'Select Barangay'];
        $UserRegions = $this->session->userdata('region');
        $data['regionList'] = $this->pamain_model->regionList($UserRegions);
        $data['region_demoList'] = $this->pamain_model->region_demoList($UserRegions);
        $UserProvince = $this->session->userdata('province');
        $data['provincesList'] = $this->pamain_model->provincesList($UserProvince);
        $data['provincesListi'] = $this->pamain_model->provincesListi($UserProvince);
        $data['procList']       = $this->pamain_model->procList();
        $data['monthList'] = $this->pamain_model->monthList();
        $data['yearList'] = $this->pamain_model->yearList();
        $data['monthListed']      = $this->pamain_model->monthListed();
        $data['progsourceoffund']      = $this->pamain_model->progsourceoffund();
        $data['progtypeoffund']      = $this->pamain_model->progtypeoffund();
        $data['progtypeofpayment']      = $this->pamain_model->progtypeofpayment();
        $data['projcurrency']      = $this->pamain_model->projcurrency();
        $data['programsector']      = $this->pamain_model->programsector();
        $data['citationlist']      = $this->pamain_model->citationlist();
        $data['lhpostatus']      = $this->pamain_model->lhpostatus();
        $data['yearListed'] = $this->pamain_model->yearListed();
        $data['yearListedDisbursement'] = $this->pamain_model->yearListedDisbursement();
        $data['yearduration']     = $this->pamain_model->yearduration();
        $data['yearListedduration']     = $this->pamain_model->yearListedduration();
        $data['projstatus']     = $this->pamain_model->projstatus();
        $data['dayList'] = $this->pamain_model->dayList();
        $data['SpeciescategoryList'] = $this->pamain_model->SpeciescategoryList();
        $data['techcomm'] = $this->pamain_model->techcomm();
        $data['CommonListSpecies'] = $this->pamain_model->CommonListSpecies();
        $data['sexList'] = $this->pamain_model->sexList();
        $data['visitorspayment'] = $this->pamain_model->visitorspayment();
        $data['maritalStatus'] = $this->pamain_model->maritalStatus();
        $data['organizationposition'] = $this->pamain_model->organizationposition();
        $data['tribelist'] = $this->pamain_model->tribelist();
        $data['researchstatus']     = $this->pamain_model->researchstatus();
        $data['finespelaltiesdamages']     = $this->pamain_model->finespelaltiesdamages();
        $data['oldsubpariaListed']     = $this->pamain_model->oldsubpariaListed();
        $data['triberelation'] = $this->pamain_model->triberelation();
        $data['countpamb'] = $this->pamain_model->count_pamb_members($gencode);
        $data['wcategory'] = $this->pamain_model->wcategory();
        $data['appointmentsub'] = $this->pamain_model->appointmentsub();
        $data['tappointment'] = $this->pamain_model->tappointment();
        $data['financialList'] = $this->pamain_model->financialList();
        $data['modepayment'] = $this->pamain_model->financialListsub();
        $data['subclassList'] = $this->pamain_model->subclassList();
        $classHydro = $this->input->post('edit-waterclass');
        $data['recognitionList'] = $this->pamain_model->recognitionList();
        $data['fftype'] = $this->pamain_model->fftype();
        $data['iwtype'] = $this->pamain_model->iwtype();
        $data['mangrovespecies'] = $this->pamain_model->mangrovespecies();
        $data['householdid'] = $this->pamain_model->household($gencode);
        $data['floodingLegend'] =   $this->pamain_model->floodingLegend();
        $data['landslideLegend'] =   $this->pamain_model->landslideLegend();
        $data['threats_cat'] =   $this->pamain_model->threatsCategory();
        $data['nature_threats'] =   $this->pamain_model->nature_threats();
        $data['threats_rank'] =   $this->pamain_model->threatsrank();
        $data['lh_type'] = $this->pamain_model->lh_type();
        $data['lh_products'] = $this->pamain_model->lh_products();
        $data['waterclass'] = $this->pamain_model->waterclass();
        $data['waterqualitystatus'] = $this->pamain_model->waterqualitystatus();
        $data['inlandwaterclass'] = $this->pamain_model->inlandwaterclass();
        $data['hmwetland'] = $this->pamain_model->hiwtype();
        $data['fcondition'] = $this->pamain_model->fcondition();
        $data['facilityList'] = $this->pamain_model->facilityList();
        $data['sapa_devt']    = $this->pamain_model->sapa_devtlist();
        $data['iucn_category']    = $this->pamain_model->iucnCategory();
        $data['desig_type']    = $this->pamain_model->desig_type();
        $data['wdpamarine']    = $this->pamain_model->wdpamarine();
        $data['wdpanotake']    = $this->pamain_model->wdpanotake();
        $data['wdpastatus']    = $this->pamain_model->wdpastatus();
        $data['wdpagovtype']    = $this->pamain_model->wdpagovtype();
        $data['wdpaowntype']    = $this->pamain_model->wdpaowntype();
        $data['wdpaverif']    = $this->pamain_model->wdpaverif();
        $data['wdpaiso']    = $this->pamain_model->wdpaiso();
        $data['clitype']    = $this->pamain_model->clitype();
        $data['existlanduse']    = $this->pamain_model->existlanduse();
        $data['slopecat']    = $this->pamain_model->slopecat();
        $data['fishdiversity']    = $this->pamain_model->fishdiversity();
        $data['fishcategorysa']    = $this->pamain_model->fishcategorysa();
        $data['fishspeciesdata']    = $this->pamain_model->fishspeciesdata();
        $data['fishdensity']    = $this->pamain_model->fishdensity();
        $data['fishbiomass']    = $this->pamain_model->fishbiomass();
        $data['riverbasinlist']    = $this->pamain_model->riverbasinlist();
        $data['bdfetyperegistration']    = $this->pamain_model->bdfetyperegistration();
        $data['sizeenterprise']    = $this->pamain_model->sizeenterprise();
        $data['bdfe_level']    = $this->pamain_model->bdfe_level();
        $data['ecotourism_activity']       = $this->pamain_model->ecotourismactivity();
        $data['direct_long'] =[
            ''  => 'Select',
            '1' => 'East',
            '2' => 'West'
            ];
        $data['direct_lat'] =[
            ''  => 'Select',
            '1' => 'North',
            '2' => 'South'
            ];
            $data['whl'] =[
            ''  => 'Select',
            '1' => '1) Yes',
            '2' => '2) No'
            ];
        $data['status'] =[
            ''  => 'Status',
            '1' => 'Active',
            '2' => 'Renew',
            '3' => 'Resigned',
            '4' => 'End of Contract'
            ];
        $data['visitoryn'] =[
            ''  => 'Select',
            '1' => 'Yes',
            '2' => 'No'
            ];
        $data['vtrustfund'] =[
            '0'  => 'Select',
            '1' => 'Donation',
            '2' => 'Grants',
            '3' => 'Endowment'
            ];

        $data['vmodepayment'] =[
            '0'  => 'Select',
            '1' => 'In-kind',
            '2' => 'Cash'
            ];

        // $data['cavestatus'] =[
        //     ''  => 'Status',
        //     '1' => 'Identified',
        //     '2' => 'Assessed',
        //     '3' => 'Classified'
        //     ];
        $data['tenurestatus']       = $this->pamain_model->tenures_status();
        $data['seams_status']       = $this->pamain_model->seams_status();
        $data['mett_status']       = $this->pamain_model->mett_status();
        $data['ecoimpact_status']       = $this->pamain_model->ecoimpact_status();
        $data['nipselect']       = $this->pamain_model->nipselects();
        $data['status_mngmtplan']       = $this->pamain_model->mngmntplan_status();
        $data['cavestatus'] = $this->pamain_model->cavestatus();
        $data['tenurelist'] = $this->pamain_model->tenurelist();
        $data['pabstatus']       = $this->pamain_model->pabstatus();
        $data['landcover'] = $this->pamain_model->landcover();
        $data['visitoryesno'] = $this->pamain_model->yesorno();
        $data['donate'] = $this->pamain_model->donatelist();
        $data['feetype'] = $this->pamain_model->feetypeipaf();
        $data['quarter'] = $this->pamain_model->QuarterlyList();
        $data['visitcat'] = $this->pamain_model->visitor_category();
        $data['cepa_print_materials'] = $this->pamain_model->cepa_print_materials();

        $data['content'] = $this->load->view('pasu/FormMain',$data,TRUE);
        $this->load->view('pasu/main_wrapper',$data);
        $this->load->view('pasu/modal_ext',$data);
        $this->load->view('pasu/modal_main',$data);

    }

    public function delete($id)
    {

        $output = array();
         $sql1 = "DELETE FROM tblpamain WHERE generatedcode = '$id'";
         $sql2 = "DELETE FROM tblpamainlocation WHERE generatedcode = '$id'";
         $sql3 = "DELETE FROM tblpamainbiological WHERE generatedcode = '$id'";
         $sql4 = "DELETE FROM tblpamainimageupload WHERE generatedcode = '$id'";
         $sql5 = "DELETE FROM tblpamainlegislation WHERE generatedcode = '$id'";
         $sql6 = "DELETE FROM tblpamainproject WHERE generatedcode = '$id'";
         $sql7 = "DELETE FROM tblpambmember WHERE generatedcode = '$id'";
         $sql8 = "DELETE FROM tblpavisitorsrate WHERE generatedcode = '$id'";
         $sql9 = "DELETE FROM tblsrpaoregister WHERE generatedcode = '$id'";
         $sql10 = "DELETE FROM tblstrictprotzone WHERE generatedcode = '$id'";
         $sql11 = "DELETE FROM tblpamultiplezone WHERE generatedcode = '$id'";
         $sql12 = "DELETE FROM tblpareference WHERE generatedcode = '$id'";
         $sql13 = "DELETE FROM tblpathreat WHERE generatedcode = '$id'";
         $sql14 = "DELETE FROM tblpaipaf WHERE generatedcode = '$id'";
         $sql15 = "DELETE FROM tblpalgu WHERE generatedcode = '$id'";
         $sql16 = "DELETE FROM tblpaecotourism WHERE generatedcode = '$id'";
         $sql17 = "DELETE FROM tblpafacility WHERE generatedcode = '$id'";
         $sql18 = "DELETE FROM tblpaattraction WHERE generatedcode = '$id'";
         $sql19 = "DELETE FROM tblpaagroforestry WHERE generatedcode = '$id'";


        $sql_tourism = $this->db->where('generatedcode',$id)
                                ->get('tblpaecotourism')
                                ->result();
        foreach ($sql_tourism as $tourism) {
             unlink('bmb_assets2/upload/ecotourism_img/'.$tourism->image_eco);
        }

        $sql_facility = $this->db->where('generatedcode',$id)
                            ->get('tblpafacility')
                            ->result();
        foreach ($sql_facility as $facilty) {
             unlink('bmb_assets2/upload/facilities_img/'.$facilty->image_facility);
        }

        $sql_map = $this->db->where('generatedcode',$id)
                                            ->get('tblpamainimageupload')
                                            ->result();
        foreach ($sql_map as $map) {
             unlink('bmb_assets2/upload/map_image/'.$map->filename);
        }

        $sql_attraction = $this->db->where('generatedcode',$id)
                                            ->get('tblpaattraction')
                                            ->result();
        foreach ($sql_attraction as $attr) {
             unlink('bmb_assets2/upload/attraction_img/'.$attr->image_attr);
        }

        $sql_agro = $this->db->where('generatedcode',$id)
                                            ->get('tblpaagroforestry')
                                            ->result();
        foreach ($sql_agro as $agro) {
             unlink('bmb_assets2/upload/agroforestry_img/'.$agro->image_agro);
        }


        if($this->db->query($sql1) &&
           $this->db->query($sql2) &&
           $this->db->query($sql3) &&
           $this->db->query($sql4) &&
           $this->db->query($sql5) &&
           $this->db->query($sql6) &&
           $this->db->query($sql7) &&
           $this->db->query($sql8) &&
           $this->db->query($sql9) &&
           $this->db->query($sql10) &&
           $this->db->query($sql11) &&
           $this->db->query($sql12) &&
           $this->db->query($sql13) &&
           $this->db->query($sql14) &&
           $this->db->query($sql15) &&
           $this->db->query($sql16) &&
           $this->db->query($sql17) &&
           $this->db->query($sql18) &&
           $this->db->query($sql19))
        {
            $output['status'] = 'success';
            $output['message'] = 'Data deleted successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }
    public function subAppointment()
        {
       $subapt = $this->input->post('subapt');
            if (!empty($subapt)) {
            $query = $this->db->select('*')
                ->from('tblpambmemappointmentsub')
                ->where('appointment_id',$subapt)
                ->get();

            $option = "<option value=\"\">Select Designate</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id\">$apt->sub_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub appointment available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subThreatCat()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblpathreat_category_sub')
                ->where('id_threats_cat',$subcat)
                ->get();
            $option = "<option value=\"\">Select Threats</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_threats_sub\">$apt->sub_cat_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No threats available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function sublandusecat()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblpaexisting_landuse_sub')
                ->where('id_landuses_fk',$subcat)
                ->get();
            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_landuse_sub\">$apt->landuses_sub_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No item available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subIntCrit()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblinternationalrecognition_sub')
                ->where('id_recog ',$subcat)
                ->get();
            $option = "<option value=\"\">Select International Criteria</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    // $option .= "<option value=\"$apt->id_recog_sub\">$apt->int_crit</option>";
                    $option .= "<option value=\"$apt->id_recog_sub\">$apt->int_crit $apt->crit_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No threats available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subNatureThreat()
        {
       $subcat = $this->input->post('natth');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblpathreat_naturalthreats_sub')
                ->where('id_natural_threats_main',$subcat)
                ->get();
            $option = "<option value=\"\">Select Sub Nature of Threats</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_natural_threats_sub\">$apt->natural_threats_sub_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub Nature of threats available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subnatureThreats()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblpathreat_category')
                ->where('id_nature_threats',$subcat)
                ->get();
            $option = "<option value=\"\">Select Category</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_threats_category\">$apt->threats_category_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No category of threats available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subClassHydro()
        {
       $subcatw = $this->input->post('subcatw');
            if (!empty($subcatw)) {
            $query = $this->db->select('*')
                ->from('tblhydrology_waterclass_sub')
                ->where('id_waterClassB',$subcatw)
                ->get();
            $option = "<option value=\"\">Select Class</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_waterClassSub\">$apt->waterClass</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function bdfetypeofenterprise()
        {
       $subcatw = $this->input->post('subcatw');
            if (!empty($subcatw)) {
            $query = $this->db->select('*')
                ->from('tblpalivelihood_type')
                ->where('prod_id',$subcatw)
                ->get();

            $option = "<option value=\"\">Select sub category</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $sclass) {
                    $option .= "<option value=\"$sclass->id_lh_type\">$sclass->lh_type</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub products available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid products selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subIWClassSub()
        {
       $subcatw = $this->input->post('subcatw');
            if (!empty($subcatw)) {
            $query = $this->db->select('*')
                ->from('tblhydrology_waterclass_sub')
                ->where('id_waterClassB',$subcatw)
                ->get();
            $option = "<option value=\"\">Select Class</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_waterClassSub\">$apt->waterClass</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subClassCave()
        {
       $subcaveclass = $this->input->post('subcaveclass');
            if (!empty($subcaveclass)) {
            $query = $this->db->select('*')
                ->from('tblcaveclassificationsub')
                ->where('id_cave_class',$subcaveclass)
                ->get();
            $option = "<option value=\"\">Select Class</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_sub_class\">$apt->sub_class_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subProgramSectors()
        {
       $sector = $this->input->post('sector');
            if (!empty($sector)) {
            $query = $this->db->select('*')
                ->from('tblpaprogram_agency_program')
                ->where('agency_id',$sector)
                ->or_where('agency_id',0)
                ->get();
            $option = "<option value=\"\">Select program</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_agencyprog\">$apt->program_names</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subProjSectors()
        {
       $sector = $this->input->post('sector');
            if (!empty($sector)) {
            $query = $this->db->select('*')
                ->from('tblmainprojects_projectlist')
                ->where('id_sector',$sector)
                ->or_where('id_sector',0)
                ->get();
            $option = "<option value=\"\">Select project</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_projectlist\">$apt->proj_names</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No project available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid project selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subHydroClass()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblhydrology_waterclass_sub')
                ->where('id_waterClassB',$subcat)
                ->get();
            $option = "<option value=\"\">Select Class</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_waterClassSub\">$apt->waterClass</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subThreatCatpholder()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblpathreat_category_sub')
                ->where('id_threats_sub',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->sub_cat_placeholder;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected item";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function subPayment()
        {
       $subapt = $this->input->post('subapt');
            if (!empty($subapt)) {
            $query = $this->db->select('*')
                ->from('tblfinancialassistancesub')
                ->where('id_financial',$subapt)
                ->get();

            $option = "<option value=\"0\" disabled default selected>Select mode of Payment</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_finance_sub\">$apt->description</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function displaysubselect()
        {
       $subapt = $this->input->post('subid');
            if (!empty($subapt)) {
            $query = $this->db->select('*')
                ->join('tblpambmember','tblpambmemappointmentsub.id = tblpambmember.sub_appointment','left')
                ->from('tblpambmemappointmentsub')
                ->where('appointment_id',$subapt)
                ->get();

            $option = "<option value=\"\">Select Designate</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id\">$apt->sub_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub appointment available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getProvLH()
        {
       $regions = $this->input->post('regions');
            if (!empty($regions)) {
            $query = $this->db->select('*')
                ->from('tbllocprovince')
                ->where('regionid',$regions)
                ->get();
            $option = "<option value=\"\">Select Province</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_p\">$apt->provinceName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMunLH()
        {
       $provinces = $this->input->post('provinces');
            if (!empty($provinces)) {
            $query = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provinces)
                ->get();
            $option = "<option value=\"\">Select Municipal</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_m\">$apt->municipalName - $apt->cong_dist</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getBarLH()
        {
       $municipal = $this->input->post('municipal');
            if (!empty($municipal)) {
            $query = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$municipal)
                ->get();
            $option = "<option value=\"\">Select Barangay</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_b\">$apt->barangayName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getProducts()
        {
       $products = $this->input->post('products');
            if (!empty($products)) {
            $query = $this->db->select('*')
                ->from('tblpalivelihood_type')
                ->where('prod_id',$products)
                ->get();
            $option = "<option value=\"\">Select sub product</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_lh_type\">$apt->lh_type</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

	public function getProv()
 		{
       $regid = $this->input->post('regid');
            if (!empty($regid)) {
            $query = $this->db->select('*')
                ->from('tbllocprovince')
                ->where('regionid',$regid)
                ->get();

            $option = "<option value=\"\">Select Province</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_p\">$prov->provinceName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Provinces available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Region selected";
            $data['status'] = false;
        }

        echo json_encode($data);
    }

    public function getCaveProv()
    {
        $provid = $this->input->post('provid');
            if (!empty($provid)) {
            $query = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provid)
                ->get();

            $option = "<option value=\"\">Select Municipality</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_m\">$prov->municipalName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Municipality available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Province selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getIncomefromSelectedYear2()
    {
        $yrid = $this->input->post('yrid');
        $code = $this->input->post('code');
        $val4=0;
        $val5=0;
        $val6=0;
        $val7=0;
        $val8=0;

        $ival1 =0;
        $ival2 =0;
        $ival3 =0;
        $ival4 =0;
        $ival5 =0;
        $ival6 =0;
        $ival7 =0;
        $ival8 =0;
        $ival8_1 =0;
        $ival8_2 =0;
        $totalival1 = 0;
        $ival9 =0;
        $ival10 =0;
        $ival11 =0;
        $ival12 =0;

        $annualincome=0.00;

        $subincome=0.00;
        $subdisburse=0.00;
        $subbalance=0.00;

        $pariaincome=0.00;
        $pariadisburse=0.00;
        $pariabalance=0.00;
        $runbalanceparia=0.00;

            if(!empty($yrid)):
            $queryincome = $this->db->select('SUM(entrance_fee) as ef, SUM(facility_fee) as ff,SUM(recreational_fee)as rf, SUM(resource_fee) as rf2, SUM(sapa_fee) as sf, SUM(moa_fee)as mf, SUM(rsa_fee) as rsa, SUM(cla_fee) as cf,SUM(grant_fee) as grnt, SUM(endowment_fee) as endo')
                ->where('income_date_year',$yrid)
                ->where('generatedcode',$code)
                ->group_by('income_date_year')
                ->from('tblipafsourceincome')
                ->get();

                foreach ($queryincome->result() as $output1) {
                    $ival1 = $output1->ef;
                    $ival2 = $output1->ff;
                    $ival3 = $output1->rf;
                    $ival4 = $output1->rf2;
                    $ival5 = $output1->sf;
                    $ival6 = $output1->mf;
                    $ival7 = $output1->rsa;
                    $ival8 = $output1->cf;
                    $ival8_1 = $output1->grnt;
                    $ival8_2 = $output1->endo;
                    $totalival1 = $ival1+$ival2+$ival3+$ival4+$ival5+$ival6+$ival7+$ival8+$ival8_1+$ival8_2;
                }

            $queryincomeOther = $this->db->select('SUM(income_others_amount) as OIsum2')
                ->where('generatedcode',$code)
                ->where('income_other_year',$yrid)
                ->group_by('income_other_year')
                ->from('tblipafsourceincome_others')
                ->get();

                foreach ($queryincomeOther->result() as $output2) {
                    $ival9 = $output2->OIsum2;
                }

             $queryfpd = $this->db->select('SUM(income_pfd_amount) as totalamountpdf')
                ->where('generatedcode',$code)
                ->where('income_pfd_year',$yrid)
                ->group_by('income_pfd_year')
                ->from('tblipafsourceincome_finespenaltydamage')
                ->get();

                foreach ($queryfpd->result() as $output3) {
                    $ival10 = $output3->totalamountpdf;
                }

            $querydonation = $this->db->select('SUM(donation_amount) as totalamount')
                ->where('generatedcode',$code)
                ->where('income_donate_year',$yrid)
                ->where('income_donation',1)
                ->group_by('income_donate_year')
                ->from('tblipafsourceincome_donation')
                ->get();

                foreach ($querydonation->result() as $output4) {
                    $ival11 = $output4->totalamount;
                }

             $queryincomeOthersource = $this->db->select('SUM(otherincome_other_amount) as totalamountothersourse')
                ->where('generatedcode',$code)
                ->where('otherincome_other_year',$yrid)
                ->group_by('otherincome_other_year')
                ->from('tblipafsourceincomeother_others')
                ->get();

                foreach ($queryincomeOthersource->result() as $output5) {
                    $ival12 = $output5->totalamountothersourse;
                }


            $query5 = $this->db->from('tblpaipafdisbursementfiles')
                ->where('year_disbursement',$yrid-1)
                ->where('generatedcode',$code)
                ->get();

            $query6 = $this->db->from('tblpaipafdisbursementfiles')
                ->where('year_disbursement',$yrid)
                ->where('generatedcode',$code)
                ->get();



                foreach ($query5->result() as $output5) {
                    $val5 = $output5->annual_balances;
                    $val6 = $output5->balance_oldsubfund;
                    $val7 = $output5->balance_paria;
                    $val8 = $output5->balance_sagf;
                }

                foreach ($query6->result() as $output6) {
                    $subincome      = $output6->disbursement_old_income;
                    $subdisburse    = $output6->disbursement_oldsubfund;
                    $subbalance     = $output6->balance_oldsubfund;
                    $runbalanceparia     = $output6->starting_balance_paria;

                    $pariaincome      = $output6->income_paria;
                    $pariadisburse    = $output6->disbursement_paria;
                    $pariabalance     = $output6->balance_paria;
                }
                // $data['message_aincom'] = $ival12 ;
                $data['message_aincom'] = number_format($totalival1 + $ival9 + $ival10 + $ival11 + $ival12,2);



                $data['message4'] = number_format($val5,2);
                $data['message5'] = number_format($val6,2);
                $data['message6'] = number_format($val7,2);
                $data['message7'] = number_format($val8,2);

                $data['message8'] = number_format($subincome,2);
                $data['message9'] = number_format($subdisburse,2);
                $data['message10'] = number_format($subbalance,2);

                $data['message11'] = number_format($pariaincome,2);
                $data['message12'] = number_format($pariadisburse,2);
                $data['message13'] = number_format($pariabalance,2);

                $data['message14'] = number_format($runbalanceparia,2);


                $data['status'] = true;
            else:
                $data['message'] = "";
                $data['message2'] = "";
                $data['status'] = null;
            endif;
            echo json_encode($data);

    }


    public function getIncomefromSelectedYear()
    {
        $yrid = $this->input->post('yrid');
        $code = $this->input->post('code');
        $val1="";
        $val2="";
        $val3="";
        $val4="";
        $val5="";
        $val6="";
        $val7="";
            if (!empty($yrid)) {
            $query = $this->db->select('SUM(entrance_fee+facility_fee+recreational_fee+resource_fee+sapa_fee+moa_fee+rsa_fee+cla_fee+fines_fee+grant_fee+endowment_fee) as sum1')
                // ->join('tbldateyear','tblipafsourceincome.income_date_year=tbldateyear.id_year','left')
                ->from('tblipafsourceincome')
                ->group_by('income_date_year')
                ->where('income_date_year',$yrid)
                ->where('generatedcode',$code)
                ->get();

            $query2 = $this->db->select('SUM(income_others_amount) as sum2')
                // ->join('tbldateyear','tblipafsourceincome_others.income_other_year=tbldateyear.id_year','left')
                ->from('tblipafsourceincome_others')
                ->group_by('income_other_year')
                ->where('income_other_year',$yrid)
                ->where('generatedcode',$code)
                ->get();

            $query3 = $this->db->select('SUM(donation_amount) as sum3')
                // ->join('tbldateyear','tblipafsourceincome_donation.income_donate_year=tbldateyear.id_year','left')
                ->from('tblipafsourceincome_donation')
                ->group_by('income_donate_year')
                ->where('income_donate_year',$yrid)
                ->where('income_donation',1)
                ->where('generatedcode',$code)
                ->get();

            $query4 = $this->db->select('SUM(otherincome_other_amount) as sum4')
                // ->join('tbldateyear','tblipafsourceincomeother_others.otherincome_other_year=tbldateyear.id_year','left')
                ->from('tblipafsourceincomeother_others')
                ->group_by('otherincome_other_year')
                ->where('otherincome_other_year',$yrid)
                ->where('generatedcode',$code)
                ->get();

            $query5 = $this->db->from('tblpaipafdisbursementfiles')
                ->where('year_disbursement',$yrid - 1)
                ->where('generatedcode',$code)
                ->get();

            $query6 = $this->db->from('tblpaipafdisbursementfiles')
                ->where('year_disbursement',$yrid)
                ->where('generatedcode',$code)
                ->get();

            $option = 0;
            $option2 = 0;
            $rrr =  0;
            $rbal = 0;

                foreach ($query2->result() as $output2) {
                    $val2 = $output2->sum2;
                }
                foreach ($query->result() as $output) {
                    $val1 = $output->sum1;
                }
                foreach ($query3->result() as $output3) {
                    $val3 = $output3->sum3;
                }
                foreach ($query4->result() as $output4) {
                    $val4 = $output4->sum4;
                }
                foreach ($query5->result() as $output5) {
                    $val5 = $output5->balance_oldsubfund;
                    // $rrr = $row->disbursement_oldsubfund + $row->disbursement_paria + $row->disbursement_sagf
                }

                foreach ($query6->result() as $output6) {
                    $val6 = $output6->annual_income_old;
                    $val7 = $output6->disbursement_oldsubfund;
                }

                $rbal = (float)$val5 + (float)$val6 - (float)$val7;

                 // number_format($rbal + $row->annual_income_old - $rrr,2);

                $option = number_format(((int)$val1 + (int)$val2 + (int)$val3+ (int)$val4)*0.75,2);
                $option2 = number_format(((int)$val1 + (int)$val2 + (int)$val3+ (int)$val4)*0.25,2);
                $option3 = number_format(((int)$val1 + (int)$val2 + (int)$val3+ (int)$val4),2);
                $data['message'] = $option;
                $data['message2'] = $option2;
                $data['message3'] = $option3;
                $data['message4'] = $rbal;
                $data['status'] = true;

        } else {
            $data['message'] = "";
            $data['message2'] = "";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getCaveMunicipal()
    {
        $munid = $this->input->post('munid');
            if (!empty($munid)) {
            $query = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$munid)
                ->get();

            $option = "<option value=\"\">Select Barangay</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_b\">$prov->barangayName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangay available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipal selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMunicipal()
 		{
       $provid = $this->input->post('provid');

            if (!empty($provid)) {
            $querys = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provid)
                ->get();

            $options = "<option value=\"\">Select Municipality</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $municipals) {
                    $options .= "<option value=\"$municipals->id_m\">$municipals->municipalName - $municipals->cong_dist</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Municipalities available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Province";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getBarangay()
        {
       $munid = $this->input->post('munid');

            if (!empty($munid)) {
            $querys = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$munid)
                ->order_by('barangayName','ASC')
                ->get();

            $options = "<option value=\"\">Select Barangay</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $barangay) {
                    $options .= "<option value=\"$barangay->id_b\">$barangay->barangayName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangays available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipality";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function proj_getProv()
        {
       $regid = $this->input->post('proj_regid');
            if (!empty($regid)) {
            $query = $this->db->select('*')
                ->from('tbllocprovince')
                ->where('regionid',$regid)
                ->get();

            $option = "<option value=\"\">Select Province</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_p\">$prov->provinceName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Provinces available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Region selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function proj_getMunicipal()
        {
       $regid = $this->input->post('regid');
       $provid = $this->input->post('provid');

            if (!empty($provid)) {
            $querys = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provid)
                ->get();

            $options = "<option value=\"\">Select/City</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $municipals) {
                    $options .= "<option value=\"$municipals->id_m\">$municipals->municipalName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Municipalities available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Province";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function proj_getBarangay()
        {
       $munid = $this->input->post('munid');

            if (!empty($munid)) {
            $querys = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$munid)
                ->order_by('barangayName','ASC')
                ->get();

            $options = "<option value=\"\">Select Barangay</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $barangay) {
                    $options .= "<option value=\"$barangay->id_b\">$barangay->barangayName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangays available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipality";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function save_location(){


    	$rel_data = $this->input->post('data_table');

    	$status=$this->pamain_model->save_loc($rel_data);

    	$this->output->set_content_type('application/json');
    	echo json_encode(array('status' => $status));
    }

    public function getnipsub()
        {
       $nipid = $this->input->post('nipid');
            if (!empty($nipid)) {
            $query = $this->db->select('*')
                ->from('tblnipsub')
                ->where('id_nip',$nipid)
                ->get();

            $option = "<option value=\"\"></option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $nip) {
                    $option .= "<option value=\"$nip->id_subnip\">$nip->description</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub legal status available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getnipsubedit()
        {
       $nipid = $this->input->post('id');
            if (!empty($nipid)) {
            $query = $this->db->select('*')
                ->from('tblnip')
                ->where('nipCode',$nipid)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $nip) {
                    $option .= "<option value=\"$nip->id_nip\">$nip->nipDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub legal status available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function fetchlocation(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllUsers($codegens);
        // $dataReg = $this->pamain_model->getRegionq($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td class="hide"><?php echo $row->regionName; ?></td>
                <td class="hide"><?php echo $row->provinceName; ?></td>
                <td class="hide"><?php echo $row->municipalName; ?></td>
                <td><?php echo $row->regionName.", ".$row->provinceName.", ".$row->municipalName." (".$row->cong_dist.")".", ".$row->barangayName ?>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removelocations" style="float:right;" data-id="<?php echo $row->id_loc ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->status; ?></td>
            </tr>
            <?php
        }
    }

    public function fetchbiogeoter(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getbiogeoter($codegens);
        // $dataReg = $this->pamain_model->getRegionq($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->TBZlocation ?>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removetbzter" style="float:right;" data-id="<?php echo $row->id_biodiv_terrestrial  ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function deletetbzter($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamain_terrestrial_biozone WHERE id_biodiv_terrestrial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchbiogeomar(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getbiogeomar($codegens);
        // $dataReg = $this->pamain_model->getRegionq($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->TBZlocationmarine ?>
                    <br>Influencing rivers shapefiles : <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/marine_shp_influencing_river/').$row->marine_shpfile ?>"><?php echo $row->marine_shpfile ?></a>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removetbzmar" style="float:right;" data-id="<?php echo $row->id_biodiv_marine ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function deletetbzmar($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamain_marine_biozone WHERE id_biodiv_marine = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletelocation($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamainlocation WHERE id_loc = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function save_legislation(){

            $rel_data = $this->input->post('table_legislationData');
            $status=$this->pamain_model->save_legislation($rel_data);

            $this->output->set_content_type('application/json');
            echo json_encode(array('status' => $status));
    }

    public function fetchlegis(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllLegislation($codegens);
        foreach($data as $row){
            $codes = $row->legal_generatedcode;
            $data2 = $this->pamain_model->getAllhistoryinitialcomp($codes);
            ?>
            <?php if (!empty($row)) { ?>
                <tr id="<?php echo $row->id_palegis; ?>" style="background-color: #ffdd99;">
                    <?php if (!empty($row->nipsub_id)){ ?>
                        <td style="font-weight: 500"><?php echo (!empty($row->sub_nip_description)?$row->sub_nip_description." - ":"").(!empty($row->nipDesc)?" ".$row->nipDesc:""); ?></td>
                    <?php } else { ?>
                        <td style="font-weight: 500"><?php echo $row->nipDesc?></td>
                    <?php } ?>
                    <td><?php echo (!empty($row->pa_category_id)?$row->categoryName:"").(!empty($row->pa_category_other)?"(".$row->pa_category_other.")":""); ?></td>
                    <td><?php echo $row->LegisDesc." No. ".$row->legis_no; ?></td>
                    <?php if (!empty($row->date_day)): ?>
                        <td><?php echo $row->month." ".$row->date_day.", ".$row->date_year; ?></td>
                    <?php else: ?>
                        <td><?php echo $row->month." ".$row->date_year; ?></td>
                    <?php endif ?>
                    <td><?php echo number_format($row->legis_area,3)?>
                    <div style="float: right;">
                        <button type="button" value="<?php echo $row->id_palegis;?>" class="btn btnbtn btn-info btn-xs" onclick="editlegis(this);">
                        Edit</button>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removelegislation" data-id="<?php echo $row->id_palegis ?>" title="Remove">Remove</button>
                    </div>
                    </td>
                    <td class="hidden"><?php echo $row->legis_no?></td>
                    <td class="hidden"><?php echo number_format($row->legis_area,3)?></td>
                    <td class="hidden"><?php echo $row->pa_category_other?> </td>
                    <!-- 8 -->
                    <!-- <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_map_compilation/').(!empty($row->compilemap_file)?$row->compilemap_file:"") ?>"><?php echo (!empty($row->compilemap_file)?$row->compilemap_file:"") ?></a>
                    </td>    -->
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_map_compilation/').$row->compilemap_file ?>"><?php echo $row->compilemap_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->compilemap_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_pasasrpao/').$row->pasa_file ?>"><?php echo $row->pasa_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->pasa_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_paplan/').$row->inipaplan_file ?>"><?php echo $row->inipaplan_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->inipaplan_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_regionalreview/').$row->regionalreview_file ?>"><?php echo $row->regionalreview_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->regionalreview_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_nationalreview/').$row->nationalreview_file ?>"><?php echo $row->nationalreview_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->nationalreview_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_presidentialproc/').$row->presidentialproc_file ?>"><?php echo $row->presidentialproc_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->presidentialproc_file; ?></td>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_congressenactment/').$row->congressenactment_file ?>"><?php echo $row->congressenactment_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->congressenactment_file; ?></td>
                    <!-- 22 -->
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_map_compilation_shp/').(!empty($row->compilemap_shp)?$row->compilemap_shp:"") ?>"><?php echo (!empty($row->compilemap_shp)?$row->compilemap_shp:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->compilemap_shp; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_certprod/').(!empty($row->cert_proceed_file)?$row->cert_proceed_file:"") ?>"><?php echo (!empty($row->cert_proceed_file)?$row->cert_proceed_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->cert_proceed_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_certconsult/').(!empty($row->cert_consult_file)?$row->cert_consult_file:"") ?>"><?php echo (!empty($row->cert_consult_file)?$row->cert_consult_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->cert_consult_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_regionalreviewstaffwork/').(!empty($row->regional_complete_sw_file)?$row->regional_complete_sw_file:"") ?>"><?php echo (!empty($row->regional_complete_sw_file)?$row->regional_complete_sw_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->regional_complete_sw_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_regionalreviewendorse/').(!empty($row->regional_endorsement_file)?$row->regional_endorsement_file:"") ?>"><?php echo (!empty($row->regional_endorsement_file)?$row->regional_endorsement_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->regional_endorsement_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_nationalreviewstaffwork/').(!empty($row->national_complete_sw_file)?$row->national_complete_sw_file:"") ?>"><?php echo (!empty($row->national_complete_sw_file)?$row->national_complete_sw_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->national_complete_sw_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_nationalreviewendorse/').(!empty($row->national_endorsement_file)?$row->national_endorsement_file:"") ?>"><?php echo (!empty($row->national_endorsement_file)?$row->national_endorsement_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->national_endorsement_file; ?></td>

                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/legal_presidentialprocrecom/').(!empty($row->presproc_recommendation_file)?$row->presproc_recommendation_file:"") ?>"><?php echo (!empty($row->presproc_recommendation_file)?$row->presproc_recommendation_file:"") ?></a>
                    </td>
                    <td class="hide"><?php echo $row->presproc_recommendation_file; ?></td>
                    <td class="hidden"><?php echo $row->prev_category?> </td>
                    <td class="hidden">
                        <?php foreach ($data2 as $dd): ?>
                            <div id="divdevelopmentedit<?php echo $dd->id_legishistory?>" class="showdata">
                            <button type="button" class="btn btnbtn btn-danger btn-xs removehistoryinitialcomp" id="<?php echo $dd->id_legishistory ?>" data-id="<?php echo $dd->id_legishistory ?>" style="position: absolute;right: 25px">
                                Remove
                            </button>
                                <fieldset>
                                    <?php echo "Status : ".$dd->sub_nip_description."<br>Category : ".(!empty($dd->nipid_category)?$dd->categoryName:"")."<br>Legal basis : ".$dd->LegisDesc." no. ".$dd->legal_basis_no."<br>Date Issued : ".(!empty($dd->legal_basis_month)?$dd->month:"")." ".(!empty($dd->legal_basis_day)?$dd->legal_basis_day.", ":"")." ".(!empty($dd->legal_basis_year)?$dd->legal_basis_year:""); ?>
                                </fieldset>
                            </div>
                        <?php endforeach; ?>
                    </td>
										<td class="hidden"><?php echo $row->legal_generatedcode?> </td>

                    <input type="hidden" id="legids<?php echo $row->id_palegis;?>" value="<?php echo $row->nip_id ?>" />
                    <input type="hidden" id="sublegids<?php echo $row->id_palegis;?>" value="<?php echo $row->nipsub_id ?>" />
                    <input type="hidden" id="legis_category<?php echo $row->id_palegis;?>" value="<?php echo $row->pa_category_id ?>" />
                    <input type="hidden" id="legis_id2<?php echo $row->id_palegis;?>" value="<?php echo $row->legis_id ?>" />
                    <input type="hidden" id="legis_month<?php echo $row->id_palegis;?>" value="<?php echo $row->date_month ?>" />
                    <input type="hidden" id="legis_day<?php echo $row->id_palegis;?>" value="<?php echo $row->date_day ?>" />
                    <input type="hidden" id="legis_year<?php echo $row->id_palegis;?>" value="<?php echo $row->date_year ?>" />
                    <input type="hidden" id="chk_leg1<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_compilemap ?>" />
                    <input type="hidden" id="chk_leg2<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_pasa ?>" />
                    <input type="hidden" id="chk_leg3<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_inipaplan ?>" />
                    <input type="hidden" id="chk_leg4<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_regionalreview ?>" />
                    <input type="hidden" id="chk_leg5<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_nationalreview ?>" />
                    <input type="hidden" id="chk_leg6<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_presidentialproc ?>" />
                    <input type="hidden" id="chk_leg7<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_congressenactment ?>" />
                    <input type="hidden" id="chk_leg8<?php echo $row->id_palegis;?>" value="<?php echo $row->chk_publicconsult ?>" />
                    <!-- <td><button type="button" class="btn btn-danger btn-flat removelegislation" data-id="<?php echo $row->id_palegis ?>" title="Remove">Remove</button></td> -->
            </tr>
            <tr style="background-color: #ccebff;">
                <td colspan="6" style="text-align: center;font-weight: 700">History of Establishment</td>
            </tr>
            <?php foreach ($data2 as $dd): ?>
                <tr style="background-color: #f2f2f2;">
                    <td><?php echo $dd->sub_nip_description?></td>
                    <td><?php echo ($dd->nipid_status==1?$dd->categoryName:"")  ?></td>
                    <td><?php echo $dd->LegisDesc." No. ".$dd->legal_basis_no?></td>
                    <?php if (!empty($dd->legal_basis_day)): ?>
                        <td><?php echo $dd->month." ".$dd->legal_basis_day.", ".$dd->legal_basis_year; ?></td>
                    <?php else: ?>
                        <td><?php echo $dd->month." ".$dd->legal_basis_year; ?></td>
                    <?php endif ?>
                    <td><?php echo number_format($dd->legal_basis_area,3)?></td>
                </tr>
            <?php endforeach; ?>
            <?php }else{ ?>
               <tr><td colspan='3'>No data</td></tr>
            <?php } ?>

            <?php
        }
    }

		public function refreshinitialcomphistory()
    {
        $codes = $this->input->post('codegens');
        $donation = $this->pamain_model->getallinitialcomphistory($codes);
        foreach($donation as $dd):;                    ?>
					<div id="divdevelopmentedit<?php echo $dd->id_legishistory?>" class="showdata">
							<button type="button" class="btn btnbtn btn-danger btn-xs removehistoryinitialcomp" id="<?php echo $dd->id_legishistory ?>" data-id="<?php echo $dd->id_legishistory ?>" style="position: absolute;right: 25px">
								Remove
							</button>
							<fieldset>
									<?php echo "Status : ".$dd->sub_nip_description."<br>".(!empty($dd->nipid_category)?$dd->categoryName:"")."Legal basis : ".$dd->LegisDesc." no. ".$dd->legal_basis_no."<br>Dated : ".(!empty($dd->legal_basis_month)?$dd->month:"")." ".(!empty($dd->legal_basis_day)?$dd->legal_basis_day:"")." ".(!empty($dd->legal_basis_year)?$dd->legal_basis_year:""); ?>
							</fieldset>
					</div>
        <?php endforeach;
    }

    public function update_Legal(){
        $gencode = $this->input->post("legis-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("legis-id");
            $details = array('nip_id'                =>      $this->input->post('edit-nipsub_id'),
                             'legis_id'                 =>      $this->input->post('edit-legis_id'),
                             'legis_no'                 =>      $this->input->post('edit-legisno'),
                             'legis_area'               =>      str_replace(',','',$this->input->post('edit-legis_area',true)),
                             'date_month'               =>      $this->input->post('edit-legis_month'),
                             'date_day'                 =>      $this->input->post('edit-legis_day'),
                             'date_year'                =>      $this->input->post('edit-legis_year'),
                             'pa_category_id'           =>      $this->input->post('edit-pacategory_id'),
                             'pa_category_other'        =>      $this->input->post('edit-othernipascategory'),
                             // 'prev_category'        =>      $this->input->post('edit-previouscat'),
                             'chk_compilemap'        =>      $this->input->post('edit-chk_compileMap')==null?0:1,
                             'chk_pasa'        =>      $this->input->post('edit-chk_pasasrpao')==null?0:1,
                             'chk_inipaplan'        =>      $this->input->post('edit-chk_initplan'),
                             'chk_regionalreview'        =>      $this->input->post('edit-chk_regionalreview')==null?0:1,
                             'chk_nationalreview'        =>      $this->input->post('edit-chk_nationalreview')==null?0:1,
                             'chk_presidentialproc'        =>      $this->input->post('edit-chk_presproc')==null?0:1,
                             'chk_congressenactment'      =>      $this->input->post('edit-chk_congressenact')==null?0:1,
                             'compilemap_file' => (empty($this->input->post('edit-legis_compileMap_span'))?$this->input->post('edit-legis_compileMap_old'):$this->input->post('edit-legis_compileMap_span')),
                             'pasa_file' => (empty($this->input->post('edit-legis_pasasrpao_span'))?$this->input->post('edit-legis_pasasrpao_old'):$this->input->post('edit-legis_pasasrpao_span')),
                             'inipaplan_file' => (empty($this->input->post('edit-legis_paplan_span'))?$this->input->post('edit-legis_paplan_old'):$this->input->post('edit-legis_paplan_span')),
                             'regionalreview_file' => (empty($this->input->post('edit-legis_regionalreview_span'))?$this->input->post('edit-legis_regionalreview_old'):$this->input->post('edit-legis_regionalreview_span')),
                             'nationalreview_file' => (empty($this->input->post('edit-legis_nationalreview_span'))?$this->input->post('edit-legis_nationalreview_old'):$this->input->post('edit-legis_nationalreview_span')),
                             'presidentialproc_file' => (empty($this->input->post('edit-legis_presproc_span'))?$this->input->post('edit-legis_presproc_old'):$this->input->post('edit-legis_presproc_span')),
                             'congressenactment_file' => (empty($this->input->post('edit-legis_congressenact_span'))?$this->input->post('edit-legis_congressenact_old'):$this->input->post('edit-legis_congressenact_span')),
                             'compilemap_shp' => (empty($this->input->post('edit-legis_compileMapshp_span'))?$this->input->post('edit-legis_compileMapshp_old'):$this->input->post('edit-legis_compileMapshp_span')),
                             'cert_proceed_file' => (empty($this->input->post('edit-legis_certproceed_span'))?$this->input->post('edit-legis_certproceed_old'):$this->input->post('edit-legis_certproceed_span')),
                             'cert_consult_file' => (empty($this->input->post('edit-legis_certconsult_span'))?$this->input->post('edit-legis_certconsult_old'):$this->input->post('edit-legis_certconsult_span')),
                             'regional_complete_sw_file' => (empty($this->input->post('edit-legis_regionalreviewstaffwork_span'))?$this->input->post('edit-legis_regionalreviewstaffwork_old'):$this->input->post('edit-legis_regionalreviewstaffwork_span')),
                             'regional_endorsement_file' => (empty($this->input->post('edit-legis_regionalreviewendorse_span'))?$this->input->post('edit-legis_regionalreviewendorse_old'):$this->input->post('edit-legis_regionalreviewendorse_span')),
                             'national_complete_sw_file' => (empty($this->input->post('edit-legis_nationalreviewstaffwork_span'))?$this->input->post('edit-legis_nationalreviewstaffwork_old'):$this->input->post('edit-legis_nationalreviewstaffwork_span')),
                             'national_endorsement_file' => (empty($this->input->post('edit-legis_nationalreviewendorse_span'))?$this->input->post('edit-legis_nationalreviewendorse_old'):$this->input->post('edit-legis_nationalreviewendorse_span')),
                             'presproc_recommendation_file' => (empty($this->input->post('edit-legis_presprocrecom_span'))?$this->input->post('edit-legis_presprocrecom_old'):$this->input->post('edit-legis_presprocrecom_span')),

                         );
            $this->pamain_model->update_Legal($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function deletelegis($id = null)
    {
            $sql1 = $this->db->where('id_palegis',$id)
                                            ->get('tblpamainlegislation')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpamainlegislation WHERE id_palegis = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function getDataBio()
        {
        $catid = $this->input->post('catid');
            if (!empty($catid)) {
            $query = $this->db->select('*')
                ->from('tblclass')
                ->where('WCode',$catid)
                ->get();

                $option = "<option value=\"\">Select Province</option>";
                if ($query->num_rows() > 0) {
                    foreach ($query->result() as $try) {
                        $option .= "<option value=\"$try->id_c\">$try->ClassDesc</option>";
                    }
                    $data['message'] = $option;
                    $data['status'] = true;
                } else {
                    $data['message'] = "No data...";
                    $data['status'] = false;
                }
            }else{
                $data['message'] = "Error...";
                $data['status'] = null;
            }
        echo json_encode($data);
    }

    public function getriverbasinwatershedname()
        {
        $catid = $this->input->post('catid');
            if (!empty($catid)) {
            $query = $this->db->select('*')
                ->from('tblriverbasin__watershed')
                ->where('riverbasin_id',$catid)
                ->get();

                $option = "<option value=\"\">Select Watershed Name</option>";
                if ($query->num_rows() > 0) {
                    foreach ($query->result() as $try) {
                        $option .= "<option value=\"$try->id_watersheds\">$try->watershed_names</option>";
                    }
                    $data['message'] = $option;
                    $data['status'] = true;
                } else {
                    $data['message'] = "No data...";
                    $data['status'] = false;
                }
            }else{
                $data['message'] = "Error...";
                $data['status'] = null;
            }
        echo json_encode($data);
    }

    public function getWatershedname()
        {
       $ids = $this->input->post('ids');

            if (!empty($ids)) {
            $querys = $this->db->select('*')
                ->from('tblriverbasin__watershed')
                ->where('riverbasin_id',$ids)
                ->get();

            $options = "<option value=\"\">Select Watersheds</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $wc) {
                    $options .= "<option value=\"$wc->id_watersheds\">$wc->watershed_names</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Watersheds available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Watersheds selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getDataBiosss()
        {
        $commonname = $this->input->post('searchbox');

        $commonid = $this->input->post('commonid');
        $code = $this->input->post('code');

            if (!empty($commonname)) {
            $query = $this->db->select('*')
                ->join('tblpamainbiological_residency','tblwspeciesgenus.residency_status = tblpamainbiological_residency.id_residency','left')
                ->join('tbliucncode','tblwspeciesgenus.status = tbliucncode.id','left')
                ->join('tblfamily','tblwspeciesgenus.family_id = tblfamily.id_scientific','left')
                ->join('tblorderw','tblfamily.Ordercode = tblorderw.id_family','left')
                ->join('tblclass','tblorderw.ClassCodes = tblclass.id_c','left')
                ->join('tblwcategory','tblclass.WCode = tblwcategory.id','left')
                ->from('tblwspeciesgenus')
                ->where('id_genus',$commonname)
                ->get();

                $category = "";
                $class = "";
                $order = "";
                $family = "";
                $scientific="";
                $status = "";
                $common = "";
                $image_s = "";
                $cname = "";
                $residencys = "";
                if ($query->num_rows() > 0) {
                    foreach ($query->result() as $try) {
                        $category .= "$try->wdesc";
                        $class .= "$try->ClassDesc";
                        $order .= "$try->OrderDesc";
                        $family .= "$try->ScientificName";
                        $scientific .= "$try->scientificName_genus";
                        $status .= "$try->desc_status";
                        $common .= "$try->id_genus";
                        $image_s .="$try->image";
                        $cname .="$try->commonNameSpecies";
                        $residencys .="$try->residency_desc";
                    }
                    $data['messagecat'] = $category;
                    $data['messageclass'] = $class;
                    $data['messageorder'] = $order;
                    $data['messagefamily'] = $family;
                    $data['messagescientific'] = $scientific;
                    $data['messagestatus'] = $status;
                    // $data['messagestatus'] = $status;
                    $data['messagecommon'] = $common;
                    $data['messageimage'] = $image_s;
                    $data['messagecname'] = $cname;
                    $data['messageresidency'] = $residencys;
                    $data['status'] = true;
                } else {
                    $data['message'] = "No data...";
                    $data['status'] = false;
                }
            }else{
                $data['message'] = "Error...";
                $data['status'] = null;
            }
        echo json_encode($data);
    }

    public function getDataFishdetails()
        {
        $commonname = $this->input->post('searchbox');

        $code = $this->input->post('code');

            if (!empty($commonname)) {
            $query = $this->db->select('*')
                ->from('tblcoastalmarine_fishspecies')
                ->where('id_fishspecies',$commonname)
                ->get();

                $family = "";
                $group = "";
                $trophic = "";
                $common = "";
                if ($query->num_rows() > 0) {
                    foreach ($query->result() as $try) {
                        $family .= "$try->fish_family";
                        $group .= "$try->fish_group";
                        $trophic .= "$try->fish_tropic_group";
                        $common .= "$try->id_fishspecies";

                    }
                    $data['messagefamily'] = $family;
                    $data['messagegroup'] = $group;
                    $data['messagetrophic'] = $trophic;
                    $data['messageidfish'] = $common;
                    $data['status'] = true;
                } else {
                    $data['message'] = "No data...";
                    $data['status'] = false;
                }
            }else{
                $data['message'] = "Error...";
                $data['status'] = null;
            }
        echo json_encode($data);
    }

    public function save_biological(){

            $rel_data = $this->input->post('table_biological');
            $status=$this->pamain_model->save_biological($rel_data);

            $this->output->set_content_type('application/json');
            echo json_encode(array('status' => $status));
    }

    public function fetchSpeciesPopulations()
    {
        $id_species = $this->input->post('codegens');        
        $data_population = $this->pamain_model->getAllbiologicalspeciesPopulation($id_species);
        foreach ($data_population as $pops) {
            echo "<tr id=".$pops->id_biopopulation.">
                     <td>".(!empty($pops->fdateM)?$pops->fdateM." ":"").(!empty($pops->fdateD)?$pops->fdateD.", ":"").(!empty($pops->fdateY)?$pops->fdateY:"")."</td>
                     <td>".($pops->activity_title)."</td>
                     <td>".number_format($pops->populationcount,2)."</td>
                     <td>".($pops->populationremarks)."</td>
                     <td>".'<button type="button" value="'.$pops->id_biopopulation.'" class="btn btnbtn btn-info btn-xs" onclick="editfaunafloraPop(this);">Edit</button>'.
                         '<button type="button" class="btn btnbtn btn-danger btn-xs removebiologicalpops" data-id="'.$pops->id_biopopulation.'" title="Remove">Remove</button>'.
                         '<input type="hidden" id="popsy1'.$pops->id_biopopulation.'" value="'.$pops->fdateM.'" />'.
                         '<input type="hidden" id="popsy2'.$pops->id_biopopulation.'" value="'.$pops->fdateD.'" />'.
                         '<input type="hidden" id="popsy3'.$pops->id_biopopulation.'" value="'.$pops->fdateY.'" />'.
                     "</td>
                 </tr>";
        }
    }

    public function fetchBiological(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllbiological($codegens);
        foreach($data as $row){
        $id_species = $row->species_codegen;
        $data_species = $this->pamain_model->getAllbiologicalImgespecies($id_species);
        $data_population = $this->pamain_model->getAllbiologicalspeciesPopulation($id_species);
            ?>
            <tr id="<?php echo $row->id_pabiological; ?>" class="text-center trow">
                <td class="hidden"><?php echo $row->description; ?></td>
                <td class="hidden"><?php echo $row->ClassDesc; ?></td>
                <td class="hidden"><?php echo $row->OrderDesc; ?></td>
                <td class="hidden"><?php echo $row->commonNameSpecies; ?></td>
                <td class="hidden"><?php echo $row->scientificName_genus; ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/wildlife_img/'.(!empty($row->image)?$row->image:"nophoto.jpg") ?></td>
                <td class="hidden"><?php echo $row->image; ?></td>
                <td class="hidden"><?php echo $row->chk_forest; ?></td>
                <td class="hidden"><?php echo $row->chk_inland; ?></td>
                <td class="hidden"><?php echo $row->chk_cave; ?></td>
                <td class="hidden"><?php echo $row->chk_coral; ?></td>
                <td class="hidden"><?php echo $row->chk_seagrass; ?></td>
                <td class="hidden"><?php echo $row->chk_mangrove; ?></td>
                <td class="hidden"><?php echo $row->residency_desc; ?></td>
                <td class="hidden">
                   <?php
                    foreach($data_species as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removespeciesindi gal-btn" data-id="'.$rows->id_biological_image.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/species_img_local/').$rows->species_image.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden"><?php echo $row->species_codegen; ?></td>
                <td class="hidden"><?php echo $row->localname; ?></td>
                <td class="hidden"><?php echo $row->estimate_population; ?></td>
                <td class="hidden"><?php echo $row->photo_references; ?></td>
                <td style="text-align: left">
                    <?php
                       echo
                        '<div class="row-div">'.
                        '<div class="thumbnail">'.
                        '<img src="'.base_url('bmb_assets2/upload/wildlife_img/').(!empty($row->image)?$row->image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img></div>'.
                        '<div class="thumbnail">'.
                        '<br><b>Conservation Status :</b>'.$row->description.
                        '<br><b>Class: </b>'.$row->ClassDesc.
                        '<br><b>Order : </b>'.$row->OrderDesc.
                        '<br><b>Common Name : </b>'.$row->commonNameSpecies.
                        '<br><b>Scientific Name : </b><i>'.$row->scientificName_genus.'</i>'.
                        '<br><b>Local Name : </b>'.$row->localname.
                        '<br><b>Residency Status : </b>'.$row->residency_desc.
                        // '<br><b>Estimated Population : </b>'.$row->estimate_population.
                        '<br><b>Habitats/Ecosystem Discovered : </b>'.
                        (($row->chk_forest==1)?"<i class='glyphicon glyphicon-ok'></i>Forest":" ").
                        (($row->chk_inland==1)?"<i class='glyphicon glyphicon-ok'></i>Inland Wetland":" ").
                        (($row->chk_cave==1)?"<i class='glyphicon glyphicon-ok'></i>Cave":" ").
                        (($row->chk_coral==1)?"<i class='glyphicon glyphicon-ok'></i>Coral Reefs":" ").
                        (($row->chk_seagrass==1)?"<i class='glyphicon glyphicon-ok'></i>Seagrasses":" ").
                        (($row->chk_mangrove==1)?"<i class='glyphicon glyphicon-ok'></i>Mangrove":" ").
                        (($row->chk_mudflats==1)?"<i class='glyphicon glyphicon-ok'></i>Tidal flats/Mudflats":" ").
                        (($row->chk_coastalwetland==1)?"<i class='glyphicon glyphicon-ok'></i>Coastal Wetland":" ").
                        (($row->chk_grassland==1)?"<i class='glyphicon glyphicon-ok'></i>Grassland":" "); ?>
                        <?php
                            echo "<div class='table-responsive large-tables'>
                                        <table class='temp-content-table'>
                                            <thead>
                                                <tr>
                                                    <th colspan='4'>Estimate Population</th>
                                                </tr>
                                                <tr>
                                                    <th>Date Conducted</th>
                                                    <th>Activity</th>
                                                    <th>Estimate Population</th>
                                                    <th>Remarks</th>
                                                </tr>
                                            </thead>
                                            <tbody>";
                            foreach ($data_population as $pop) {
                                echo "<tr>
                                        <td>".(!empty($pop->fdateM)?$pop->fdateM." ":"").(!empty($pop->fdateD)?$pop->fdateD.", ":"").(!empty($pop->fdateY)?$pop->fdateY:"")."</td>
                                        <td>".($pop->activity_title)."</td>
                                        <td>".number_format($pop->populationcount,2)."</td>
                                        <td>".($pop->populationremarks)."</td>
                                      </tr>";
                            }
                            echo "</tbody>
                                        </table>
                                      </div>";
                        ?>
                        <br><button type="button" value="<?php echo $row->id_pabiological;?>" class="btn btnbtn btn-info btn-xs" onclick="editfaunaflora(this);">Edit</button>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removebiological" data-id="<?php echo $row->species_codegen ?>" title="Remove">Remove</button></div></div>                        
                        <?php
                            foreach ($data_species as $spec) {
                                echo "<div style='display: inline-block'>".(!empty($spec->species_image)?'<img src="'.base_url('bmb_assets2/upload/species_img_local/').(!empty($spec->species_image)?$spec->species_image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px">':"")."</div>";
                            }
                        ?>




                <!-- <input type="hidden" id="bioresstat<?php echo $row->id_pabiological;?>" value="<?php echo $row->residency_status ?>" /> -->
                <input type="hidden" id="chk1s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_forest; ?>" />
                <input type="hidden" id="chk2s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_inland; ?>" />
                <input type="hidden" id="chk3s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_cave; ?>" />
                <input type="hidden" id="chk4s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_coral; ?>" />
                <input type="hidden" id="chk5s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_seagrass; ?>" />
                <input type="hidden" id="chk6s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_mangrove; ?>" />
                <input type="hidden" id="chk7s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_mudflats; ?>" />
                <input type="hidden" id="chk8s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_coastalwetland; ?>" />
                <input type="hidden" id="chk9s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_grassland; ?>" />
                </td>
            </tr>
            <?php
        }
    }

    public function fetchBiologicalflora(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllbiologicalflora($codegens);
        foreach($data as $row){
            $id_species = $row->species_codegen;
            $data_species = $this->pamain_model->getAllbiologicalImgespecies($id_species);
            $data_population = $this->pamain_model->getAllbiologicalspeciesPopulation($id_species);
            ?>
            <tr id="<?php echo $row->id_pabiological; ?>" class="text-center trow">
                <td class="hidden"><?php echo $row->description; ?></td>
                <td class="hidden"><?php echo $row->ClassDesc; ?></td>
                <td class="hidden"><?php echo $row->OrderDesc; ?></td>
                <td class="hidden"><?php echo $row->commonNameSpecies; ?></td>
                <td class="hidden"><?php echo $row->scientificName_genus; ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/wildlife_img/'.$row->image ?></td>
                <td class="hidden"><?php echo $row->image; ?></td>
                <td class="hidden"><?php echo $row->chk_forest; ?></td>
                <td class="hidden"><?php echo $row->chk_inland; ?></td>
                <td class="hidden"><?php echo $row->chk_cave; ?></td>
                <td class="hidden"><?php echo $row->chk_coral; ?></td>
                <td class="hidden"><?php echo $row->chk_seagrass; ?></td>
                <td class="hidden"><?php echo $row->chk_mangrove; ?></td>
                <td class="hidden">
                   <?php
                    foreach($data_species as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat removespeciesindi gal-btn" data-id="'.$rows->id_biological_image.'" title="Remove">Remove</button>
                        <img src="'.base_url().'bmb_assets2/upload/species_img_local/'.$rows->species_image.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>

                       ';
                    }
                   ?>
                </td>
                <td class="hidden"><?php echo $row->species_codegen; ?></td>
                <td class="hidden"><?php echo $row->localname; ?></td>
                <td class="hidden"><?php echo $row->estimate_population; ?></td>
                <td class="hidden"><?php echo $row->photo_references; ?></td>
                <td style="text-align: left">
                    <?php
                       echo
                        '<div class="row-div">'.
                        '<div class="thumbnail">'.
                        '<img src="'.base_url('bmb_assets2/upload/wildlife_img/').(!empty($row->image)?$row->image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img></div>'.
                        '<div class="thumbnail">'.
                        '<br><b>Conservation Status :</b>'.$row->description.
                        '<br><b>Class: </b>'.$row->ClassDesc.
                        '<br><b>Order : </b>'.$row->OrderDesc.
                        '<br><b>Common Name : </b>'.$row->commonNameSpecies.
                        '<br><b>Scientific Name : </b><i>'.$row->scientificName_genus.'</i>'.
                        '<br><b>Local Name : </b>'.$row->localname.
                        '<br><b>Residency Status : </b>'.$row->residency_desc.
                        // '<br><b>Estimated Population : </b>'.$row->estimate_population.
                        '<br><b>Habitats/Ecosystem Discovered : </b>'.
                        (($row->chk_forest==1)?"<i class='glyphicon glyphicon-ok'></i>Forest":" ").
                        (($row->chk_inland==1)?"<i class='glyphicon glyphicon-ok'></i>Inland Wetland":" ").
                        (($row->chk_cave==1)?"<i class='glyphicon glyphicon-ok'></i>Cave":" ").
                        (($row->chk_coral==1)?"<i class='glyphicon glyphicon-ok'></i>Coral Reefs":" ").
                        (($row->chk_seagrass==1)?"<i class='glyphicon glyphicon-ok'></i>Seagrasses":" ").
                        (($row->chk_mangrove==1)?"<i class='glyphicon glyphicon-ok'></i>Mangrove":" ").
                        (($row->chk_mudflats==1)?"<i class='glyphicon glyphicon-ok'></i>Tidal flats/Mudflats":" ").
                        (($row->chk_coastalwetland==1)?"<i class='glyphicon glyphicon-ok'></i>Coastal Wetland":" ").
                        (($row->chk_grassland==1)?"<i class='glyphicon glyphicon-ok'></i>Grassland":" "); ?>
                        <?php
                            echo "<div class='table-responsive large-tables'>
                                        <table class='temp-content-table'>
                                            <thead>
                                                <tr>
                                                    <th colspan='4'>Estimate Population</th>
                                                </tr>
                                                <tr>
                                                    <th>Date Conducted</th>
                                                    <th>Activity</th>
                                                    <th>Estimate Population</th>
                                                    <th>Remarks</th>
                                                </tr>
                                            </thead>
                                            <tbody>";
                            foreach ($data_population as $pop) {
                                echo "<tr>
                                        <td>".(!empty($pop->fdateM)?$pop->fdateM." ":"").(!empty($pop->fdateD)?$pop->fdateD.", ":"").(!empty($pop->fdateY)?$pop->fdateY:"")."</td>
                                        <td>".($pop->activity_title)."</td>
                                        <td>".number_format($pop->populationcount,2)."</td>
                                        <td>".($pop->populationremarks)."</td>
                                      </tr>";
                            }
                            echo "</tbody>
                                        </table>
                                      </div>";
                        ?>
                        <br><button type="button" value="<?php echo $row->id_pabiological;?>" class="btn btnbtn btn-info btn-xs" onclick="editfaunafloraOnly(this);">Edit</button>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removebiologicalflora" data-id="<?php echo $row->species_codegen ?>" title="Remove">Remove</button></div></div>
                    <?php
                        foreach ($data_species as $spec) {
                            echo "<div style='display: inline-block'>".(!empty($spec->species_image)?'<img src="'.base_url('bmb_assets2/upload/species_img_local/').(!empty($spec->species_image)?$spec->species_image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px">':"")."</div>";
                        }
                            // echo '<br><hr><img src="'.base_url('bmb_assets2/upload/wildlife_img/').(!empty($row->image)?$row->image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>';
                    ?>
                <input type="hidden" id="bioresstat<?php echo $row->id_pabiological;?>" value="<?php echo $row->residency_status ?>" />
                <input type="hidden" id="chk1s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_forest; ?>" />
                <input type="hidden" id="chk2s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_inland; ?>" />
                <input type="hidden" id="chk3s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_cave; ?>" />
                <input type="hidden" id="chk4s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_coral; ?>" />
                <input type="hidden" id="chk5s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_seagrass; ?>" />
                <input type="hidden" id="chk6s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_mangrove; ?>" />
                <input type="hidden" id="chk7s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_mudflats; ?>" />
                <input type="hidden" id="chk8s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_coastalwetland; ?>" />
                <input type="hidden" id="chk9s<?php echo $row->id_pabiological;?>" value="<?php echo $row->chk_grassland; ?>" />
                </td>
                <td class="hidden"><?php echo $row->residency_desc; ?></td>
                <td class="hidden"><?php echo $row->residency_desc; ?></td>

            </tr>
            <?php
        }
    }

    public function fetchspeciesimagelocal(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllbiologicalImgespeciesIndi($codegens);
        foreach($datar as $row){
            $output .= '
                <div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat removespeciesindi gal-btn" data-id="'.$row->id_biological_image.'" title="Remove">Remove</button>
                    <img src="'.base_url().'bmb_assets2/upload/species_img_local/'.$row->species_image.'" class="img-responsive img-thumbnail img-gallery" /><br>
                </div>

           ';
        }
        echo $output;

    }

    public function deletebiological($id = null)
    {

        $output = array();
        $sql = "DELETE tblpamainbiological,tblpamainbiological_img,tblpamainbiological_population
                FROM tblpamainbiological
                LEFT JOIN tblpamainbiological_img ON tblpamainbiological_img.species_codegen = tblpamainbiological.species_codegen
                LEFT JOIN tblpamainbiological_population ON tblpamainbiological_population.species_codegen = tblpamainbiological.species_codegen
                WHERE tblpamainbiological.species_codegen = '$id'
                ";
        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function deletebiologicalpopulations($id = null)
    {

        $output = array();
        $sql = "DELETE FROM tblpamainbiological_population WHERE id_biopopulation = '$id'";
        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function deletebiologicalflora($id = null)
    {

        $output = array();
        // $sql = "DELETE tblpamainbiological,tblpamainbiological_img
        //          FROM tblpamainbiological,tblpamainbiological_img
        //          WHERE tblpamainbiological.species_codegen = tblpamainbiological_img.species_codegen AND
        //          tblpamainbiological_img.species_codegen = '$id' OR tblpamainbiological.species_codegen = '$id'";
         $sql = "DELETE FROM tblpamainbiological WHERE species_codegen = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function save_pamb(){

            $rel_data = $this->input->post('table_pamb');
            $status=$this->pamain_model->save_pambs($rel_data);

            $this->output->set_content_type('application/json');
            echo json_encode(array('status' => $status));
    }

    public function fetchPAMB(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllPAMBmembers($codegens);
        foreach($data as $row){
            $code = $row->pamb_codegen;
            $data2 = $this->pamain_model->getAllPAMBmembersTechcomm($code);
            ?>
            <tr id="<?php echo $row->id_pambmember; ?>" class="text-center trow">
                <td><?php echo (!empty($row->fname)?$row->fname." ":"")." ".(!$row->mname?$row->mname." ":"").(!empty($row->lname)?$row->lname." ":"").$row->pamb_suffix; ?></td>
                <td class="hide"><?php echo $row->fname; ?></td>
                <td class="hide"><?php echo $row->mname; ?></td>
                <td class="hide"><?php echo $row->lname; ?></td>
                <td class="hide"><?php echo $row->sex; ?></td>
                <td class="hide"><?php echo $row->civil_status; ?></td>
                <td class="hide"><?php echo $row->residential_address; ?></td>
                <td class="hide"><?php echo $row->designation; ?></td>
                <td class="hide"><?php echo $row->office_name; ?></td>
                <td class="hide"><?php echo $row->appointment; ?></td>
                <td class="hide"><?php echo $row->appointment_month; ?></td>
                <td class="hide"><?php echo $row->appointment_day; ?></td>
                <td class="hide"><?php echo $row->appointment_year; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->status; ?></td>
                <td class="hide"><?php echo $row->sub_appointment; ?></td>
                <td><?php echo $row->sexdesc; ?></td>
                <td><?php echo $row->office_name; ?></td>
                <td><?php echo $row->designation.", ".$row->description; ?></td>
                <?php if (!empty($row->month || !empty($row->appointment_day) || !empty($row->appointment_year))) {
                ?>
                <td><?php echo $row->month." ".$row->appointment_day.", ".$row->appointment_year; ?></td>
                <?php
                } else {
                ?>
                <td>N/A</td>

                <?php }
                ?>
                <td class="hide"><?php echo $row->pamb_landline; ?></td>
                <td class="hide"><?php echo $row->pamb_mobile; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_update; ?></td>
                <?php if (!empty($row->pamb_file_appt)): ?>
                    <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/pamb_file_appointment/').$row->pamb_file_appt ?>"><?php echo $row->pamb_file_appt ?></a></td>
                    <td class="hide"><?php echo $row->pamb_file_appt; ?></td>
                <?php else: ?>
                    <td class="hide"></td>
                    <td class="hide"><?php echo $row->pamb_file_appt; ?></td>
                <?php endif ?>
                <td class="hide"><?php echo $row->alternateofficial; ?></td>
                <td class="hide"><?php echo $row->alternateofficial_postition; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_pambmember;?>" class="btn btn-info btn-xs" onclick="edit_services(this)">Edit</button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removepambmembersss" data-id="<?php echo $row->pamb_codegen ?>">Remove</button>
                </td>
                <td class="hide"><?php echo $row->name_twg; ?></td>
                <td class="hide"><?php echo $row->techcomm_other; ?></td>
                <td class="hide"><?php echo $row->pamb_codegen; ?></td>
                <td class="hide">
                    <?php $pctr=0;foreach($data2 as $cc):$pctr+=1;
                    if (!empty($cc->pambcode)) :
                    ?>
                        <div class="col-xs-12 container-boxes">
                            <div class="row-boxes">
                                <b>Technical Committe : </b> <?php echo $cc->techcomm_detail; ?><br>
                                <?php
                                if ($cc->techcomm == 9) {
                                    echo "<b>Others : </b>".$cc->other_techcomm;
                                }
                                ?>
                                <br><button type="button" class="btn btn-danger btn-xs removepambtechcomm" id="<?php echo $cc->id_techcomms ?>" data-id="<?php echo $cc->id_techcomms ?>">Remove</button>
                            </div>
                        </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hide"><?php echo $row->pamb_suffix; ?></td>
                <td class="hide"><?php echo $row->cofname; ?></td>
                <td class="hide"><?php echo $row->comname; ?></td>
                <td class="hide"><?php echo $row->colname; ?></td>
                <td class="hide"><?php echo $row->cosuffix; ?></td>
                <td class="hide"><?php echo $row->coposition; ?></td>
                <td class="hide"><?php echo $row->cosex; ?></td>
                <td class="hide"><?php echo $row->colandline; ?></td>
                <td class="hide"><?php echo $row->comobile; ?></td>
                <td class="hide"><?php echo $row->cochair; ?></td>

                <input type="hidden" id="cap22<?php echo $row->id_pambmember;?>" value="<?php echo $row->appointment ?>" />
                <input type="hidden" id="cap222<?php echo $row->id_pambmember;?>" value="<?php echo $row->sub_appointment ?>" />
                <input type="hidden" id="csex3<?php echo $row->id_pambmember;?>" value="<?php echo $row->sex ?>" />
                <input type="hidden" id="twgc<?php echo $row->id_pambmember;?>" value="<?php echo $row->techworkgrp ?>" />
                <input type="hidden" id="tcc<?php echo $row->id_pambmember;?>" value="<?php echo $row->techcom ?>" />
                <input type="hidden" id="ecc<?php echo $row->id_pambmember;?>" value="<?php echo $row->execom ?>" />
                <input type="hidden" id="ttw1<?php echo $row->id_pambmember;?>" value="<?php echo $row->alternateofficial_sex ?>" />
                <input type="hidden" id="ttw2<?php echo $row->id_pambmember;?>" value="<?php echo $row->alternateofficial_appoint_month ?>" />
                <input type="hidden" id="ttw3<?php echo $row->id_pambmember;?>" value="<?php echo $row->alternateofficial_appoint_day ?>" />
                <input type="hidden" id="ttw4<?php echo $row->id_pambmember;?>" value="<?php echo $row->alternateofficial_appoint_year ?>" />
                <input type="hidden" id="ttw5<?php echo $row->id_pambmember;?>" value="<?php echo $row->appointment ?>" />
                <input type="hidden" id="ttw6<?php echo $row->id_pambmember;?>" value="<?php echo $row->sub_appointment ?>" />
                <input type="hidden" id="ttw7<?php echo $row->id_pambmember;?>" value="<?php echo $row->name_techcom ?>" />
                <input type="hidden" id="ttw8<?php echo $row->id_pambmember;?>" value="<?php echo $row->pamb_codegen ?>" />
                <input type="hidden" id="ttw9<?php echo $row->id_pambmember;?>" value="<?php echo $row->status ?>" />
                <input type="hidden" id="ttw10<?php echo $row->id_pambmember;?>" value="<?php echo $row->cochair ?>" />
            </tr>
            <?php
        }
    }

     public function deletepambmember($id = null)
    {

        $output = array();
         // $sql = "DELETE FROM tblpambmember WHERE id_pambmember = '$id'";
        $sql = "DELETE tblpambmember,tblpambmember_techcomm
                FROM tblpambmember
                LEFT JOIN tblpambmember_techcomm ON tblpambmember_techcomm.pambcode = tblpambmember.pamb_codegen
                WHERE tblpambmember.pamb_codegen = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Member Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function listoftechcomm()
{
    $code = $this->input->post('codegens');
    $data2 = $this->pamain_model->getAllPAMBmembersTechcomm($code);
    ?>
    <?php $pctr=0;foreach($data2 as $cc):$pctr+=1;
    ?>
        <div class="col-xs-12 container-boxes">
            <div class="row-boxes">
                <b>Technical Committe : </b> <?php echo $cc->techcomm_detail; ?><br>
                <?php
                if ($cc->techcomm == 9) {
                    echo "<b>Others : </b>".$cc->other_techcomm;
                }
                ?>
                <br><button type="button" class="btn btn-danger btn-xs removepambtechcomm" id="<?php echo $cc->id_techcomms ?>" data-id="<?php echo $cc->id_techcomms ?>">Remove</button>
            </div>
        </div>
    <?php endforeach;?>
    <?php
}

     public function deleteapasuinfor($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpaapasuinfo WHERE id_apasu = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Member Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function ecotourism_upload_save(){

        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['pic_eco']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/ecotourism_img';
            $config['file_name'] = $_FILES['pic_eco']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_eco')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('eco_id') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $this->form_validation->set_rules('activities','Activity Title','required');
        $this->form_validation->set_rules('description','Activity Description','required');

        $data['pamainimage'] = (object)$postDataImage = [
            'eco_id'          => $this->input->post('eco_id',true),
            'generatedcode '  => $this->input->post('gencode',true),
            'activities'      =>  $this->input->post('activities',true),
            'description'     =>  $this->input->post('description',true),
            'image_eco'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['eco_id'])){
                $query = $this->pamain_model->createImageeco($postDataImage);
                if($query){
                $output['status'] = 'New Ecotourism activities successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);

    }

    public function fetchImageeco(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageeco($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->eco_id; ?>" class="trows">
                <td>
                    <button type="button" value="<?php echo $row->eco_id;?>" class="btn btnbtn btn-info btn-xs" onclick="editactivity(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageeco" data-id="<?php echo $row->eco_id ?>" title="Remove">Remove</button>
                    <?php echo '<br><hr><img src="'.base_url('bmb_assets2/upload/ecotourism_img/').(!empty($row->image_eco)?$row->image_eco:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>'.$row->activity_title.'</b><p>'.$row->description_activity.'</p><hr>'; ?>
                </td>
                <td class="hide"><?php echo '<img src="'.base_url('bmb_assets2/upload/ecotourism_img/').(!empty($row->image_eco)?$row->image_eco:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?></td>
                <td class="hide"><?php echo '<b>'.$row->activity_title.'</b><p>'.$row->description_activity.'</p>'; ?></td>
                <td class="hide"><?php echo $row->activity_title; ?></td>
                <td class="hide"><?php echo $row->description_activity; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/ecotourism_img/').$row->image_eco ?></td>
                <td class="hide"><?php echo $row->image_eco ?></td>
                <input type="hidden" id="ceprise<?php echo $row->eco_id;?>" value="<?php echo $row->eco_id ?>" />
            </tr>
            <?php
        }
    }

    public function deleteecotourism($id = null)
        {
            $sql1 = $this->db->where('eco_id',$id)
                                            ->get('tblpaecotourism')
                                            ->row();
            if ($sql1->image_eco == "nophoto.jpg" || empty($sql1->image_eco)) {

            }elseif (!empty($sql1->image_eco)) {
                unlink('bmb_assets2/upload/ecotourism_img/'.$sql1->image_eco);
            }

            $sql = "DELETE FROM tblpaecotourism WHERE eco_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Ecotourism activity successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function fetchImageProducts(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageproducts($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_products; ?>" class="trows">
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/product_img/').(!empty($row->prod_img)?$row->prod_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><p>'.$row->prod_desc.'</p><br>'; ?>
                    <button type="button" value="<?php echo $row->id_products;?>" class="btn btnbtn btn-info btn-xs" onclick="editproduct(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageproduct" data-id="<?php echo $row->id_products ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->prod_desc; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/product_img/').(!empty($row->prod_img)?$row->prod_img:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo (!empty($row->prod_img)?$row->prod_img:"nophoto.jpg") ?></td>
                <td class="hidden"><?php echo '<img src="'.base_url('bmb_assets2/upload/product_img/').(!empty($row->prod_img)?$row->prod_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px" />' ?></td>
                <input type="hidden" id="cprod<?php echo $row->id_products;?>" value="<?php echo $row->id_products ?>" />
            </tr>
            <?php
        }
    }

    public function deleteproduct($id = null)
        {
            $sql1 = $this->db->where('id_products',$id)
                                            ->get('tblpaproducts')
                                            ->row();
            if ($sql1->prod_img == "nophoto.jpg" || empty($sql1->prod_img)) {

            }elseif (!empty($sql1->prod_img)) {
                unlink('bmb_assets2/upload/product_img/'.$sql1->prod_img);
            }
            $sql = "DELETE FROM tblpaproducts WHERE id_products = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchImageEnterprise(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageenterprise($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_enterprise; ?>" class="trows">
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/enterprise_img/').(!empty($row->enterprise_img)?$row->enterprise_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><p>'.$row->enterprise_desc.'</p><br>'; ?>
                    <button type="button" value="<?php echo $row->id_enterprise;?>" class="btn btnbtn btn-info btn-xs" onclick="editenterprise(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageenterprise" data-id="<?php echo $row->id_enterprise ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->enterprise_desc; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/enterprise_img/').(!empty($row->enterprise_img)?$row->enterprise_img:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo $row->enterprise_img ?></td>
                <td class="hide"><?php echo '<img src="'.base_url('bmb_assets2/upload/enterprise_img/').(!empty($row->enterprise_img)?$row->enterprise_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px">'; ?></td>
                <input type="hidden" id="ceprise<?php echo $row->id_enterprise;?>" value="<?php echo $row->id_enterprise ?>" />
            </tr>
            <?php
        }
    }

    public function deleteenterprise($id = null)
        {
            $sql1 = $this->db->where('id_enterprise',$id)
                                            ->get('tblpaenterprise')
                                            ->row();
            if ($sql1->enterprise_img == "nophoto.jpg" || empty($sql1->enterprise_img)) {

            }elseif (!empty($sql1->enterprise_img)) {
                unlink('bmb_assets2/upload/enterprise_img/'.$sql1->enterprise_img);
            }
            $sql = "DELETE FROM tblpaenterprise WHERE id_enterprise = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_enterprise(){

        $scraper = $this->input->post("edit-pic_enterprise");
        $scraperdelete = $this->input->post("edit-old_picture_enterprise");

        $gencode = $this->input->post("enterprise-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("enterprise-id");
            $details = array('enterprise_desc' => $this->input->post("edit-enterprise-desc"),
                             'enterprise_img' => (empty($this->input->post("edit-img_outputenterpriseimage"))?$this->input->post("edit-old_picture_enterprise"):$this->input->post("edit-img_outputenterpriseimage")));
            $this->pamain_model->update_enterprise($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/enterprise_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function agro_upload_save(){

        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['pic_agro']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/agroforestry_img';
            $config['file_name'] = $_FILES['pic_agro']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_agro')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_agro') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $this->form_validation->set_rules('agroforestry','Agro Forestry Title','required');
        $this->form_validation->set_rules('descAgro','Agro Forestry Description','required');

        $data['pamainAgro'] = (object)$postDataImage = [
            'id_agro'          => $this->input->post('id_agro',true),
            'generatedcode '  => $this->input->post('gencode',true),
            'title_agro'      =>  $this->input->post('agroforestry',true),
            'description_agro'     =>  $this->input->post('descAgro',true),
            'has_agro'     =>  $this->input->post('agroHas',true),
            'image_agro'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_agro'])){
                $query = $this->pamain_model->createImageAgro($postDataImage);
                if($query){
                $output['status'] = 'New Agro Forestry activities successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);

    }

    public function fetchAgro(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageAgro($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_agro; ?>" class="trows">
                <td><?php echo '<img src="../../../bmb_assets2/upload/agroforestry_img/'.$row->image_agro.'" style="max-height: 250px; max-width: 250px;"></img>'; ?></td>
                <td><?php echo '<b>'.$row->title_agro.'</b><p>'.$row->description_agro.'</p>'; ?></td>
                <td><?php echo $row->has_agro.' has.'; ?></td>
                <td class="hide"><?php echo $row->title_agro; ?></td>
                <td class="hide"><?php echo $row->description_agro; ?></td>
                <td class="hide"><?php echo $row->has_agro; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/agroforestry_img/'.$row->image_agro ?></td>
                <td class="hide"><?php echo $row->image_agro ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_agro;?>" class="btn btn-info btn-edit-attract" onclick="editAgro(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeimageAgro" data-id="<?php echo $row->id_agro ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function deleteAgro($id = null)
        {
            $sql1 = $this->db->where('id_agro',$id)
                                            ->get('tblpaagroforestry')
                                            ->row();
            unlink('bmb_assets2/upload/agroforestry_img/'.$sql1->image_agro);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpaagroforestry WHERE id_agro = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Agro Forestry activity successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function threatData()
    {
        if(isset($_FILES["pic_threat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/img_threat';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_threat'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/img_threat/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/img_threat/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function attraction_img_new()
    {
        if(isset($_FILES["pic_attract"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/attraction_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_attract'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function attraction_img_edit()
    {
        if(isset($_FILES["edit-pic_attraction"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/attraction_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pic_attraction'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coralreef_img_newEdit()
    {
        if(isset($_FILES["edit-img_coralmap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coralreef_map_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-img_coralmap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function seagrassess_img_newEdit()
    {
        if(isset($_FILES["edit-img_seagrassmap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/seagrass_map';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-img_seagrassmap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/seagrass_map/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/seagrass_map/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function Mangrove_img_newEdit()
    {
        if(isset($_FILES["edit-img_seagrassmap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mangrove_map';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-img_Mangrovemap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/mangrove_map/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/mangrove_map/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function bdfe_img_new()
    {
        if(isset($_FILES["bdfe_image"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('bdfe_image'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

            }
        }
    }

    public function bdfe_img_pic()
    {
        // sleep(3);
        // if($_FILES["bdfe_image"]["name"] != '')
        // {
        //  $output = '';
        //  $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
        //  $config["allowed_types"] = 'gif|jpg|png';
        //  $this->load->library('upload', $config);
        //  $this->upload->initialize($config);
        //  for($count = 0; $count<count($_FILES["bdfe_image"]["name"]); $count++)
        //  {
        //   $_FILES["file"]["name"] = $_FILES["bdfe_image"]["name"][$count];
        //   $_FILES["file"]["type"] = $_FILES["bdfe_image"]["type"][$count];
        //   $_FILES["file"]["tmp_name"] = $_FILES["bdfe_image"]["tmp_name"][$count];
        //   $_FILES["file"]["error"] = $_FILES["bdfe_image"]["error"][$count];
        //   $_FILES["file"]["size"] = $_FILES["bdfe_image"]["size"][$count];

        //   if($this->upload->do_upload('file'))
        //   {
        //    $uploadData = $this->upload->data();
        //     $config['image_library'] = 'gd2';
        //     $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];;
        //     $config['create_thumb'] = FALSE;
        //     $config['maintain_ratio'] = FALSE;
        //     $config['quality'] = '60%';
        //     $config['width'] = 1600;
        //     $config['height'] = 1200;
        //     $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];
        //     $this->load->library('image_lib', $config);
        //     $this->image_lib->initialize($config);
        //     $this->image_lib->resize();
        //    $filenames = $uploadData['file_name'];

        //    $data = $this->upload->data();
        //    $output .= '
        //    <div class="col-md-3">
        //     <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/bdfe_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
        //    </div>
        //    ';

        //   }
        //  }
        //  echo $output;
        // }

        if($_FILES["bdfe_image"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["bdfe_image"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["bdfe_image"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["bdfe_image"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["bdfe_image"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["bdfe_image"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["bdfe_image"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function bdfe_img_Edit()
    {
        if(isset($_FILES["edit-bdfe_image"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bdfe_image'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydro_img_map()
    {
        sleep(3);
        if($_FILES["pic_hydromap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydro_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_hydromap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_hydromap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_hydromap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_hydromap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_hydromap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_hydromap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
       }
          }
         echo $output;

        }
    }

    public function hydro_img_mapedit()
    {
        if(isset($_FILES["edit-pic_hydromap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_map_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pic_hydromap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/hydro_map_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/hydro_map_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydrowaterqualitymonreport()
    {
        if(isset($_FILES["waterquality_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_water_monitoring_report';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('waterquality_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydrowaterqualitymonreportEdit()
    {
        if(isset($_FILES["edit-waterquality_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_water_monitoring_report';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-waterquality_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherinstrument_img()
    {
        if(isset($_FILES["pic_otother"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_map_others';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_otother'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/tenure_map_others/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/tenure_map_others/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function Editotherinstrument_img()
    {
        if(isset($_FILES["edit-pic_otother"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_map_others';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pic_otother'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/tenure_map_others/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/tenure_map_others/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function upload_Humaninland_natural_pics()
    {
        sleep(3);
        // $output = array();

        if(isset($_FILES["pic_hinlandimg"]["name"]))
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/iwhumanmade_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_hinlandimg"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_hinlandimg"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_hinlandimg"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_hinlandimg"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_hinlandimg"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_hinlandimg"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/iwhumanmade_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/iwhumanmade_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= $data['file_name'];
                echo json_encode($output);

          }
      }
    }
    }

    public function upload_inland_natural_pics()
    {
        sleep(3);
        // $output = array();

        if(isset($_FILES["pic_inlandimg"]["name"]))
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/iwimg';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_inlandimg"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_inlandimg"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_inlandimg"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_inlandimg"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_inlandimg"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_inlandimg"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/iwimg/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/iwimg/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= $data['file_name'];
                echo json_encode($output);

          }
      }
  }

}

 public function upload_hydro_monitoringsite_pics()
    {
        sleep(3);
        // $output = array();

        if(isset($_FILES["pic_monitoringsiteimg"]["name"]))
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydro_monitoring_station_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_monitoringsiteimg"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_monitoringsiteimg"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_monitoringsiteimg"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_monitoringsiteimg"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_monitoringsiteimg"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_monitoringsiteimg"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydro_monitoring_station_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydro_monitoring_station_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= $data['file_name'];
           echo json_encode($output);

          }
      }
  }
}

public function upload_hydro_monitoringsite_picsEdit()
    {
        sleep(3);
        // $output = array();

        if(isset($_FILES["edit-pic_monitoringsiteimg"]["name"]))
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydro_monitoring_station_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_monitoringsiteimg"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_monitoringsiteimg"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_monitoringsiteimg"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_monitoringsiteimg"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_monitoringsiteimg"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_monitoringsiteimg"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydro_monitoring_station_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydro_monitoring_station_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= $data['file_name'];
           echo json_encode($output);

          }
      }
  }
}

    public function inland_img()
    {
        if(isset($_FILES["pic_inlandimg"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwimg';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_inlandimg'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/iwimg/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/iwimg/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hinland_img()
    {
        if(isset($_FILES["pic_hinlandimg"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwhumanmade_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_hinlandimg'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/iwhumanmade_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/iwhumanmade_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function editinland_img()
    {
        if(isset($_FILES["edit-pic_inlandimg"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwimg';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pic_inlandimg'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/iwimg/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/iwimg/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydroSinglemap_img()
    {
        if($_FILES["edit-pic_hydromap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydro_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_hydromap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_hydromap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_hydromap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_hydromap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_hydromap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_hydromap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function watershedmap_img()
    {
        if($_FILES["pic_watershedimg"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/watershed';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_watershedimg"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_watershedimg"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_watershedimg"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_watershedimg"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_watershedimg"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_watershedimg"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/watershed/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/watershed/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoattractionimgupload()
    {
        if($_FILES["pic_attract"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_attract"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_attract"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_attract"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_attract"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_attract"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_attract"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/attraction_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/attraction_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoattractionimguploadEdit()
    {
        if($_FILES["edit-pic_attraction"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_attraction"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_attraction"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_attraction"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_attraction"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_attraction"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_attraction"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/attraction_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/attraction_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function mapuploadothers()
    {
        if($_FILES["picture2"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/map_image';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["picture2"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["picture2"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["picture2"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["picture2"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["picture2"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["picture2"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/map_image/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/map_image/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function mapuploadgallery()
    {
        if($_FILES["otherimagesgallery"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/gallaries';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["otherimagesgallery"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["otherimagesgallery"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["otherimagesgallery"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["otherimagesgallery"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["otherimagesgallery"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["otherimagesgallery"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/gallaries/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/gallaries/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function threatindividualimgupload()
    {
        if($_FILES["pic_threat"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/img_threat';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_threat"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_threat"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_threat"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_threat"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_threat"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_threat"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/img_threat/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/img_threat/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecofacilityimgupload()
    {
        if($_FILES["pic_facilities"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/facilities_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_facilities"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_facilities"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_facilities"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_facilities"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_facilities"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_facilities"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/facilities_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/facilities_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecofacilityimguploadEdit()
    {
        if($_FILES["edit-pic_facility"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/facilities_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_facility"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_facility"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_facility"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_facility"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_facility"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_facility"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/facilities_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/facilities_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoproductimgupload()
    {
        if($_FILES["pic_products"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/product_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_products"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_products"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_products"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_products"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_products"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_products"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/product_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/product_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoproductimguploadEdit()
    {
        if($_FILES["edit-pic_product"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/product_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_product"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_product"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_product"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_product"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_product"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_product"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/product_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/product_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoenterpriseimgupload()
    {
        if($_FILES["pic_enterprises"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/enterprise_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_enterprises"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_enterprises"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_enterprises"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_enterprises"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_enterprises"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_enterprises"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/enterprise_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/enterprise_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function ecoenterpriseimguploadEdit()
    {
        if($_FILES["edit-pic_enterprise"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/enterprise_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_enterprise"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_enterprise"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_enterprise"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_enterprise"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_enterprise"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_enterprise"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/enterprise_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/enterprise_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function editwatershedmap_img()
    {
        if(isset($_FILES["edit-pic_watershedimg"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/watershed';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pic_watershedimg'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/watershed/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/watershed/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenureothersimgupload()
    {
        if($_FILES["pic_otother"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tenure_map_others';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_otother"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_otother"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_otother"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_otother"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_otother"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_otother"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/tenure_map_others/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/tenure_map_others/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function tenureothersimguploadEdit()
    {
        if($_FILES["edit-pic_otother"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tenure_map_others';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_otother"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_otother"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_otother"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_otother"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_otother"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_otother"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/tenure_map_others/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/tenure_map_others/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function zipSHPothertenures()
    {
        if($_FILES["zip_shpfile_otherinstrument"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tenure_map_shp';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["zip_shpfile_otherinstrument"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["zip_shpfile_otherinstrument"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["zip_shpfile_otherinstrument"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["zip_shpfile_otherinstrument"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["zip_shpfile_otherinstrument"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["zip_shpfile_otherinstrument"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function zipSHPothertenuresEdit()
    {
        if($_FILES["edit-zip_shpfile_otherinstrument"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tenure_map_shp';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-zip_shpfile_otherinstrument"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-zip_shpfile_otherinstrument"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-zip_shpfile_otherinstrument"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-zip_shpfile_otherinstrument"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-zip_shpfile_otherinstrument"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-zip_shpfile_otherinstrument"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function zipSHPdemo()
    {

        if($_FILES["zip_shpfile_demo"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/demographic_shp';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["zip_shpfile_demo"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["zip_shpfile_demo"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["zip_shpfile_demo"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["zip_shpfile_demo"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["zip_shpfile_demo"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["zip_shpfile_demo"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function mapimagesbdfe()
    {
        if($_FILES["files_bdfe_image"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_bdfe_image"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_bdfe_image"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_bdfe_image"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_bdfe_image"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_bdfe_image"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_bdfe_image"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function mapimagesbdfeEdit()
    {
        if($_FILES["edit-files_bdfe_image"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-files_bdfe_image"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-files_bdfe_image"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-files_bdfe_image"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-files_bdfe_image"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-files_bdfe_image"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-files_bdfe_image"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/bdfe_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }


    public function uploadmultimediaFile()
    {
        if(isset($_FILES["cepa_multimedia"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_multimedia';
            $config['allowed_types'] = 'mpeg|mpg|mp4|mpe|qt|mov|avi';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('cepa_multimedia'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function ProgProjComplReports()
    {
        if(isset($_FILES["progprojcompletionrepups"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_completion_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('progprojcompletionrepups'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function ProgProjComplReportsEdited()
    {
        if(isset($_FILES["edit-progprojcompletionrepups"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_completion_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-progprojcompletionrepups'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function ProjComplReports()
    {
        if(isset($_FILES["projcompletionrepups"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_completion_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('projcompletionrepups'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function ProjComplReportsEdit()
    {
        if(isset($_FILES["edit-projcompletionrepups"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_completion_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-projcompletionrepups'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function PAMBfileappintment()
    {
        if(isset($_FILES["pambfile_appt"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_file_appointment';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pambfile_appt'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function PAMBfileappintmentEdit()
    {
        if(isset($_FILES["edit-pambfile_appt"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_file_appointment';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pambfile_appt'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }
    public function projreportFile_insert()
    {
        if(isset($_FILES["projreport_file_demo"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('projreport_file_demo'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'proj_code '    => $this->input->post('projgencode',true),
                    'generatedcode '    => $this->input->post('gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertproject_report($postDataImage);
            }
        }
    }

    public function researchFileUploading()
    {
        if(isset($_FILES["research_add_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('research_add_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('researchGenCode',true),
                    'generatedcode '    => $this->input->post('gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function pambresominutesFileUploading()
    {
        if(isset($_FILES["minutesfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_reso_minutes_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('minutesfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pambresominutesFileTWGUploading()
    {
        if(isset($_FILES["minutesfiletwg"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_reso_minutes_file_twg';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('minutesfiletwg'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pambresominutesFileUploadingEdit()
    {
        if(isset($_FILES["edit-minutesfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_reso_minutes_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-minutesfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function transmittalFileUploading()
    {
        if(isset($_FILES["transmittalfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_transmittal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('transmittalfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'pambreso_code '    => $this->input->post('mompambreso-gencode2',true),
                    'generatedcode '    => $this->input->post('mompambreso-gencode',true),
                    'transmitcode '    => $this->input->post('mompambreso-gencode3',true),
                    'month_transmital '    => $this->input->post('date_submitted_bmb_month',true),
                    'year_transmital '    => $this->input->post('date_submitted_bmb_year',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->inserttransmitalFile($postDataImage);
            }
        }
    }

    public function transmittalFileUploadingEdit()
    {
        if(isset($_FILES["edit-transmittalfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamb_transmittal_file';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-transmittalfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'pambreso_code '    => $this->input->post('resofile-pambresoCode',true),
                    'generatedcode '    => $this->input->post('resofile-gencode',true),
                    'transmitcode '    => $this->input->post('resofile-transmitcode',true),
                    'month_transmital '    => $this->input->post('edit-date_submitted_bmb_month',true),
                    'year_transmital '    => $this->input->post('edit-date_submitted_bmb_year',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->inserttransmitalFile($postDataImage);
            }
        }
    }

    public function researchFileUploadingEdit()
    {
        if(isset($_FILES["edit-research_add_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-research_add_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('research2-researchGenCode',true),
                    'generatedcode '    => $this->input->post('research2-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function ModalresearchFileUploading()
    {
        if(isset($_FILES["modal_research_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('modal_research_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('search-searchcode',true),
                    'generatedcode '    => $this->input->post('search-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function ModalresearchFileUploadingPAMBsEdits1()
    {
        if(isset($_FILES["edit-research_reso_pamb"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-research_reso_pamb'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


    public function ModalresearchFileUploadingPAMBs()
    {
        if(isset($_FILES["modal_research_reso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('modal_research_reso'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
        // if(isset($_FILES["modal_research_reso"]["name"]))
        //    {
        //     $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
        //     $config['allowed_types'] = 'pdf';
        //     $this->load->library('upload', $config);
        //     $this->upload->initialize($config);
        //     if(!$this->upload->do_upload('modal_research_reso'))
        //     {
        //          echo $this->upload->display_errors();
        //     }
        //     else
        //     {
        //          $data = $this->upload->data();
        //          $this->load->library('image_lib', $config);
        //          $this->image_lib->initialize($config);
        //             $filenames = $data['file_name'];
        //             $output['status'] = $filenames;
        //             echo json_encode($output);

        //         $data['mainproj'] = (object)$postDataImage = [
        //             'research_code '    => $this->input->post('search-searchcode',true),
        //             'generatedcode '    => $this->input->post('search-gencode',true),
        //             'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        //             'uploaded_on'       =>  date("Y-m-d H:i:s")
        //         ];

        //         $this->pamain_model->insertresearchReportFile($postDataImage);
        //     }
        // }
    }

    public function ModalresearchFileUploadingPAMBsEdits()
    {
        if(isset($_FILES["edit-modal_research_reso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-modal_research_reso'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
        // if(isset($_FILES["edit-modal_research_reso"]["name"]))
        //    {
        //     $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
        //     $config['allowed_types'] = 'pdf';
        //     $this->load->library('upload', $config);
        //     $this->upload->initialize($config);
        //     if(!$this->upload->do_upload('edit-modal_research_reso'))
        //     {
        //          echo $this->upload->display_errors();
        //     }
        //     else
        //     {
        //          $data = $this->upload->data();
        //          $this->load->library('image_lib', $config);
        //          $this->image_lib->initialize($config);
        //             $filenames = $data['file_name'];
        //             $output['status'] = $filenames;
        //             echo json_encode($output);

        //         $data['mainproj'] = (object)$postDataImage = [
        //             'research_code '    => $this->input->post('search-searchcode',true),
        //             'generatedcode '    => $this->input->post('search-gencode',true),
        //             'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        //             'uploaded_on'       =>  date("Y-m-d H:i:s")
        //         ];

        //         $this->pamain_model->insertresearchReportFile($postDataImage);
        //     }
        // }
    }

    public function ModalresearchFileUploadingPAMB()
    {
        if(isset($_FILES["edit-modal_research_reso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-modal_research_reso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('search-searchcode',true),
                    'generatedcode '    => $this->input->post('search-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function ModalresearchFileUploadingPAMBEdit()
    {
        if(isset($_FILES["edit-modal_research_reso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_pamb_reso_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-modal_research_reso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('search-searchcode',true),
                    'generatedcode '    => $this->input->post('search-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function ModalresearchPAMBResoFileUploading()
    {
        if(isset($_FILES["research_pambReso_files"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('research_pambReso_files'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('researchGenCode',true),
                    'generatedcode '    => $this->input->post('gencode',true),
                    'pambreso_title '   => $this->input->post('research_titlereso',true),
                    'pambreso_no '      => $this->input->post('research_pambreso',true),
                    'file_nameReso'          => (!empty($filenames)?$filenames:$this->input->post('researchreso_span')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];
                $query = $this->pamain_model->insertresearchPAMBResoNew($postDataImage);

                $data['x'] = (object)$postDataImage2 = [
                    'generatedcode ' =>  $this->input->post('gencode',true),
                    'id_researchPamBFile'   => $query,
                    'research_code'   => $this->input->post('researchGenCode',true),
                    'resolution_no'    =>  $this->input->post('research_pambreso',true),
                    'resolution_name'      =>  $this->input->post('research_titlereso',true),
                    'file_reso'       => (!empty($filenames)?$filenames:$this->input->post('researchreso_span')),
                ];
                $this->pamain_model->insertresofile($postDataImage2);
            echo json_encode($output);
            }
        }
    }

    public function ModalresearchFileUploadingEdit()
    {
        if(isset($_FILES["edit-modal_research_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_file_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-modal_research_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('searche-searchcode',true),
                    'generatedcode '    => $this->input->post('searche-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('edit-uploadmodal_research_file')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertresearchReportFile($postDataImage);
            }
        }
    }

    public function ModalresearchPAMBReso()
    {
        if(isset($_FILES["add_modal-pambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('add_modal-pambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('search-searchcode',true),
                    'generatedcode '    => $this->input->post('search-gencode',true),
                    'pambreso_title '   => $this->input->post('add-search_titlereso',true),
                    'pambreso_no '      => $this->input->post('add-search_pambresono',true),
                    'file_nameReso'          => (!empty($filenames)?$filenames:$this->input->post('add_modal-pambreso_span')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];
                $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);

                $data['x'] = (object)$postDataImage2 = [
                    'generatedcode ' =>  $this->input->post('search-gencode',true),
                    'id_researchPamBFile'   => $query,
                    'research_code'   => $this->input->post('search-searchcode',true),
                    'resolution_no'    =>  $this->input->post('add-search_pambresono',true),
                    'resolution_name'      =>  $this->input->post('add-search_titlereso',true),
                    'file_reso'       => (!empty($filenames)?$filenames:$this->input->post('add_modal-pambreso_span')),
                ];
                $this->pamain_model->insertresofile($postDataImage2);
            echo json_encode($output);

            }
        }
    }

    public function ModalresearchPAMBResoEdit()
    {
        if(isset($_FILES["edit_modal-pambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit_modal-pambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('searche-searchcode',true),
                    'generatedcode '    => $this->input->post('searche-gencode',true),
                    'pambreso_title '   => $this->input->post('edit-search_titlereso',true),
                    'pambreso_no '      => $this->input->post('edit-search_pambreso',true),
                    'file_nameReso'          => (!empty($filenames)?$filenames:$this->input->post('edit_modal-pambreso_span')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];
                $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);

                $data['x'] = (object)$postDataImage2 = [
                    'generatedcode ' =>  $this->input->post('searche-gencode',true),
                    'id_researchPamBFile'   => $query,
                    'research_code'   => $this->input->post('searche-searchcode',true),
                    'resolution_no'    =>  $this->input->post('edit-search_pambreso',true),
                    'resolution_name'      =>  $this->input->post('edit-search_titlereso',true),
                    'file_reso'       => (!empty($filenames)?$filenames:$this->input->post('edit_modal-pambreso_span')),
                ];
                $this->pamain_model->insertresofile($postDataImage2);
            echo json_encode($output);

            }
        }
    }

    public function AddresearchPAMBResoSolo()
    {
        if(isset($_FILES["research_pambReso_files"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('research_pambReso_files'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('researchGenCode',true),
                    'generatedcode '    => $this->input->post('gencode',true),
                    'pambreso_title '   => $this->input->post('research_titlereso',true),
                    'pambreso_no '      => $this->input->post('research_pambreso',true),
                    'file_nameReso'          => (!empty($filenames)?$filenames:$this->input->post('researchreso_span')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];
                $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);

                $data['x'] = (object)$postDataImage2 = [
                    'generatedcode ' =>  $this->input->post('gencode',true),
                    'id_researchPamBFile'   => $query,
                    'research_code'   => $this->input->post('researchGenCode',true),
                    'resolution_no'    =>  $this->input->post('research_pambreso',true),
                    'resolution_name'      =>  $this->input->post('research_titlereso',true),
                    'file_reso'       => (!empty($filenames)?$filenames:$this->input->post('researchreso_span')),
                ];
                $this->pamain_model->insertresofile($postDataImage2);
            echo json_encode($output);

            }
        }
    }

    public function EditresearchPAMBResoSolo()
    {
        if(isset($_FILES["edit-research_pambReso_files"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-research_pambReso_files'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;

                $data['mainproj'] = (object)$postDataImage = [
                    'research_code '    => $this->input->post('research2-researchGenCode',true),
                    'generatedcode '    => $this->input->post('research2-gencode',true),
                    'pambreso_title '   => $this->input->post('edit-editsearch_titlereso',true),
                    'pambreso_no '      => $this->input->post('edit-editsearch_pambreso',true),
                    'file_nameReso'          => (!empty($filenames)?$filenames:$this->input->post('edit-researchreso_span')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];
                $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);

                $data['x'] = (object)$postDataImage2 = [
                    'generatedcode ' =>  $this->input->post('research2-gencode',true),
                    'id_researchPamBFile'   => $query,
                    'research_code'   => $this->input->post('research2-researchGenCode',true),
                    'resolution_no'    =>  $this->input->post('edit-editsearch_pambreso',true),
                    'resolution_name'      =>  $this->input->post('edit-editsearch_titlereso',true),
                    'file_reso'       => (!empty($filenames)?$filenames:$this->input->post('edit-researchreso_span')),
                ];
                $this->pamain_model->insertresofile($postDataImage2);
            echo json_encode($output);

            }
        }
    }

    public function projreportFile_edit()
    {
        if(isset($_FILES["edit-projreport_file_demo"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-projreport_file_demo'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'proj_code '    => $this->input->post('proj-projgencode',true),
                    'generatedcode '    => $this->input->post('proj-gencode1',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertproject_report($postDataImage);
            }
        }
    }

    public function ProgsprojreportFile_edit()
    {
        if(isset($_FILES["edit-prog_projReport_file_Edit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-prog_projReport_file_Edit'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'proj_code '    => $this->input->post('projects-proj_codesE',true),
                    'generatedcode '    => $this->input->post('proj-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertproject_report($postDataImage);
            }
        }
    }

    public function prog_projreportFile_add()
    {
        if(isset($_FILES["edit-prog_projreport_file"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_report';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-prog_projreport_file'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'proj_code '    => $this->input->post('projects-proj_codes',true),
                    'generatedcode '    => $this->input->post('projects-gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'uploaded_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertproject_report($postDataImage);
            }
        }
    }

    public function zipSHPHydro()
    {
        if(isset($_FILES["zip_shpfile_hydro"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_shp_file';
            $config['allowed_types'] = 'zip|rar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_hydro'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


    public function zipSHPHydroEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_hydro"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_shp_file';
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_hydro'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPothertenure()
    {
        if($_FILES["zip_shpfile_otherinstrument"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tenure_map_shp';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["zip_shpfile_otherinstrument"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["zip_shpfile_otherinstrument"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["zip_shpfile_otherinstrument"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["zip_shpfile_otherinstrument"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["zip_shpfile_otherinstrument"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["zip_shpfile_otherinstrument"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function zipSHPothertenureEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_otherinstrument"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_map_shp';
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_otherinstrument'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPothertenurefile()
    {
        if(isset($_FILES["zip_shpfile_otherinstrumentfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_map_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_otherinstrumentfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPothertenurefileedit()
    {
        if(isset($_FILES["edit-zip_shpfile_otherinstrumentfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_map_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_otherinstrumentfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPinland()
    {
        if(isset($_FILES["zip_shpfile_inland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwshp';
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_inland'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPcaves()
    {
        if(isset($_FILES["zip_shpfile_cave"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_map_shp';
            $config['allowed_types'] = 'zip|rar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_cave'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPmgtmntfile()
    {
        if(isset($_FILES["zip_shpfile_mgmntplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/managementplan_shpfile';
            $config['allowed_types'] = 'zip|rar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_mgmntplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPmgtmntfileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_mgmntplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/managementplan_shpfile';
            $config['allowed_types'] = 'zip|rar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_mgmntplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPcavesEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_cave"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_map_shp';
            $config['allowed_types'] = 'zip|rar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_cave'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPhumanmadeinland()
    {
        if(isset($_FILES["zip_shpfile_inland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwhumanmade_shpfile';
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_inland'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function zipSHPinlandedit()
    {
        if(isset($_FILES["edit-zip_shpfile_inland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwshp';
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_inland'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function agroData()
    {

            $config ['upload_path'] = 'bmb_assets2/upload/agroforestry_img';
            $config['file_name'] = $_FILES['pic_agro']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_agro')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function topoData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){
            date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');

            $config ['upload_path'] = 'bmb_assets2/upload/topology_img';
            $config['file_name'] = $_FILES['img_topo']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_topo')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode'),
            'topo_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'    => $now,
            ];

            $this->pamain_model->uploadsaveTopo($postDataImage);

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function reefData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/reef_photo/';
            $config['file_name'] = $_FILES['img_reef']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_reef')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function reefDataEdit()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/reef_photo/';
            $config['file_name'] = $_FILES['edit_img_reef']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit_img_reef')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function reefshpData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/shapefile/';
            $config['file_name'] = $_FILES['shpfilecoral']['name'];
            $config['allowed_types'] = 'kml|kmz';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('shpfilecoral')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }

        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function editreefshpData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/shapefile/';
            $config['file_name'] = $_FILES['edit_shpfilecoral']['name'];
            $config['allowed_types'] = 'kml|kmz';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit_shpfilecoral')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }

        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }


    public function seagrassshpData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/seagrass_shapefile/';
            $config['file_name'] = $_FILES['shpfileseagrass']['name'];
            $config['allowed_types'] = 'kml|kmz';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('shpfileseagrass')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }

        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function seagrassPhoto()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/seagrass_photo/';
            $config['file_name'] = $_FILES['img_seagrassSpecies']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_seagrassSpecies')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function seagrassCompoPhoto()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/seagrasscompo_photo/';
            $config['file_name'] = $_FILES['img_seagrassSpeciesCompo']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_seagrassSpeciesCompo')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function seagrassdugongPhoto()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/seagrassdugong_photo/';
            $config['file_name'] = $_FILES['img_seagrassSpeciesdugong']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_seagrassSpeciesdugong')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function mngtData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/managementzone_img';
            $config['file_name'] = $_FILES['pic_mgnts']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_mgnts')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));
            }
            if ($this->input->post('id_management') == null) {
                $data['pamainimage'] = (object)$postDataImage = [
                    'managementzone_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture_strict')),
                    'generatedcode_mgnt '  => $this->input->post('gencode',true),
                    'id_management' => $this->input->post('id_management',true),
                ];
            }else{
                $data['pamainimage'] = (object)$postDataImage = [
                    'managementzone_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture_strict')),
                    'generatedcode_mgnt '  => $this->input->post('gencode',true),
                    'id_management' => $this->input->post('id_management',true),
                ];
            }
            if(!empty($postDataImage['id_management'])){
                $sql1 = $this->db->where('id_management',$postDataImage['id_management'])
                                            ->get('tblpamanagementzone')
                                            ->row();
                unlink('bmb_assets2/upload/managementzone_img/'.$sql1->managementzone_image);
                $query = $this->pamain_model->updatemgntimage($postDataImage);
                $output['status'] = 'Update successfully uploaded';

            } else {
                $query = $this->pamain_model->createmgntimage($postDataImage);
                // $data = $this->pamain_model->getAllPAdata();
                // foreach ($data as $key) {
                //     $output['status'] = $key->id_management;
                // }
                $output['status'] = 'Successfully insert map';

            }


        // }
        // $output['status'] = $filenames;
        echo json_encode($output);
    }


    public function attractionData()
    {
        if(isset($_FILES["pic_attract"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/attraction_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_attract'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $config['image_library'] = 'gd2';
                $config['source_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];;
                $config['create_thumb'] = FALSE;
                $config['maintain_ratio'] = FALSE;
                $config['quality'] = '60%';
                $config['width'] = 800;
                $config['height'] = 600;
                $config['new_image'] = 'bmb_assets2/upload/attraction_img/'.$data["file_name"];
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuredocsData()
    {
        if(isset($_FILES["approvedocs"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_pacbrma';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('approvedocs'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuredocsDataEdit()
    {
        if(isset($_FILES["edit-approvedocs"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_pacbrma';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-approvedocs'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenurecrmpdocs()
    {
        if(isset($_FILES["crmpfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/crmp_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('crmpfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenurecrmpdocsEdit()
    {
        if(isset($_FILES["edit-crmpfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/crmp_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-crmpfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpermitupload()
    {
        if(isset($_FILES["edit-searchpermit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_research_permit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-searchpermit'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpermiteeupload()
    {
        if(isset($_FILES["researchpermit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_research_permit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('researchpermit'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpermiteeuploadEdit()
    {
        if(isset($_FILES["edit-editsearchpermite"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_research_permit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-editsearchpermite'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpambclearanceupload()
    {
        if(isset($_FILES["researpambclearance"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_pamb_clearance';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('researpambclearance'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpambclearanceuploadEdit()
    {
        if(isset($_FILES["edit-researpambclearance"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/research_pamb_clearance';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-researpambclearance'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpambresouploadfile()
    {
        if(isset($_FILES["researchreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('researchreso'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpambresoupload()
    {
        if(isset($_FILES["edit-pambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pambreso'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpermituploade()
    {
        if(isset($_FILES["edit-searchpermite"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_research_permit';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-searchpermite'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function searchpambresouploade()
    {
        if(isset($_FILES["edit-pambresoe"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pambresoe'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuredocsmemberDataEdit()
    {
        if(isset($_FILES["edit-pcbrmamember"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_pcbrma_member';
            $config['allowed_types'] = 'xlsx|xls|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pcbrmamember'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapafilescanned()
    {
        if(isset($_FILES["sapafile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_sapa';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sapafile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function sapamgmtplanfilescanned()
    {
        if(isset($_FILES["sapamgmtplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_mgmtplan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sapamgmtplanfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapamgmtplanfilescannedEdit()
    {
        if(isset($_FILES["edit-sapamgmtplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_mgmtplan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sapamgmtplanfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapamonitoringreportsupload()
    {
        if(isset($_FILES["sapamonitoringupload"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_monitoringreport';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sapamonitoringupload'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapacdmpfilescanned()
    {
        if(isset($_FILES["sapacdmpplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_cdmp';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sapacdmpplanfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapacdmpfilescannedEdit()
    {
        if(isset($_FILES["edit-sapacdmpplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_cdmp';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sapacdmpplanfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapapambresoscanned()
        {
            if(isset($_FILES["sapapambresofile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_pambreso';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('sapapambresofile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function sapapambresoscannedEdit()
        {
            if(isset($_FILES["edit-sapapambresofile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_pambreso';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('edit-sapapambresofile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function sapapambclearancescanned()
        {
            if(isset($_FILES["sapapambclearancefile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_pamb_clearance';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('sapapambclearancefile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function sapapambclearancescannedEdit()
        {
            if(isset($_FILES["edit-sapapambclearancefile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_pamb_clearance';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('edit-sapapambclearancefile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

        public function sapapambmonitorreportsEdit()
        {
            if(isset($_FILES["edit-sapamonitoringupload"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_monitoringreport';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('edit-sapamonitoringupload'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function moapambclearancescanned()
        {
            if(isset($_FILES["moapambclearancefile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pamb_clearance';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('moapambclearancefile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function moapambclearancescannedEdit()
        {
            if(isset($_FILES["edit-moapambclearancefile"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pamb_clearance';
                $config['allowed_types'] = 'csv|pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('edit-moapambclearancefile'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }
        }

    public function moafilescanned()
    {
        if(isset($_FILES["moafile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_moa';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('moafile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuremoaprojplan()
    {
        if(isset($_FILES["moaprojplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_proj';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('moaprojplan'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sapafilescannededit()
    {
        if(isset($_FILES["edit-sapafile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_sapa';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sapafile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moafilescannededit()
    {
        if(isset($_FILES["edit-moafile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_moa';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-moafile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }
     public function pcbrmamemberfilecsv()
    {
        if(isset($_FILES["pcbrmamember"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_docs_pcbrma_member';
            $config['allowed_types'] = 'xlsx|xls|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pcbrmamember'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function othersprojectclearancefile()
    {
        if(isset($_FILES["projectclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_pamb_clearance';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('projectclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function othersprojectclearancefileEdit()
    {
        if(isset($_FILES["edit-projectclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/project_pamb_clearance';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-projectclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalCoralShpFile()
    {
        if(isset($_FILES["shp_corals"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_coral_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_corals'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalSeagrassShpFile()
    {
        if(isset($_FILES["shp_seagrass"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_seagrass_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_seagrass'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalMangroveShpFile()
    {
        if(isset($_FILES["shp_mangrove"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_mangrove_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_mangrove'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function LandusesShpFile()
    {
        if(isset($_FILES["shp_landuse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/existinglanduse_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_landuse'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function TopologyShpFile()
    {
        if(isset($_FILES["shp_topo"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/topology_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_topo'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pacbrmaShpFile()
    {
        if(isset($_FILES["shp_pacbrma"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pacbrma_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_pacbrma'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pacbrmaShpFileEdit()
    {
        if(isset($_FILES["edit-shp_pacbrma"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pacbrma_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_pacbrma'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function threatShpFile()
    {
        if(isset($_FILES["shp_threat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/img_threat_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_threat'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function threatShpFileEdit()
    {
        if(isset($_FILES["edit-shp_threat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/img_threat_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_threat'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function SapaShpFile()
    {
        if(isset($_FILES["shp_sapa"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_sapa'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function SapaShpFileEdit()
    {
        if(isset($_FILES["edit-shp_sapa"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_sapa'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moaShpFile()
    {
        if(isset($_FILES["shp_moa"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_moa'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moaShpFileEdit()
    {
        if(isset($_FILES["edit-shp_moa"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_moa'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtecoShpFile()
    {
        if(isset($_FILES["shp_mgmteco"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_mgmteco'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtecoShpFileEdit()
    {
        if(isset($_FILES["edit-shp_mgmteco"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_mgmteco'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtotherplanShpFile()
    {
        if(isset($_FILES["shp_mgmtotherplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_plan_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_mgmtotherplan'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtotherplanShpFileEdit()
    {
        if(isset($_FILES["edit-shp_mgmtotherplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_management_plan_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_mgmtotherplan'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtcaveShpFile()
    {
        if(isset($_FILES["shp_mgmtcave"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_mgmtcave'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtcaveShpFileEdit()
    {
        if(isset($_FILES["edit-shp_mgmtcave"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cave_management_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_mgmtcave'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtwetlandShpFile()
    {
        if(isset($_FILES["shp_mgmtwetland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_mgmtwetland'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgmtwetlandShpFileEdit()
    {
        if(isset($_FILES["edit-shp_mgmtwetland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_mgmtwetland'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function IWShpFile()
    {
        if(isset($_FILES["zip_shpfile_inland"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/iwshp';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_inland'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sealevelShpFile()
    {
        if(isset($_FILES["zip_shpfile_sealevel"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/sealevel_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_sealevel'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sealevelShpFileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_sealevel"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/sealevel_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_sealevel'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


    public function stormShpFile()
    {
        if(isset($_FILES["zip_shpfile_storm"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/stormsurge_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_storm'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function stormShpFileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_storm"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/stormsurge_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_storm'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function faultShpFile()
    {
        if(isset($_FILES["zip_shpfile_fault"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/stormsurge_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_fault'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function faultShpFileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_fault"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/stormsurge_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_fault'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function othergeohazardShpFile()
    {
        if(isset($_FILES["zip_shpfile_othergeohazard"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_geohazard_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_othergeohazard'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function othergeohazardShpFileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_othergeohazard"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_geohazard_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_othergeohazard'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


     public function WatershedShpFile()
    {
        if(isset($_FILES["shp_watersheds"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/watershed_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_watersheds'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

     public function bdferesourcesShpFile()
    {
        if(isset($_FILES["zip_shpfile_bdferesource"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_resource_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('zip_shpfile_bdferesource'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

     public function bdferesourcesShpFileEdit()
    {
        if(isset($_FILES["edit-zip_shpfile_bdferesource"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_resource_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-zip_shpfile_bdferesource'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function urbanecoShpFile()
    {
        if(isset($_FILES["shp_urbaneco"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/urbaneco_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_urbaneco'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function urbanecoShpFileEdit()
    {
        if(isset($_FILES["edit-shp_urbaneco"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/urbaneco_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_urbaneco'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

     public function WatershedShpFileEdit()
    {
        if(isset($_FILES["edit-shp_watersheds"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/watershed_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_watersheds'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function LandusesShpFileEdit()
    {
        if(isset($_FILES["edit-shp_landuse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/existinglanduse_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_landuse'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalCoralShpFileEdit()
    {
        if(isset($_FILES["edit-shp_corals"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_coral_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_corals'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalSeagrassShpFileEdit()
    {
        if(isset($_FILES["edit-shp_seagrass"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_seagrass_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_seagrass'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function coastalMangroveShpFileEdit()
    {
        if(isset($_FILES["edit-shp_mangrove"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/coastal_mangrove_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_mangrove'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function researchespambclearancefile()
    {
        if(isset($_FILES["research_pambReso_files"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('research_pambReso_files'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function researchespambclearancefileEdit()
    {
        if(isset($_FILES["edit-research_pambReso_files"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-research_pambReso_files'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepasouvernirimageupload()
    {
        if(isset($_FILES["souvenir_img"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('souvenir_img'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function apasuSOfiles()
    {
        if(isset($_FILES["apasuspecialorder"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamo_apasu_so_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('apasuspecialorder'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function apasuSOfilesEdit()
    {
        if(isset($_FILES["edit-apasuspecialorder"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamo_apasu_so_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-apasuspecialorder'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function insertPAreferenceResearch()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'research_code' => $this->input->post('researchGenCode',true),
            'link' => $this->input->post('research_links',true),
            'sponsoring_body' => $this->input->post('research_sponsoring_body',true),
            'author' => $this->input->post('research_author',true),
            'ref_date_month' => $this->input->post('research_ref_date_month',true),
            'ref_date_year' => $this->input->post('research_ref_date_year',true),
            'title' => $this->input->post('research_title',true),
            'place' => $this->input->post('research_place',true),
            'ref_desc' => $this->input->post('research_reference_desc',true),
            'ref_usage' => $this->input->post('research_ref_usage',true),
            'date_created' => $now,
        ];
                $query = $this->pamain_model->createPAreference($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new references';
                }else{

                }
        echo json_encode($output);
    }

    public function createresearchpambreso()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('gencode',true),
            'pambreso_title'    => $this->input->post('research_titlereso',true),
            'pambreso_no'    => $this->input->post('research_pambreso',true),
            'file_nameReso'  => $this->input->post('research_pambReso_text'),
            'research_code'    => $this->input->post('researchGenCode',true),
            'uploaded_on'       =>  date("Y-m-d H:i:s")
        ];
        $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);
        $data['x'] = (object)$postDataImage2 = [
            'generatedcode' =>  $this->input->post('gencode',true),
            'id_researchPamBFile'   => $query,
            'research_code'   => $this->input->post('researchGenCode',true),
            'resolution_no'    =>  $this->input->post('research_pambreso',true),
            'resolution_name'      =>  $this->input->post('research_titlereso',true),
            'file_reso'       => $this->input->post('research_pambReso_text'),
        ];
        $query =$this->pamain_model->insertresofile($postDataImage2);
        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added monitoring report';
                }
        echo json_encode($output);
    }

    public function createresearchpambresoEdit()
    {

        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('research2-gencode',true),
            'pambreso_title'    => $this->input->post('edit-editsearch_titlereso',true),
            'pambreso_no'    => $this->input->post('edit-editsearch_pambreso',true),
            'file_nameReso'  => $this->input->post('edit-researchreso_span'),
            'research_code'    => $this->input->post('research2-researchGenCode',true),
            'uploaded_on'       =>  date("Y-m-d H:i:s")
        ];
        $query = $this->pamain_model->insertresearchPAMBReso($postDataImage);
        $data['x'] = (object)$postDataImage2 = [
            'generatedcode' =>  $this->input->post('research2-gencode',true),
            'id_researchPamBFile'   => $query,
            'research_code'   => $this->input->post('research2-researchGenCode',true),
            'resolution_no'    =>  $this->input->post('edit-editsearch_pambreso',true),
            'resolution_name'      =>  $this->input->post('edit-editsearch_titlereso',true),
            'file_reso'       => $this->input->post('edit-researchreso_span'),
        ];
        $query =$this->pamain_model->insertresofile($postDataImage2);
        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added monitoring report';
                }
        echo json_encode($output);
    }

    public function otherspambclearancefile()
    {
        if(isset($_FILES["otherpambclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pamb_clearance_others';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('otherpambclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function otherspambclearancefileEdit()
    {
        if(isset($_FILES["edit-otherpambclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pamb_clearance_others';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-otherpambclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pcbrpambclearancefile()
    {
        if(isset($_FILES["pacbrmapambclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pacbrma_pamb_clearance';
            $config['allowed_types'] = 'xlsx|xls|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pacbrmapambclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pcbrpambclearancefileEdit()
    {
        if(isset($_FILES["edit-pacbrmapambclearancefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_pacbrma_pamb_clearance';
            $config['allowed_types'] = 'xlsx|xls|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pacbrmapambclearancefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function mgntData()
    {
            $config ['upload_path'] = 'bmb_assets2/upload/managementzone_img';
            $config['file_name'] = $_FILES['pic_mgnt']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_mgnt')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }


    public function facilityData()
    {

        if(isset($_FILES["pic_facilities"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/facilities_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_facilities'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/facilities_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/facilities_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function activityData()
    {
        if(isset($_FILES["pic_activity"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_activity'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/ecotourism_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/ecotourism_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function productData()
    {
        if(isset($_FILES["pic_products"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/product_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_products'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/product_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/product_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function enterpriseData()
    {
         if(isset($_FILES["pic_enterprises"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/enterprise_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pic_enterprises'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/enterprise_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 800;
                 $config['height'] = 600;
                 $config['new_image'] = 'bmb_assets2/upload/enterprise_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function climateData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/climate_img';
            $config['file_name'] = $_FILES['img_climate']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_climate')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function hydroData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/hydrology_img';
            $config['file_name'] = $_FILES['img_hydro']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_hydro')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function landData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/existinglanduse_img';
            $config['file_name'] = $_FILES['img_land']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_land')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function vegetativeData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/vegetative_img';
            $config['file_name'] = $_FILES['img_vegetative']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_vegetative')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function landslideData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/landslide_img';
            $config['file_name'] = $_FILES['img_landslide']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_landslide')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function floodingData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/flooding_img';
            $config['file_name'] = $_FILES['img_flooding']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_flooding')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function seaData()
    {

        sleep(3);
        if($_FILES["img_sea"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/sealevel_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_sea"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_sea"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_sea"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_sea"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_sea"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_sea"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/sealevel_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/sealevel_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
       }
          }
         echo $output;

        }
    }

    public function tsunamiData()
    {
       sleep(3);
        if($_FILES["img_tsunami"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/tsunami_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_tsunami"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_tsunami"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_tsunami"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_tsunami"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_tsunami"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_tsunami"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/tsunami_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/tsunami_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
       }
          }
         echo $output;

        }
    }

    public function faultdata()
    {
       sleep(3);
        if($_FILES["img_fire"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/fire_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_fire"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_fire"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_fire"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_fire"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_fire"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_fire"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/fire_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/fire_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
       }
          }
         echo $output;

        }
    }

    public function othergeohazardsdata()
    {
       sleep(3);
        if($_FILES["img_geohazard"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/other_geohazard_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_geohazard"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_geohazard"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_geohazard"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_geohazard"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_geohazard"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_geohazard"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/other_geohazard_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/other_geohazard_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
       }
          }
         echo $output;

        }
    }

    public function fireData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/fire_img';
            $config['file_name'] = $_FILES['img_fire']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_fire')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function geohazardData()
    {
        if(isset($_FILES["img_geohazard"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/other_geohazard_img';
            $config['allowed_types'] = 'jpg|jpeg|png|gif';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('img_geohazard'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $config['image_library'] = 'gd2';
                 $config['source_image'] = 'bmb_assets2/upload/other_geohazard_img/'.$data["file_name"];;
                 $config['create_thumb'] = FALSE;
                 $config['maintain_ratio'] = FALSE;
                 $config['quality'] = '60%';
                 $config['width'] = 1600;
                 $config['height'] = 1200;
                 $config['new_image'] = 'bmb_assets2/upload/other_geohazard_img/'.$data["file_name"];
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                 $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cavemapData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/cavemap_img';
            $config['file_name'] = $_FILES['img_cavemap']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_cavemap')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function ffmapData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/ff_map_img';
            $config['file_name'] = $_FILES['img_ffmap']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_ffmap')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function ffpicData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/ff_pic_img';
            $config['file_name'] = $_FILES['img_ffpic']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_ffpic')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function ffmapDataEdit()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/ff_map_img';
            $config['file_name'] = $_FILES['edit-img_ffmap']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-img_ffmap')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function cavemapData2()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/cavemap_img';
            $config['file_name'] = $_FILES['edit-img_cavemap']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-img_cavemap')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function cavemappicData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/cavemappic_img';
            $config['file_name'] = $_FILES['img_cavemappic']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_cavemappic')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function cavemappdfData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/cave_pdf';
            $config['file_name'] = $_FILES['pdf_file_assessment']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pdf_file_assessment')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function iwpdfData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/iwpdf';
            $config['file_name'] = $_FILES['iwpdf']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if($this->upload->do_upload('iwpdf')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function iwpdfDataEdit()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/iwpdf';
            $config['file_name'] = $_FILES['edit-iwpdf']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if($this->upload->do_upload('edit-iwpdf')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function soilData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/soil_img';
            $config['file_name'] = $_FILES['img_soil']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_soil')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function rockData()
    {
            $config ['upload_path'] = 'bmb_assets2/upload/rock_img';
            $config['file_name'] = $_FILES['img_rock']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_rock')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function mapData()
    {
        // if(!empty($_FILES['pic_threat']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/map_image';
            $config['file_name'] = $_FILES['picture2']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('picture2')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];

            // $data['status'] = (!empty($filenames)?$filenames:$this->input->post('old_picture'));

            }
        // }
        $output['status'] = $filenames;
        echo json_encode($output);
    }

    public function attraction_upload_save(){

        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['pic_attract']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/attraction_img';
            $config['file_name'] = $_FILES['pic_attract']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_attract')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('attr_id') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $this->form_validation->set_rules('attraction','Title','required');
        $this->form_validation->set_rules('description2','Activity Description','required');

        $data['pamainimage'] = (object)$postDataImage = [
            'attr_id'          => $this->input->post('attr_id',true),
            'generatedcode '  => $this->input->post('gencode',true),
            'title'      =>  $this->input->post('attraction',true),
            'description'     =>  $this->input->post('description2',true),
            'image_attr'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }else{
        $data['pamainimage'] = (object)$postDataImage = [
            'attr_id'          => $this->input->post('attr_id',true),
            'generatedcode '  => $this->input->post('gencode',true),
            'title'      =>  $this->input->post('attraction',true),
            'description'     =>  $this->input->post('description2',true),
            'image_attr'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['attr_id'])){
                $query = $this->pamain_model->createAttr($postDataImage);
                    if($query){
                        $output['status'] = 'New attraction successfully uploaded';
                    }else{
                        $output['error'] = true;
                        $output['status'] = 'No image upload';
                    }
                }else{
                    $query = $this->pamain_model->createAttr($postDataImage);
                    if($query){
                        $output['status'] = 'New attraction successfully uploaded';
                    }else{
                        $output['error'] = true;
                        $output['status'] = 'No image upload';
                    }
                }
            }


        }
        echo json_encode($output);

    }

    public function deleteattr($id = null)
        {
            $sql1 = $this->db->where('attr_id',$id)
                                            ->get('tblpaattraction')
                                            ->row();
            if ($sql1->image_attr == "nophoto.jpg") {

            }elseif (!empty($sql1->image_attr)) {
                unlink('bmb_assets2/upload/attraction_img/'.$sql1->image_attr);
            }
            $sql = "DELETE FROM tblpaattraction WHERE attr_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchImageAttr(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageAttr($codegens);
        foreach($data as $row){
            $code = $row->ecogeneratedcode;
            $data1 = $this->pamain_model->getAllMultiImageAttr_1($code);
            $data2 = $this->pamain_model->getAllMultiImageAttr_2($code);
            $data3 = $this->pamain_model->getAllMultiImageAttr_3($code);
            $data4 = $this->pamain_model->getAllMultiImageAttr_4($code);
            $data5 = $this->pamain_model->getAllMultiImageAttr_5($code);
            $data6 = $this->pamain_model->getAllMultiImageAttr_6($code);
            $data7 = $this->pamain_model->getAllMultiImageAttr_7($code);
            $data8 = $this->pamain_model->getAllMultiImageAttr_8($code);
            $data9 = $this->pamain_model->getAllMultiImageAttr_9($code);
            $data10 = $this->pamain_model->getAllMultiImageAttr_10($code);
            $data11 = $this->pamain_model->getAllMultiImageAttr_11($code);
            $data12 = $this->pamain_model->getAllMultiImageAttr_12($code);
            $data13 = $this->pamain_model->getAllMultiImageAttr_13($code);
            $data14 = $this->pamain_model->getAllMultiImageAttr_14($code);
            $data15 = $this->pamain_model->getAllMultiImageAttr_15($code);
            ?>
            <tr id="<?php echo $row->attr_id; ?>" class="trows">
                <td>
                    <?php echo '<img src="../../../bmb_assets2/upload/attraction_img/'.(!empty($row->image_attr)?$row->image_attr:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.
                    '<b>Source of Photo : </b>'.(!empty($row->source_photo)?$row->source_photo:"")."<br>".
                    "<b>Name of Ecotourism Attraction : </b>".$row->title.'<br>'.
                    '<b>Ecotourism activitie/s : </b>'.($row->chk_activity1==1?"* Hiking/Trekking/Mountaineering<br>":"").
                                                       ($row->chk_activity2==1?"* Caving/Spelunking<br>":"").
                                                       ($row->chk_activity3==1?"* Scuba Diving<br>":"").
                                                       ($row->chk_activity4==1?"* Snorkeling<br>":"").
                                                       ($row->chk_activity5==1?"* Swimming<br>":"").
                                                       ($row->chk_activity6==1?"* Kayaking<br>":"").
                                                       ($row->chk_activity7==1?"* Surfing<br>":"").
                                                       ($row->chk_activity8==1?"* Wildlife watching<br>":"").
                                                       ($row->chk_activity9==1?"* Bird watching<br>":"").
                                                       ($row->chk_activity10==1?"* Village tour<br>":"").
                                                       ($row->chk_activity11==1?"* Mangrove tour<br>":"").
                                                       ($row->chk_activity12==1?"* Science Museum tour<br>":"").
                                                       ($row->chk_activity13==1?"* Biking<br>":"").
                                                       ($row->chk_activity14==1?"* Nature Photography<br>":"").
                                                       ($row->chk_activity15==1?"* Others : ".$row->other_activity:"").
                    '<br><b>Activity description : </b><br><p>'.$row->description.'</p>';
                    ?>
                    <button type="button" value="<?php echo $row->attr_id;?>" class="btn btnbtn btn-info btn-xs" onclick="editattraction(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageattr" data-id="<?php echo $row->attr_id ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo '<img src="../../../bmb_assets2/upload/attraction_img/'.(!empty($row->image_attr)?$row->image_attr:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?></td>
                <td class="hide"><?php echo '<b>'.$row->title.'</b><p>'.$row->description.'</p>'; ?></td>
                <td class="hide"><?php echo $row->title; ?></td>
                <td class="hide"><?php echo $row->description; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/attraction_img/'.(!empty($row->image_attr)?$row->image_attr:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo $row->image_attr ?></td>
                <td class="hide"><?php echo $row->other_activity ?></td>
                <td class="hide"><?php echo $row->source_photo ?></td>
                <td class="hide"><?php echo $row->source_photo ?></td>
                <td class="hidden">
                   <?php
                    foreach($data1 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg1 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data2 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg2 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data3 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg3 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data4 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg4 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data5 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg5 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data6 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg6 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data7 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg7 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data8 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg8 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data9 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg9 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data10 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg10 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data11 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg11 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data12 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg12 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data13 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg13 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data14 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg14 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hidden">
                   <?php
                    foreach($data15 as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg15 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hide"><?php echo $row->ecogeneratedcode ?></td>
                <td class="hide"><?php echo $row->generatedcode ?></td>
                <input type="hidden" id="acvitityno1<?php echo $row->attr_id;?>" value="<?php echo $row->eco_activity ?>" />
                <input type="hidden" id="chkactv-1<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity1 ?>" />
                <input type="hidden" id="chkactv-2<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity2 ?>" />
                <input type="hidden" id="chkactv-3<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity3 ?>" />
                <input type="hidden" id="chkactv-4<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity4 ?>" />
                <input type="hidden" id="chkactv-5<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity5 ?>" />
                <input type="hidden" id="chkactv-6<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity6 ?>" />
                <input type="hidden" id="chkactv-7<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity7 ?>" />
                <input type="hidden" id="chkactv-8<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity8 ?>" />
                <input type="hidden" id="chkactv-9<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity9 ?>" />
                <input type="hidden" id="chkactv-10<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity10 ?>" />
                <input type="hidden" id="chkactv-11<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity11 ?>" />
                <input type="hidden" id="chkactv-12<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity12 ?>" />
                <input type="hidden" id="chkactv-13<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity13 ?>" />
                <input type="hidden" id="chkactv-14<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity14 ?>" />
                <input type="hidden" id="chkactv-15<?php echo $row->attr_id;?>" value="<?php echo $row->chk_activity15 ?>" />
            </tr>
            <?php
        }
    }

    public function deleteactivityimg($id = null)
        {
            $sql1 = $this->db->where('id_activity_img',$id)
                                            ->get('tblpaattraction_activity_img')
                                            ->row();
            unlink('bmb_assets2/upload/attraction_multiple_img/'.$sql1->activity_img);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpaattraction_activity_img WHERE id_activity_img  = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


// }
    public function fetchImageAttr1(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_1($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg1 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr2(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_2($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg2 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr3(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_3($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg3 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr4(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_4($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg4 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr5(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_5($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg5 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr6(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_6($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg6 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr7(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_7($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg7 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr8(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_8($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg8 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr9(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_9($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg9 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr10(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_10($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg10 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr11(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_11($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg11 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr12(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_12($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg12 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr13(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_13($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg13 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr14(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_14($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg14 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function fetchImageAttr15(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttr_15($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-3">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeactivityimg15 gal-btn" data-id="'.$rows->id_activity_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/attraction_multiple_img/').$rows->activity_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    public function facility_upload_save(){

        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['pic_facilities']['name'])){

            $config ['upload_path'] = 'bmb_assets2/upload/facilities_img';
            $config['file_name'] = $_FILES['pic_facilities']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('pic_facilities')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('facility_id') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $this->form_validation->set_rules('facilities','Title','required');
        $this->form_validation->set_rules('description3','Activity Description','required');

        $data['pamainimage'] = (object)$postDataImage = [
            'facility_id'          => $this->input->post('facility_id',true),
            'generatedcode '  => $this->input->post('gencode',true),
            'title_facility'      =>  $this->input->post('facilities',true),
            'description_facility'     =>  $this->input->post('description3',true),
            'image_facility'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['facility_id'])){
                $query = $this->pamain_model->createFacility($postDataImage);
                    if($query){
                        $output['status'] = 'New facilities successfully uploaded';
                    }else{
                        $output['error'] = true;
                        $output['status'] = 'No image upload';
                    }
                }
            }


        }
        echo json_encode($output);

    }

    public function fetchImageFacility(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageFacility($codegens);
        foreach($data as $row){
            $code = $row->facilitycode;
            $data2 = $this->pamain_model->getallmultiimgfacility($code);

            ?>
            <tr id="<?php echo $row->facility_id; ?>" class="trows">
                <td>
                    <?php echo '<br><img src="../../../bmb_assets2/upload/facilities_img/'.(!empty($row->image_facility)?$row->image_facility:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>'.$row->facility_descs.'</b><p>'.$row->description_facility.'</p><b>Condition : </b>'.$row->condition_desc.'<br><b>Date built : </b>'.$row->month.' '.$row->year.'<br><b># of People Accomodate : </b>'.$row->noaccomodate.'<br>'; ?>
                        <button type="button" value="<?php echo $row->facility_id;?>" class="btn btnbtn btn-info btn-xs" onclick="editfacility(this);">
                        Edit </button>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removeimagefacility" data-id="<?php echo $row->facility_id ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo '<img src="../../../bmb_assets2/upload/facilities_img/'.(!empty($row->image_facility)?$row->image_facility:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?></td>
                <td class="hide"><?php echo '<b>'.$row->title_facility.'</b><p>'.$row->description_facility.'</p>'; ?></td>
                <td class="hide"><?php echo $row->title_facility; ?></td>
                <td class="hide"><?php echo $row->description_facility; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/facilities_img/'.(!empty($row->image_facility)?$row->image_facility:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo (!empty($row->image_facility)?$row->image_facility:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo $row->noaccomodate ?></td>
                <td class="hide"><?php echo $row->facility_others ?></td>
                <td class="hide"><?php echo $row->facilitycode ?></td>
                <td class="hide">
                   <?php
                    foreach($data2 as $rows){
                        echo '<div class="col-md-6">
                       <button type="button" class="btn btn-danger btn-flat btn-xs removefacilityimgmul gal-btn" data-id="'.$rows->id_facility_img.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/facility_multiple_img/').$rows->facilities_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <input type="hidden" id="ceprise<?php echo $row->facility_id;?>" value="<?php echo $row->facility_id ?>" />
                <input type="hidden" id="facility_month<?php echo $row->facility_id;?>" value="<?php echo $row->facility_date_month ?>" />
                <input type="hidden" id="facility_year<?php echo $row->facility_id;?>" value="<?php echo $row->facility_date_year ?>" />
                <input type="hidden" id="facility_condition<?php echo $row->facility_id;?>" value="<?php echo $row->facility_condition ?>" />
                <input type="hidden" id="facility_ids<?php echo $row->facility_id;?>" value="<?php echo $row->title_facility ?>" />
            </tr>
            <?php
        }
    }

    public function deletefacilityimgmulti($id = null)
        {
            $sql1 = $this->db->where('id_facility_img',$id)
                                            ->get('tblpafacility_activity_img')
                                            ->row();
            unlink('bmb_assets2/upload/facility_multiple_img/'.$sql1->facilities_img);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpafacility_activity_img WHERE id_facility_img  = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchmultiimageEdit(){
        $code = $this->input->post('codegens');
            $datas = $this->pamain_model->getAllMultiImageAttrFacility($code);
            ?>
            <td>
                <?php
                foreach($datas as $rows){
                    echo '<div class="col-md-6">
                    <button type="button" class="btn btn-danger btn-flat btn-xs removefacilityimgmul gal-btn" data-id="'.$rows->id_facility_img.'" title="Remove">Remove</button>
                    <img src="'.base_url('bmb_assets2/upload/facility_multiple_img/').$rows->facilities_img.'" class="img-responsive img-thumbnail img-gallery" /><br>
                    </div>';
                }
                ?>
            </td>
        ?>
        <?php
    }

    function editInsert_FacilityImg()
 {
    sleep(3);
        if($_FILES["edit-facility_img_files"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/facility_multiple_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $config['encrypt_name'] = true;
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-facility_img_files"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-facility_img_files"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-facility_img_files"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-facility_img_files"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-facility_img_files"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-facility_img_files"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/facility_multiple_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('facility-gencode',true),
            'facilitycode' => $this->input->post('facility-gencode2',true),
            'facilities_img' => (!empty($filenames)?$filenames:"")
          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createfacilitymultiImgsEdit($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

    public function deletefacility($id = null)
        {
            $sql1 = $this->db->where('facility_id',$id)
                                            ->get('tblpafacility')
                                            ->row();
            if ($sql1->image_facility == "nophoto.jpg" || empty($sql1->image_facility)) {

            }elseif (!empty($sql1->image_facility)) {
                unlink('bmb_assets2/upload/facilities_img/'.$sql1->image_facility);
            }
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpafacility WHERE facility_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function save_project()
    {
        $rel_data = $this->input->post('table_project');

        $status=$this->pamain_model->save_project($rel_data);

        $this->output->set_content_type('application/json');
        echo json_encode(array('status' => $status));
    }

    public function fetchProject(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllproject($codegens);
        foreach($data as $row_p){ ?>
            <tr id="<?php echo $row_p->id_project; ?>" class="trows">
                <td><?php echo $row_p->project_name; ?></td>
                <td><?php echo "From ".$row_p->date_start." To ".$row_p->date_end; ?></td>
                <td><?php echo $row_p->proj_area; ?></td>
                <td class="hide"><?php echo $row_p->type_processing; ?></td>
                <td class="hide"><?php echo $row_p->sapa_no; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_signing_month; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_signing_day; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_signing_year; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_exp_month; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_exp_day; ?></td>
                <td class="hide"><?php echo $row_p->moa_date_exp_year; ?></td>
                <td class="hide"><?php echo $row_p->secondparty; ?></td>
                <td class="hide"><?php echo $row_p->date_start; ?></td>
                <td class="hide"><?php echo $row_p->date_end; ?></td>
                <td class="hide"><?php echo $row_p->amount; ?></td>
                <td class="hide"><?php echo $row_p->implementor; ?></td>
                <td class="hide"><?php echo $row_p->remarks; ?></td>
                <td class="hide"><?php echo $row_p->pacbrma_no; ?></td>
                <td class="hide"><?php echo $row_p->people_organization; ?></td>
                <td class="hide"><?php echo $row_p->proj_area; ?></td>
                <td class="hide"><?php echo $row_p->proj_location; ?></td>
                <td class="hide"><?php echo $row_p->nature_development; ?></td>

                <td>
                <?php if ($row_p->type_processing == "sapa"): ?>
                    <?php echo 'Special Use Agreement in Protected Areas (SAPA)'; ?>
                <?php elseif ($row_p->type_processing == "moa"): ?>
                    <?php echo 'Memorandum of Agreement (MOA)'; ?>
                <?php elseif ($row_p->type_processing == "pacbrma"): ?>
                    <?php echo 'Protected Area Community Based Resources Agreement (PACBRMA)'; ?>
                <?php else: ?>

                <?php endif; ?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row_p->id_project;?>" class="btn btn-info btn-edit-proj" onclick="click_project(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeproject" data-id="<?php echo $row_p->id_project; ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <input type="hidden" id="cpe<?php echo $row_p->id_project;?>" value="<?php echo $row_p->type_processing; ?>" />
            <?php
        }
    }

    public function deleteproject($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamainproject WHERE id_project = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Project Name Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchPrograms(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllprograms($codegens);
        foreach($data as $row_p){
            $id = $row_p->id_program;
            $countProjects = $this->pamain_model->countnoofProjects($id);
            $countResearch = $this->pamain_model->countnoofResearch($id);
            $countActivity = $this->pamain_model->countnoofActivity($id);
        ?>
        <!-- ucfirst($row_p->program_name) -->
            <tr id="<?php echo $row_p->id_program ; ?>" class="trows">
                <td><?php echo $row_p->name_agency; ?></td>
                <td><?php echo ($row_p->sector_program_id==5?$row_p->program_name:$row_p->program_names)."<br><br>Duration : ".(!empty($row_p->prog_duration_from_month)?$row_p->prog_duration_from_month:"")." ".(!empty($row_p->prog_duration_from_year)?$row_p->prog_duration_from_year:"")."-".(!empty($row_p->prog_duration_to_month)?$row_p->prog_duration_to_month:"")." ".(!empty($row_p->prog_duration_to_year)?$row_p->prog_duration_to_year:"");
                ?>
                </td>
                <td class="hide"><?php echo $row_p->program_details; ?></td>
                <td class="hide"><?php echo $row_p->id_program; ?></td>
                <td class="hide"><?php echo $row_p->generatedcode; ?></td>
                <td>
                    <?php echo $row_p->program_details.
                                "<br><b>Total no. of Activity: </b>"."<span class='badge badge-primary' style='background-color:#5cb85c'>".$countActivity."</span>".
                                "&nbsp;&nbsp;&nbsp;&nbsp;<b>Total no. of Project: </b>"."<span class='badge badge-success' style='background-color:#5cb85c'>".$countProjects."</span>".
                                "&nbsp;&nbsp;&nbsp;&nbsp;<b>Total no. of Research: </b>"."<span class='badge badge-success' style='background-color:#5cb85c'>".$countResearch."</span>" ?>
                </td>
                <td class=""><?php echo ucfirst($row_p->program_partner);?> </td>
                <td>
                    <?php echo "<a style='margin:10px' value='".$row_p->id_program."' class='btn btn-success btn-edit-prog btn-xs' onclick='add_programactivity(this);'> &nbsp;Activity&nbsp;</a>".
                               "<a style='margin:10px' value='".$row_p->id_program."' class='btn btn-success btn-edit-prog btn-xs' onclick='add_projects(this);'> &nbsp;Project&nbsp;&nbsp;</a>".
                               "<a style='margin:10px' value='".$row_p->id_program."' class='btn btn-success btn-edit-prog btn-xs' onclick='add_research(this);'> Research</a>"
                    ?>
                </td>
                <td class="hide"><?php echo ucfirst($row_p->program_name);?> </td>
                <td class="hide"><?php echo ucfirst($row_p->program_partner);?> </td>
                <td>
                    <button  type="button" value="<?php echo $row_p->id_program ;?>" class="btn btn-info btn-xs" title="Edit" onclick="click_program(this);">
                    Edit</button>
                    <button  type="button" class="btn btn-danger btn-flat btn-xs removeprograms" data-id="<?php echo $row_p->id_program ; ?>" title="Remove">Remove</button>
                    <input type="hidden" id="progdrp1<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->prog_duration_from_month ; ?>" />
                    <input type="hidden" id="progdrp2<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->prog_duration_from_year ; ?>" />
                    <input type="hidden" id="progdrp3<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->prog_duration_to_month ; ?>" />
                    <input type="hidden" id="progdrp4<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->prog_duration_to_year ; ?>" />
                    <input type="hidden" id="progdrp5<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->program_sector ; ?>" />
                    <input type="hidden" id="progdrp6<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->sector_program_id ; ?>" />
                    <input type="hidden" id="prog<?php echo $row_p->id_program ;?>" value="<?php echo $row_p->id_program ; ?>" />
                </td>
            </tr>
            <?php
        }
    }

    public function deleteprograms($id = null)
    {

        $output = array();
         // $sql = "DELETE FROM tblmainprogram WHERE id_program = '$id'";
        $sql = "DELETE tblmainprogram,tblmainresearch,tblpareference
                FROM tblmainprogram
                LEFT JOIN tblmainresearch ON tblmainresearch.id_program = tblmainprogram.id_program
                LEFT JOIN tblpareference ON tblpareference.research_code = tblmainresearch.research_code
                WHERE tblmainprogram.id_program = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Programs removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchProgramActivity(){
        $ids = $this->input->post('ids');
        $data = $this->pamain_model->getAllprogactivity($ids);
        foreach($data as $row_p){ ?>
            <tr id="<?php echo $row_p->id_program_activity ; ?>" class="trows">
                <td><?php echo ucfirst($row_p->program_activity); ?></td>
                <td class="hide"><?php echo number_format($row_p->program_activity_devt,2); ?></td>
                <td class="hide"><?php echo number_format($row_p->program_activity_cost,2); ?></td>
                <td class="hide"><?php echo $row_p->program_activity_month." ".$row_p->program_activity_year; ?></td>
                <td class="hide"><?php echo ucfirst($row_p->program_activity_output); ?></td>
                <td class="hide"><?php echo $row_p->program_activity_month; ?></td>
                <td class="hide"><?php echo $row_p->program_activity_year; ?></td>
                <td class="hide"><?php echo $row_p->id_program; ?></td>
                <td>
                    <button type="button" value="<?php echo $row_p->id_program_activity ;?>" class="btn btn-info btn-edit-proj" onclick="click_activity_edit(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeprogramactivity" data-id="<?php echo $row_p->id_program_activity ; ?>" title="Remove">Remove</button>
                    <input type="hidden" data-ids="<?php echo $row_p->id_program; ?>" id="activitieseditid" value="<?php echo $row_p->id_program; ?>" />
                    <input type="hidden" id="proj<?php echo $row_p->id_program_activity ;?>" value="<?php echo $row_p->id_program_activity ; ?>" />

                </td>
            </tr>
            <?php
        }
    }

    public function insertPAprojsList()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'proj_code' => $this->input->post('projgencode',true),
            'proj_sector_id' => $this->input->post('projsector',true),
            'proj_list_id' => $this->input->post('projsectorlist',true),
            'proj_name' => $this->input->post('proj_name',true),
            'proj_desc' => $this->input->post('proj_details',true),
            'proj_proponent' => $this->input->post('proj_proponent',true),
            'proj_start_implement_month' => $this->input->post('proj_start_implement_month',true),
            'proj_start_implement_year' => $this->input->post('proj_start_implement_year',true),
            'proj_end_implement_month' => $this->input->post('proj_end_implement_month',true),
            'proj_end_implement_year' => $this->input->post('proj_end_implement_year',true),
            'source_fund' => $this->input->post('source_fund2',true),
            'proj_typefund' => $this->input->post('progtypeoffund',true),
            'proj_sourcetxt' => $this->input->post('progtextsource',true),
            'chk_cofinancing' => $this->input->post('chk_cofinancing',true)==null ? 0 : 1,
            'proj_typeofpayment' => $this->input->post('typeofpaymentcofinancing',true),
            'proj_currency' => $this->input->post('projcurrency',true),
            'proj_money' => str_replace(',','',$this->input->post('moneymonetarytext',true)),
            'proj_activitymonetary' => $this->input->post('activitymonetarytext',true),
            'proj_inkindmonetary' => $this->input->post('inkindmonetarytext',true),
            'proj_area' => str_replace(',','',$this->input->post('proj_area2',true)),
            'proj_location' => $this->input->post('proj_location2',true),
            'proj_remarks' => $this->input->post('proj_remarks',true),
            'proj_report' => $this->input->post('projreport_file_span',true),
            'proj_pamb_clearance' => $this->input->post('projectclearancefile_span',true),
            'proj_status' => $this->input->post('proj_status',true),
            'proj_partnership' => $this->input->post('proj_partnerships',true),
            'proj_objectives' => $this->input->post('proj_objectives',true),
            'date_created' => date('Y-m-d'),
        ];
                $query = $this->pamain_model->createPAprojectssList($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new project';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchProjNonUnderProgram(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllprojNotProgram($codegens);
        foreach($data as $row_p){
            $code2 = $row_p->proj_code;
            $data2 = $this->pamain_model->getcountreportsProgram($code2);
            $ans = "";
            if($row_p->proj_typefund == 1){
                $ans = "Name of Grantor";
            }else if($row_p->proj_typefund == 2){
                $ans = "Lending Institution";
            }else if($row_p->proj_typefund == 3){
                $ans = "Name of Donor";
            }else{
                $ans = "";
            }
            ?>
            <tr id="<?php echo $row_p->id_projects; ?>" class="trows">
                <td><?php echo $row_p->name_agency; ?></td>
                <td><?php echo ($row_p->proj_list_id==20?$row_p->proj_name:$row_p->proj_names) ?></td>
                <td><?php echo ucfirst($row_p->proj_proponent); ?></td>
                <td><?php echo "From ".$row_p->proj_start_implement_year." To ".$row_p->proj_end_implement_year; ?></td>
                <td><?php echo $row_p->sourceoffund.($row_p->source_fund==1?" (".$row_p->typeoffund.") ".$ans." : ".$row_p->proj_sourcetxt:"")."<br>".
                                                    ($row_p->chk_cofinancing==1?"Co-Financing (".($row_p->proj_typeofpayment==1?$row_p->typeofpaymentprog."-".$row_p->currency_symbol." : ".number_format($row_p->proj_money,2).")":$row_p->typeofpaymentprog."-".$row_p->proj_activitymonetary." : ".$row_p->proj_inkindmonetary.")"):""); ?>
                </td>
                <td><?php echo number_format($row_p->proj_area,3); ?></td>
                <td><?php echo ucfirst($row_p->proj_location); ?></td>
                <td class="hide"><?php echo $row_p->proj_start_implement_month; ?></td>
                <td class="hide"><?php echo $row_p->proj_start_implement_year; ?></td>
                <td class="hide"><?php echo $row_p->proj_end_implement_month; ?></td>
                <td class="hide"><?php echo $row_p->proj_end_implement_year; ?></td>
                <td class="hide"><?php echo number_format($row_p->proj_cost,2); ?></td>
                <td class="hide"><?php echo ucfirst($row_p->proj_remarks); ?></td>
                <td class="hide"><?php echo $row_p->id_program; ?></td>
                <td class="hide"><?php echo $row_p->proj_code; ?></td>
                <td class="hide"><?php echo $row_p->generatedcode; ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/project_pamb_clearance/'.$row_p->proj_pamb_clearance ?></td>
                <td class="hidden"><?php echo $row_p->proj_pamb_clearance; ?></td>
                <td><?php echo "Number of project reports : ".$data2."<br>"; ?></td>
                <td class="hide"><?php echo $row_p->proj_status; ?></td>
                <!-- //20// --><td class="hide"><?php echo $row_p->proj_partnership; ?></td>
                <td class="hide"><?php echo $row_p->proj_objectives; ?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/project_completion_report/').$row_p->proj_completion_report ?>"><?php echo $row_p->proj_completion_report ?></a></td>
                <td class="hidden"><?php echo $row_p->proj_completion_report; ?></td>
                <td class="hidden"><?php echo $row_p->source_fund; ?></td>
                <td class="hidden"><?php echo $row_p->proj_typefund; ?></td>
                <td class="hidden"><?php echo $row_p->proj_sourcetxt; ?></td>
                <td class="hidden"><?php echo $row_p->chk_cofinancing; ?></td>
                <td class="hidden"><?php echo $row_p->proj_typeofpayment; ?></td>
                <td class="hidden"><?php echo $row_p->proj_currency; ?></td>
                <td class="hidden"><?php echo number_format($row_p->proj_money,2); ?></td>
                <td class="hidden"><?php echo $row_p->proj_activitymonetary; ?></td>
                <td class="hidden"><?php echo $row_p->proj_inkindmonetary; ?></td>
                <td>
                    <button type="button" value="<?php echo $row_p->id_projects;?>" class="btn btn-info btn-xs" onclick="click_projNotUnderProgram(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeproj" data-id="<?php echo $row_p->id_projects; ?>" title="Remove">Remove</button>
                    <input type="hidden" data-ids="<?php echo $row_p->id_program; ?>" id="projsid" value="<?php echo $row_p->id_program; ?>" />
                    <input type="hidden" id="proj<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->id_projects; ?>" />
                    <input type="hidden" id="proj22<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->proj_status; ?>" />
                    <input type="hidden" id="proj23<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->source_fund; ?>" />
                    <input type="hidden" id="proj24<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->proj_typefund; ?>" />
                    <input type="hidden" id="proj25<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->chk_cofinancing; ?>" />
                    <input type="hidden" id="proj26<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->proj_sector_id; ?>" />
                    <input type="hidden" id="proj27<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->proj_list_id; ?>" />
                </td>
            </tr>
            <?php
        }
    }

    public function fetchProj(){
        $ids = $this->input->post('ids');
        $data = $this->pamain_model->getAllproj($ids);
        foreach($data as $row_p){
            $ans = "";
            if($row_p->proj_typefund == 1){
                $ans = "Name of Grantor";
            }else if($row_p->proj_typefund == 2){
                $ans = "Lending Institution";
            }else if($row_p->proj_typefund == 3){
                $ans = "Name of Donor";
            }else{
                $ans = "";
            }
        ?>
            <tr id="<?php echo $row_p->id_projects; ?>" class="trows">
                <td><?php echo $row_p->name_agency; ?></td>
                <td><?php echo ($row_p->proj_list_id==20?$row_p->proj_name:$row_p->proj_names) ?></td>
                <td><?php echo ucfirst($row_p->proj_proponent); ?></td>
                <td><?php echo "From ".$row_p->proj_start_implement_year." To ".$row_p->proj_end_implement_year; ?></td>
                <td><?php echo $row_p->sourceoffund.($row_p->source_fund==1?" (".$row_p->typeoffund.") ".$ans." : ".$row_p->proj_sourcetxt:"")."<br>".
                                                    ($row_p->chk_cofinancing==1?"Co-Financing (".($row_p->proj_typeofpayment==1?$row_p->typeofpaymentprog."-".$row_p->currency_symbol." : ".number_format($row_p->proj_money,2).")":$row_p->typeofpaymentprog."-".$row_p->proj_activitymonetary." : ".$row_p->proj_inkindmonetary.")"):""); ?>
                </td>
                <td><?php echo number_format($row_p->proj_area,3); ?></td>
                <td><?php echo ucfirst($row_p->proj_location); ?></td>
                <td class="hide"><?php echo $row_p->proj_start_implement_month; ?></td>
                <td class="hide"><?php echo $row_p->proj_start_implement_year; ?></td>
                <td class="hide"><?php echo $row_p->proj_end_implement_month; ?></td>
                <td class="hide"><?php echo $row_p->proj_end_implement_year; ?></td>
                <td class="hide"><?php echo number_format($row_p->proj_cost,2); ?></td>
                <td class="hide"><?php echo ucfirst($row_p->proj_remarks); ?></td>
                <td class="hide"><?php echo $row_p->id_program; ?></td>
                <td class="hide"><?php echo $row_p->proj_code; ?></td>
                <td class="hide"><?php echo $row_p->proj_status; ?></td>
                <td class="hide"><?php echo $row_p->proj_partnership; ?></td>
                <td class="hide"><?php echo $row_p->proj_objectives; ?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/project_completion_report/').$row_p->proj_completion_report ?>"><?php echo $row_p->proj_completion_report ?></a></td>
                <td class="hidden"><?php echo $row_p->proj_completion_report; ?></td>
                <td class="hidden"><?php echo $row_p->source_fund; ?></td>
                <td class="hidden"><?php echo $row_p->proj_typefund; ?></td>
                <td class="hidden"><?php echo $row_p->proj_sourcetxt; ?></td>
                <td class="hidden"><?php echo $row_p->chk_cofinancing; ?></td>
                <td class="hidden"><?php echo $row_p->proj_typeofpayment; ?></td>
                <td class="hidden"><?php echo $row_p->proj_currency; ?></td>
                <td class="hidden"><?php echo number_format($row_p->proj_money,2); ?></td>
                <td class="hidden"><?php echo $row_p->proj_activitymonetary; ?></td>
                <td class="hidden"><?php echo $row_p->proj_inkindmonetary; ?></td>
                <td class="hidden"><?php echo $row_p->proj_sector_id; ?></td>
                <td class="hidden"><?php echo $row_p->proj_list_id; ?></td>
                <td class="hidden"><?php echo $row_p->proj_desc; ?></td>
                <td>
                    <button type="button" value="<?php echo $row_p->id_projects;?>" class="btn btn-info btn-edit-proj" onclick="click_proj(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeproj" data-id="<?php echo $row_p->id_projects; ?>" title="Remove">Remove</button>
                    <input type="hidden" data-ids="<?php echo $row_p->id_program; ?>" id="projsid" value="<?php echo $row_p->id_program; ?>" />
                </td>
            </tr>
            <input type="hidden" id="proj<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->id_projects; ?>" />
            <input type="hidden" id="projssa<?php echo $row_p->id_projects;?>" value="<?php echo $row_p->proj_status; ?>" />
            <?php
        }
    }

    public function fetchresearches(){
        $ids = $this->input->post('ids');
        $data = $this->pamain_model->getAllsearch($ids);
        foreach($data as $row_p){
            $id = $row_p->id_program;
            $codes = $row_p->research_code;
            $data2 = $this->pamain_model->getAllReffromProgram($codes,$id);
            ?>
            <tr id="<?php echo $row_p->id_research; ?>" class="trows">
                <td><?php echo ucfirst($row_p->type_research); ?></td>
                <td><?php echo ucfirst($row_p->research_purpose); ?></td>
                <td class="hide"><?php echo $row_p->research_year; ?></td>
                <td class="hide"><?php echo $row_p->permit_no; ?></td>
                <td class="hide"><?php echo ucfirst($row_p->funding_agency); ?></td>
                <td class="hide"><?php echo ucfirst($row_p->name_researcher); ?></td>
                <td class="hide"><?php echo ucfirst($row_p->institution); ?></td>
                <td class="hide"><?php echo ucfirst($row_p->pamb_reso_no); ?></td>
                <td class="hide"><?php echo $row_p->pamb_reso_title; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/pdf_file_resolution/').$row_p->research_reso_file ?></td>
                <td class="hide"><?php echo $row_p->research_reso_file; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_docs_research_permit/').$row_p->search_permit_attached ?></td>
                <td class="hide"><?php echo $row_p->search_permit_attached; ?></td>
                <td class="hide"><?php echo $row_p->id_program; ?></td>
                <td class="hide"><?php echo $row_p->research_code; ?></td>
                <td class="hide"><?php echo $row_p->research_reason; ?></td>
               <!--  <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/pdf_file_resolution/').$row_p->research_reso_file ?>"><?php echo $row_p->research_reso_file ?></a></td>
                <td class="hide"><?php echo $row_p->research_reso_file?></td> -->

                 <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/research_file_pamb_reso_report/').$row_p->research_pamb_reso ?>"><?php echo $row_p->research_pamb_reso ?></a></td>
                <td class="hide"><?php echo $row_p->research_pamb_reso?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_docs_research_permit/').$row_p->search_permit_attached ?>"><?php echo $row_p->search_permit_attached ?></a></td>
                <td class="hide"><?php echo $row_p->search_permit_attached?></td>
                <td class="hidden">
                <?php
                    foreach($data2 as $row):?>
                    <div id="divdevelopmentedit<?php echo $row->id_reference?>" class="showdata">
                        <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRefResearchsProgram" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
                        <fieldset>
                            <?php if($row->type_citation == 1):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.', '.$row->ref_date_month.') <i>'.$row->webtitleRef.'</i>. '.$row->websiteRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                              elseif($row->type_citation == 2):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.') <i>'.$row->worktitleRef.'</i>. '.$row->bookpublisherRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                              elseif($row->type_citation == 3):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.') '.$row->journaltitleRef.'<i>'.$row->periodicalRef.'</i>. <i>'.$row->journalVolRef.'</i>, '.$row->journalpagerangeRef.', <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                            endif; ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row_p->id_research;?>" class="btn btn-info btn-edit-proj" onclick="click_edit_research(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeResearchers" data-id="<?php echo $row_p->research_code; ?>" title="Remove">Remove</button>
                    <input type="hidden" data-ids="<?php echo $row_p->id_program; ?>" id="resid" value="<?php echo $row_p->id_program; ?>" />
                    <input type="hidden" id="progres1<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_month_from; ?>" />
                    <input type="hidden" id="progres2<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_year_from; ?>" />
                    <input type="hidden" id="progres3<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_month_to; ?>" />
                    <input type="hidden" id="progres4<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_year_to; ?>" />
                    <input type="hidden" id="chkprogres1<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_pamb_adopted; ?>" />
                    <input type="hidden" id="progres5<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->research_year_extend; ?>" />
                    <input type="hidden" id="progres6<?php echo $row_p->id_research ;?>" value="<?php echo $row_p->search_status; ?>" />
                </td>
            </tr>
            <?php
        }
    }


    public function deleteproj($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblmainprojects WHERE id_projects = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Programs removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteprgramactivity($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblmainprogram_activity WHERE id_program_activity  = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Programs removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchResearch(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllResearch($codegens);
        foreach($data as $row_p){
            $code2 = $row_p->research_code; ?>

            <tr id="<?php echo $row_p->id_research; ?>" class="trows">
                <td><?php echo $row_p->type_research; ?></td>
                <td>
                    <?php echo $row_p->research_purpose; ?>
                    <div style="float: right;">
                    <button type="button" value="<?php echo $row_p->id_research;?>" class="btn btn-info btn-xs btn-edit-research" onclick="edit_research(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeResearch" data-id="<?php echo $row_p->id_research; ?>" title="Remove">Remove</button>
                    </div>
                    <input type="hidden" id="resr1<?php echo $row_p->id_research;?>" value="<?php echo $row_p->id_research; ?>" />
                    <input type="hidden" id="resr2<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_month_from; ?>" />
                    <input type="hidden" id="resr3<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_year_from; ?>" />
                    <input type="hidden" id="resr4<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_month_to; ?>" />
                    <input type="hidden" id="resr5<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_year_to; ?>" />
                    <input type="hidden" id="resr6<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_year_extend; ?>" />
                    <input type="hidden" id="resr7<?php echo $row_p->id_research;?>" value="<?php echo $row_p->research_pamb_adopted; ?>" />
                    <input type="hidden" id="resr8<?php echo $row_p->id_research;?>" value="<?php echo $row_p->search_status; ?>" />
                </td>
                <td class="hidden"><?php echo $row_p->type_research; ?></td>
                <td class="hidden"><?php echo $row_p->research_purpose; ?></td>
                <td class="hidden"><?php echo $row_p->permit_no; ?></td>
                <td class="hidden"><?php echo $row_p->search_permit_attached; ?></td>
                <td class="hidden"><?php echo base_url('bmb_assets2/upload/tenure_docs_research_permit/').$row_p->search_permit_attached ?></td>
                <td class="hidden"><?php echo $row_p->funding_agency; ?></td>
                <td class="hidden"><?php echo $row_p->name_researcher; ?></td>
                <td class="hidden"><?php echo $row_p->institution; ?></td>
                <td class="hidden"><?php echo $row_p->research_year; ?></td>
                <td class="hidden"><?php echo $row_p->research_reso_file; ?></td>
                <td class="hidden"><?php echo base_url('bmb_assets2/upload/pdf_file_resolution/').$row_p->research_reso_file ?></td>
                <td class="hidden"><?php echo $row_p->pamb_reso_no; ?></td>
                <td class="hidden"><?php echo $row_p->pamb_reso_title; ?></td>
                <td class="hidden"><?php echo $row_p->generatedcode; ?></td>
                <td class="hidden"><?php echo $row_p->research_code; ?></td>
                <td class="hidden"><?php echo $row_p->search_status; ?></td>
                <td class="hidden"><?php echo $row_p->research_reason; ?></td>
                <td class="hidden"><?php echo $row_p->research_pamb_clearance; ?></td>
                <td class="hidden"><?php echo base_url('bmb_assets2/upload/research_pamb_clearance/').$row_p->research_pamb_clearance ?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/research_file_pamb_reso_report/').$row_p->research_pamb_reso ?>"><?php echo $row_p->research_pamb_reso ?></a></td>
                <td class="hide"><?php echo $row_p->research_pamb_reso?></td>
                <td class="hide">
                <?php
                    $data2 = $this->pamain_model->getAllResearchReference($code2);
                    foreach($data2 as $row):?>
                    <div id="divdevelopmentedit<?php echo $row->id_reference?>" class="showdata">
                        <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRefResearchs" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
                        <fieldset>
                            <?php if($row->type_citation == 1):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.', '.$row->ref_date_month.') <i>'.$row->webtitleRef.'</i>. '.$row->websiteRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                              elseif($row->type_citation == 2):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.') <i>'.$row->worktitleRef.'</i>. '.$row->bookpublisherRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                              elseif($row->type_citation == 3):
                                 echo $row->type_reference."<br>".
                                 $row->author.' ('.$row->ref_date_year.') '.$row->journaltitleRef.'<i>'.$row->periodicalRef.'</i>. <i>'.$row->journalVolRef.'</i>, '.$row->journalpagerangeRef.', <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                            endif; ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
            </tr>
            <?php
        }
    }

    public function fetchResearchEditrefresh(){
        $code2 = $this->input->post('codegens');
        $data2 = $this->pamain_model->getAllResearchReference($code2);
        foreach($data2 as $row):?>
        <div id="divdevelopmentedit<?php echo $row->id_reference?>" class="showdata">
            <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRefResearchs" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
            <fieldset>
                <?php if($row->type_citation == 1):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.', '.$row->ref_date_month.') <i>'.$row->webtitleRef.'</i>. '.$row->websiteRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                  elseif($row->type_citation == 2):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.') <i>'.$row->worktitleRef.'</i>. '.$row->bookpublisherRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                  elseif($row->type_citation == 3):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.') '.$row->journaltitleRef.'<i>'.$row->periodicalRef.'</i>. <i>'.$row->journalVolRef.'</i>, '.$row->journalpagerangeRef.', <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                endif; ?>
            </fieldset>
        </div>
        <?php endforeach;
    }

    public function fetchResearchEditrefreshProgram(){
        $codes = $this->input->post('codegens');
        $id = $this->input->post('id');
        $data2 = $this->pamain_model->getAllResearchReferenceProgram($codes,$id);
        foreach($data2 as $row):?>
        <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRefResearchsProgram" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
            <fieldset>
                <?php if($row->type_citation == 1):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.', '.$row->ref_date_month.') <i>'.$row->webtitleRef.'</i>. '.$row->websiteRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                  elseif($row->type_citation == 2):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.') <i>'.$row->worktitleRef.'</i>. '.$row->bookpublisherRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                  elseif($row->type_citation == 3):
                     echo $row->type_reference."<br>".
                     $row->author.' ('.$row->ref_date_year.') '.$row->journaltitleRef.'<i>'.$row->periodicalRef.'</i>. <i>'.$row->journalVolRef.'</i>, '.$row->journalpagerangeRef.', <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                endif; ?>
            </fieldset>
        <?php endforeach;
    }

    public function deleteResearchers($id = null)
    {

        $output = array();
         // $sql = "DELETE FROM tblmainresearch WHERE research_code = '$id'";
         $sql = "DELETE tblmainresearch,tblpareference
                FROM tblmainresearch
                LEFT JOIN tblpareference ON tblpareference.research_code = tblmainresearch.research_code
                WHERE tblmainresearch.research_code = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Programs removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_proj(){
        $gencode = $this->input->post("proj-gencode");
        if($this->session->userdata('email')){
            $progid = $this->input->post("proj-id");
            $progdetails = array('proj_name' => $this->input->post("edit-proj-name"),
                                 'proj_sector_id' => $this->input->post("edit-progprojsector"),
                                 'proj_list_id' => $this->input->post("edit-progprojsectorlist"),
                                 'proj_desc' => $this->input->post("edit-progproj_details"),
                                 'proj_start_implement_month' => $this->input->post("edit-proj_start_implement_month"),
                                 'proj_start_implement_year' => $this->input->post("edit-proj_start_implement_year"),
                                 'proj_end_implement_month' => $this->input->post("edit-proj_end_implement_month"),
                                 'proj_end_implement_year' => $this->input->post("edit-proj_end_implement_year"),
                                 'source_fund' => $this->input->post("edit-prog_source_fund2"),
                                 'proj_typefund' => $this->input->post('edit-prog_progtypeoffund',true),
                                 'proj_sourcetxt' => $this->input->post('edit-prog_progtextsource',true),
                                 'chk_cofinancing' => $this->input->post('edit-prog_chk_cofinancing',true)==null ? 0 : 1,
                                 'proj_typeofpayment' => $this->input->post('edit-prog_typeofpaymentcofinancing',true),
                                 'proj_currency' => $this->input->post('edit-prog_projcurrency',true),
                                 'proj_money' => str_replace(',','',$this->input->post('edit-prog_moneymonetarytext',true)),
                                 'proj_activitymonetary' => $this->input->post('edit-prog_activitymonetarytext',true),
                                 'proj_inkindmonetary' => $this->input->post('edit-prog_inkindmonetarytext',true),
                                 'proj_area' => str_replace(',','',$this->input->post("edit-proj-area")),
                                 'proj_location' => $this->input->post("edit-proj-location"),
                                 'proj_remarks' => $this->input->post("edit-proj-remarks"),
                                 'proj_proponent' => $this->input->post("edit-proponent-proj"),
                                 'proj_code' => $this->input->post("projects-proj_codesE"),
                                 'proj_status' => $this->input->post("edit-proj_status2"),
                                 'proj_partnership' => $this->input->post("edit-proj_partnerships2"),
                                 'proj_objectives' => $this->input->post("edit-proj_objectives2"),
                                 // 'proj_pamb_clearance' => (empty($this->input->post('edit-projectclearancefile_text'))?$this->input->post('edit-projectclearancefile_span'):$this->input->post('edit-projectclearancefile_text')),
                                 'proj_completion_report' => (empty($this->input->post('edit-progprojcompletionrepups_span'))?$this->input->post('edit-progprojcompletionrepups_old'):$this->input->post('edit-progprojcompletionrepups_span'))
                                );
            $this->pamain_model->update_proj2($progdetails,$progid);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_projNonProgram(){
        $gencode = $this->input->post("proj-gencode1");
        if($this->session->userdata('email')){
            $progid = $this->input->post("proj-id1");
            $progdetails = array('proj_name' => $this->input->post("edit-proj-name1"),
                                 'proj_sector_id' => $this->input->post("edit-projsector"),
                                 'proj_list_id' => $this->input->post("edit-projsectorlist"),
                                 'proj_desc' => $this->input->post("edit-proj_details"),
                                 'proj_start_implement_month' => $this->input->post("edit-proj_start_implement_month1"),
                                 'proj_start_implement_year' => $this->input->post("edit-proj_start_implement_year1"),
                                 'proj_end_implement_month' => $this->input->post("edit-proj_end_implement_month1"),
                                 'proj_end_implement_year' => $this->input->post("edit-proj_end_implement_year1"),
                                 'source_fund' => $this->input->post("edit-source_fund22e1"),
                                 'proj_typefund' => $this->input->post("edit-progtypeoffund"),
                                 'proj_sourcetxt' => $this->input->post("edit-textsourceproj"),
                                 'chk_cofinancing' => $this->input->post('edit-chk_cofinancing',true)==null ? 0 : 1,
                                 'proj_typeofpayment' => $this->input->post("edit-typeofpaymentcofinancing"),
                                 'proj_currency' => $this->input->post("edit-projcurrency"),
                                 'proj_money' => $this->input->post("edit-moneymonetarytext"),
                                 'proj_activitymonetary' => $this->input->post("edit-activitymonetarytext"),
                                 'proj_inkindmonetary' => $this->input->post("edit-inkindmonetarytext"),
                                 'proj_area' => str_replace(',','',$this->input->post("edit-proj-area1")),
                                 'proj_location' => $this->input->post("edit-proj-location1"),
                                 'proj_remarks' => $this->input->post("edit-proj-remarks1"),
                                 'proj_proponent' => $this->input->post("edit-proponent-proj1"),
                                 'proj_status' => $this->input->post("edit-proj_status"),
                                 'proj_partnership' => $this->input->post("edit-proj_partnerships"),
                                 'proj_objectives' => $this->input->post("edit-proj_objectives"),
                                 'proj_pamb_clearance' => (empty($this->input->post('edit-projectclearancefile_text'))?$this->input->post('edit-projectclearancefile_span'):$this->input->post('edit-projectclearancefile_text')),
                                 'proj_completion_report' => (empty($this->input->post('edit-edit-projreport_file'))?$this->input->post('edit-projreport_file_old'):$this->input->post('edit-edit-projreport_file'))
                                );
            $this->pamain_model->update_proj2($progdetails,$progid);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_biological_faunaflora(){
        $gencode = $this->input->post("ffb-gencode");
        if($this->session->userdata('email')){
            $ids = $this->input->post("ffb-id");
            $details = array('chk_forest' => $this->input->post("edit-chk_forest")==null ? 0 : 1,
                             'chk_inland' => $this->input->post("edit-chk_inland")==null ? 0 : 1,
                             'chk_cave' => $this->input->post("edit-chk_cave")==null ? 0 : 1,
                             'chk_coral' => $this->input->post("edit-chk_coral")==null ? 0 : 1,
                             'chk_seagrass' => $this->input->post("edit-chk_seagrass")==null ? 0 : 1,
                             'chk_mangrove' => $this->input->post("edit-chk_mangrove")==null ? 0 : 1,
                             'chk_mudflats' => $this->input->post('edit-chk_tidal')==null ? 0 : 1,
                             'chk_coastalwetland' => $this->input->post('edit-chk_coastalwetland')==null ? 0 : 1,
                             'chk_grassland' => $this->input->post('edit-chk_grassland')==null ? 0 : 1,
                             'localname' => $this->input->post("edit-locanamespecies"),
                             'estimate_population' => $this->input->post("edit-populationcount"),
                             'photo_references' => $this->input->post("edit-reference_photo_ff"));
            $this->pamain_model->update_biological($details,$ids);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function deleteResearch($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblmainresearch WHERE id_research = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Research removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function save_tribe(){

            $rel_data = $this->input->post('tableTribe');
            $status=$this->pamain_model->save_tribes($rel_data);

            $this->output->set_content_type('application/json');
            echo json_encode(array('status' => $status));
    }

    public function fetchTribe(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAlltribe($codegens);
        foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->tribe_housetag; ?></td>
                <td><?php echo $row->month." ".$row->tribe_day.", ".$row->tribe_year ?></td>
                <td><?php echo $row->tribe_name; ?></td>
                <td><?php echo $row->tribe_fname." ".$row->tribe_mname." ".$row->tribe_lname; ?></td>
                <td><?php echo $row->reladesc; ?></td>
                <td><?php echo $row->sexdesc; ?></td>
                <!-- <td><?php echo $row->tribe_marital; ?></td> -->
                <td><button type="button" class="btn btn-danger btn-flat removetribe" data-id="<?php echo $row->id_tribemember ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deletetribe($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblsrpaoRegister WHERE id_tribemember = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Project Name Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function image_upload_save()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['picture2']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/map_image';
            $config['file_name'] = $_FILES['picture2']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('picture2')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_image') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'id_image'          => $this->input->post('id_image',true),
            'generatedcode '    => $this->input->post('gencode',true),
            'remarks'           =>  $this->input->post('remarks_image',true),
            'filename'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_image'])){
                $query = $this->pamain_model->createImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function img_map_others()
    {
        if($_FILES["edit-pic_map"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/map_image';
         $config["allowed_types"] = 'gif|jpg|png|jpeg';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-pic_map"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-pic_map"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-pic_map"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-pic_map"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-pic_map"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-pic_map"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/map_image/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/map_image/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function fetchImage(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImage($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_image; ?>" class="trow">
                <td class="hide"><?php echo '<img src="'.base_url('bmb_assets2/upload/map_image/').(!empty($row->filename)?$row->filename:"nophoto.jpg").'" style="max-height: 600px; max-width: 600px; width: 600px; height: 600px"></img>'; ?></td>
                <td class="hide"><?php echo $row->remarks; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/map_image/').(!empty($row->filename)?$row->filename:"nophoto.jpg") ?></td>
                <td class="hide"><?php echo $row->filename ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/map_shpfile/').$row->map_shpfile ?>"><?php echo $row->map_shpfile ?></a>
                    </td>
                <td class="hide"><?php echo $row->map_shpfile; ?></td>
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/map_image/').(!empty($row->filename)?$row->filename:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?><br>
                    <?php echo "<b>Remarks : </b>".$row->remarks; ?><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/map_shpfile/').$row->map_shpfile ?>"><?php echo $row->map_shpfile ?></a><br>
                     <button type="button" value="<?php echo $row->id_image;?>" class="btn btnbtn btn-info btn-xs" onclick="editmap(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimage" data-id="<?php echo $row->id_image ?>" title="Remove">Remove</button><br>
                </td>
            <input type="hidden" id="ct<?php echo $row->id_image ?>" value="<?php echo $row->generatedcode ?>" />
            </tr>
            <?php
        }
    }

        public function deleteimages($id = null)
        {
            $sql1 = $this->db->where('id_image',$id)
                                            ->get('tblpamainimageupload')
                                            ->row();
            // unlink('bmb_assets2/upload/map_image/'.$sql1->filename);
            if ($sql1->filename == "nophoto.jpg" || empty($sql1->filename)) {

            }elseif (!empty($sql1->filename)) {
                unlink('bmb_assets2/upload/map_image/'.$sql1->filename);
            }

            $sql = "DELETE FROM tblpamainimageupload WHERE id_image = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Image successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function image_topo()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_topo']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/topology_img';
            $config['file_name'] = $_FILES['img_topo']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_topo')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_topo') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('gencode',true),
            'topo_desc'           =>  $this->input->post('topo',true),
            'topo_map'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_topo'])){
                $query = $this->pamain_model->createtopoImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageTopo(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageTopo($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_topology_desc; ?>" class="trow">
                <td class="hide" style="text-align: justify;"><?php echo $row->topology_desc; ?></td>
                <td class="hide"></td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/topology_shpfile/').$row->topo_shpfile ?>"><?php echo $row->topo_shpfile ?></a></td>
                <td class="hide"><?php echo $row->topo_shpfile; ?></td>
                <td style="text-align: justify;">
                    <?php echo $row->topology_desc; ?><br>
                    <label>Shapefile : </label> <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/topology_shpfile/').(!empty($row->topo_shpfile)?$row->topo_shpfile:"") ?>"><?php echo !empty($row->topo_shpfile)?$row->topo_shpfile:"" ?></a>
                    <br><hr><button type="button" value="<?php echo $row->id_topology_desc;?>" class="btn btnbtn btn-info btn-xs" onclick="edittopo(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageTopo" data-id="<?php echo $row->id_topology_desc ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="ct<?php echo $row->id_topology_desc ?>" value="<?php echo $row->generatedcode ?>" />

            </tr>
            <?php
        }
    }

    public function TopologyShpFileEdit()
    {
        if(isset($_FILES["edit-shp_topo"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/topology_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_topo'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function deletetopo($id = null)
        {

            $sql = "DELETE FROM tblpatopology_description WHERE id_topology_desc = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletetopoMap($id = null)
        {
            $sql1 = $this->db->where('id_topo',$id)
                                            ->get('tblpatopology')
                                            ->row();
            if ($sql1->topo_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/topology_img/'.$sql1->topo_map);
            }else{

            }

            $sql = "DELETE FROM tblpatopology WHERE id_topo = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletemngtzone($id = null)
        {
            $sql1 = $this->db->where('id_management',$id)
                                            ->get('tblpamanagementzone')
                                            ->row();
            if ($sql1->managementzone_image != "nophoto.jpg") {
                unlink('bmb_assets2/upload/managementzone_img/'.$sql1->managementzone_image);
            }else{

            }

            $sql = "DELETE FROM tblpamanagementzone WHERE id_management = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchincome(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallIncome($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->date_month." ".$row->date_year; ?></td>
                <td><?php echo "Male : ".$row->localmale."<br>Female : ".$row->localfemale."<br> Total : ".$row->total_local; ?></td>
                <td><?php echo "Male : ".$row->foreignmale."<br>Female : ".$row->foreignfemale."<br> Total : ".$row->total_foreign; ?></td>
                <td><?php echo "Entrance Fee : ".number_format($row->entrance,2)."<br>Parking Fee : ".number_format($row->parkingfee,2)."<br> Rentals Fee : ".number_format($row->rentalsfee,2)."<br> Others Fee : ".number_format($row->others,2); ?></td>
                <td><?php echo "Sub-IPAF : ".number_format($row->total_sub,2)."<br> Central IPAF : ".number_format($row->total_central,2)."<br><h4> GRAND TOTAL : ".number_format($row->grand_total,2); ?></td>
                <td><button type="button" class="btn btn-danger btn-flat removefee" data-id="<?php echo $row->id_rate ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }


    public function image_soil()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_soil']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/soil_img';
            $config['file_name'] = $_FILES['img_soil']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_soil')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_geology') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'soil_type'         =>  $this->input->post('soil_type',true),
            'rock_formation'    =>  $this->input->post('rock',true),
            'geology_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_geology'])){
                $query = $this->pamain_model->createsoilImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageSoilDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageSoilDetails($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_geology; ?>" class="trow">
                <td class="hide"><?php echo $row->geology_desc; ?></td>
                <td style="text-align: justify;">
                    <?php echo $row->geology_desc; ?><br>
                    <label>Shapefile : </label> <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/soil_shpfile/').(!empty($row->soil_shpfile)?$row->soil_shpfile:"") ?>"><?php echo !empty($row->soil_shpfile)?$row->soil_shpfile:"" ?></a><br>
                    <button type="button" value="<?php echo $row->id_geology;?>" class="btn btnbtn btn-info btn-xs" onclick="editsoil(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageSoil" data-id="<?php echo $row->id_geology ?>" title="Remove">Remove</button>
                </td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/soil_shpfile/').$row->soil_shpfile ?>"><?php echo $row->soil_shpfile ?></a></td>
                <td class="hide"><?php echo $row->soil_shpfile; ?></td>
            <input type="hidden" id="ct<?php echo $row->id_geology ?>" value="<?php echo $row->generatedcode ?>" />

            </tr>
            <?php
        }
    }

    public function fetchImageSoil(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageSoil($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/soil_img/'.$row->geology_map.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/soil_img/'.$row->geology_map.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_geologyimage" class="hidden" value="'.$row->id_geology.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagesoilimage" data-id="'.$row->id_geology.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function deletesoil($id = null)
        {
            $sql = "DELETE FROM tblpageology_details WHERE id_geology = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

     public function deletesoil2($id = null)
        {
            $sql1 = $this->db->where('id_geology',$id)
                                            ->get('tblpageology')
                                            ->row();
            if ($sql1->geology_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/soil_img/'.$sql1->geology_map);
            }else{

            }

            $sql = "DELETE FROM tblpageology WHERE id_geology = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchImageRock(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageRock($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/rock_img/'.$row->rock_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/rock_img/'.$row->rock_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_rockimage" class="hidden" value="'.$row->id_rock.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagerockimage" data-id="'.$row->id_rock.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function fetchImageRockDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageRockDetails($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_rock; ?>" class="trow">
                <td class="hide"><?php echo $row->rock_details; ?></td>
                <td style="text-align: justify;">
                    <?php echo $row->rock_details; ?><br>
                    <label>Shapefile : </label> <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/rock_shpfile/').(!empty($row->rock_shpfile)?$row->rock_shpfile:"") ?>"><?php echo !empty($row->rock_shpfile)?$row->rock_shpfile:"" ?></a><br>
                    <button type="button" value="<?php echo $row->id_rock;?>" class="btn btnbtn btn-info btn-xs" onclick="editrock(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageRock" data-id="<?php echo $row->id_rock ?>" title="Remove">Remove</button>
                </td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/rock_shpfile/').$row->rock_shpfile ?>"><?php echo $row->rock_shpfile ?></a></td>
                <td class="hide"><?php echo $row->rock_shpfile; ?></td>
            <input type="hidden" id="rt<?php echo $row->id_rock ?>" value="<?php echo $row->generatedcode ?>" />

            </tr>
            <?php
        }
    }

    public function deleterock2($id = null)
        {
            $sql1 = $this->db->where('id_rock',$id)
                                            ->get('tblparock')
                                            ->row();
            if ($sql1->rock_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/rock_img/'.$sql1->rock_img);
            }else{

            }

            $sql = "DELETE FROM tblparock WHERE id_rock = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function deleterock($id = null)
        {

            $sql = "DELETE FROM tblparock_details WHERE id_rock = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function image_climate()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_climate']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/climate_img';
            $config['file_name'] = $_FILES['img_climate']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_climate')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_climate') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'climate_desc'      =>  $this->input->post('climate',true),
            'climate_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_climate'])){
                $query = $this->pamain_model->createclimateImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageClimateDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageClimateDetails($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_climate; ?>" class="trow">
                <td class="hide"><?php echo $row->climates_type; ?></td>
                <td class="hide"><?php echo $row->climate_desc; ?></td>
                <td style="text-align: justify;">
                    <?php echo "Climate type : ".$row->climates_type."<br> Discription : ".$row->climate_desc."<br>"; ?>
                    <button type="button" value="<?php echo $row->id_climate;?>" class="btn btnbtn btn-info btn-xs btn-edit-topo" onclick="editclimate(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs btn-flat removeimageClimate" data-id="<?php echo $row->id_climate ?>" title="Remove">Remove</button>
                </td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <input type="hidden" id="rt<?php echo $row->id_climate ?>" value="<?php echo $row->generatedcode ?>" />
                <input type="hidden" id="rtcls<?php echo $row->id_climate ?>" value="<?php echo $row->climate_type ?>" />
            </tr>
            <?php
        }
    }

    public function fetchImageClimate(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageClimate($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/climate_img/'.$row->climate_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/climate_img/'.$row->climate_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_climateimage" class="hidden" value="'.$row->id_climate.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimageclimateimage" data-id="'.$row->id_climate.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deleteclimate($id = null)
        {
            $sql = "DELETE FROM tblpaclimate_details WHERE id_climate = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deleteclimate2($id = null)
        {
            $sql1 = $this->db->where('id_climate',$id)
                                            ->get('tblpaclimate')
                                            ->row();
            if ($sql1->climate_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/climate_img/'.$sql1->climate_img);
            }else{

            }

            $sql = "DELETE FROM tblpaclimate WHERE id_climate = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function fetchImageHydrology(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageHydrology($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/hydrology_img/'.$row->hydro_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/hydrology_img/'.$row->hydro_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_hydroimage" class="hidden" value="'.$row->id_hydrology.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagehydroimage" data-id="'.$row->id_hydrology.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function fetchImageHydrologyDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageHydrologyDetails($codegens);
        foreach($data as $row){
            $code2 = $row->hydro_code;
            $data2 = $this->pamain_model->getAllImageHydrologyWaterParam($code2);
            $data3 = $this->pamain_model->getAllImageHydrologyWaterParam_break($code2);
            $details_s ="";
            foreach($data2 as $row2):
                // $details_s = $row2->hydrodet."<br>";
            endforeach;
            ?>
             <tr id="<?php echo $row->id_hydrology; ?>" class="trow">
                <td class="hidden"><?php echo $row->hydro_desc; ?></td>
                <td class="hidden"><?php echo $row->date_updated; ?></td>
                <td class="hidden"><?php echo $row->date_created; ?></td>
                <td class="hidden"><?php echo $row->hydro_class; ?></td>
                <td class="hidden"><?php echo $row->hydroSub_class; ?></td>
                <td class="hidden"><?php echo $row->riverinflow; ?></td>
                <td class="hidden"><?php echo $row->riveroutflow; ?></td>
                <td class="hidden"><?php echo $row->hydro_map_img; ?></td>
                <td class="hidden"><?php echo $row->hydro_shp_file; ?></td>
                <td class="hide"><?php echo '<img src="../../../bmb_assets2/upload/hydro_map_img/'.(!empty($row->hydro_map_img)?$row->hydro_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_shp_file/').$row->hydro_shp_file ?>"><?php echo $row->hydro_shp_file ?></a></td>
                <?php if (!empty($row->hydro_shp_file)): ?>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_shp_file/').$row->hydro_shp_file ?>"><?php echo $row->hydro_shp_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->hydro_shp_file; ?></td>
                <?php else: ?>
                    <td class="hide"></td>
                    <td class="hide"><?php echo $row->hydro_shp_file; ?></td>
                <?php endif ?>
                <td class="hidden"><?php echo $row->hydro_code; ?></td>
                <td class="hidden">
                    <?php $pctr=0;foreach($data3 as $cc):$pctr+=1;
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_hydrology_para?>" class="showdata">
                    <button type="button" class="btn btn-danger removeEditHydroParameters" id="<?php echo $cc->id_hydrology_para ?>" data-id="<?php echo $cc->id_hydrology_para ?>" style="position: absolute;right: 25px">X</button>
                    <fieldset>
                        <div class="col-xs-12">
                            <?php echo '<img src="../../../bmb_assets2/upload/hydro_monitoring_station_map/'.(!empty($cc->monitoring_map)?$cc->monitoring_map:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?>
                        </div>
                        <div class="col-xs-12">
                            <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_monitoring_station_shp/').$cc->monitoring_shpfile ?>"><?php echo $cc->monitoring_shpfile ?></a>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Sub Water Classification : </div>
                            <div class="col-xs-8 col-lg-8"><?php echo $cc->waterClass; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Date water monitoring assessment : </div>
                            <div class="col-xs-8 col-lg-8"><?php echo (!empty($cc->hydro_dateM_assessed)?$cc->hydro_dateM_assessed." ":"").(!empty($cc->hydro_dateD_assessed)?$cc->hydro_dateD_assessed.", ":"").(!empty($cc->hydro_date_assessed)?$cc->hydro_date_assessed:""); ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Parameter : </div>
                            <div class="col-xs-8 col-lg-8"><?php echo $cc->hydro_parameter; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Status : </div>
                            <div class="col-xs-8 col-lg-8"><?php echo $cc->status_waterquality; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Monitoring Report : </div>
                            <div class="col-xs-8 col-lg-8"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_water_monitoring_report/').$cc->monitoring_file ?>"><?php echo $cc->monitoring_file ?></a></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-8 col-lg-8"><?php echo $cc->monitoring_remarks; ?></div>
                        </div>                        
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden"><?php echo $row->date_assessed; ?></td>
                <td class="hidden"><?php echo $row->generatedcode; ?></td>

                <td style="text-align: left">
                    <?php echo '<br><img src="../../../bmb_assets2/upload/hydro_map_img/'.(!empty($row->hydro_map_img)?$row->hydro_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>Shapefile : </b>'.'<a href="'.base_url().'bmb_assets2/upload/hydro_shp_file/'.$row->hydro_shp_file.'">'.$row->hydro_shp_file.'</a><br>'.'<b>Water Classification :</b>'.$row->id_waterClassDesc."<br>" ?>
                    <?php
                        echo "<fieldset>".
                                        "<legend>Water Quality</legend>";
                        if($row->hydro_class == 1)
                        {
                            echo '<br><b>Sub Water Classification : </b>'.$row->waterClass.'<br><b>River-inflow : </b>'.$row->riverinflow.'</br><b>River-outflow : </b>'.$row->riveroutflow.'<br><b>Description : </b>'.$row->hydro_desc.'<br>';
                        }else if($row->hydro_class == 2)
                        {
                                // echo $details_s;
                            foreach($data2 as $row2):
                                echo 
                                    
                                        '<img src="../../../bmb_assets2/upload/hydro_monitoring_station_map/'.(!empty($row2->monitoring_map)?$row2->monitoring_map:"nophoto.jpg").'" style="max-height: 10%; max-width: 10%; width: 10%; height: 10%"></img><br>'.
                                        "<b>Shapefile : </b>"."<i class='cap-icon ci-paperclip'></i><a target='_blank' href=".base_url('bmb_assets2/upload/hydro_monitoring_station_shp/').$cc->monitoring_shpfile.">".$cc->monitoring_shpfile."</a><br>".
                                        "<b>Sub water classification : </b>".$row2->waterClass."<br>".
                                        "<b>Parameters of water quality : </b>".$row2->hydro_parameter."<br>".
                                        "<b>Status : </b>".$row2->status_waterquality."<br>".
                                        "<fieldset>".
                                        "<legend>Monitoring Report</legend>".
                                            "<b>Date of water monitoring assessment : </b>".(!empty($cc->hydro_dateM_assessed)?$cc->hydro_dateM_assessed." ":"").(!empty($cc->hydro_dateD_assessed)?$cc->hydro_dateD_assessed.", ":"").(!empty($cc->hydro_date_assessed)?$cc->hydro_date_assessed:"")."<br>".
                                            "<b>Monitoring Report file : </b><i class='cap-icon ci-paperclip'></i><a target='_blank' href=".base_url('bmb_assets2/upload/hydro_water_monitoring_report/').$cc->monitoring_file.">".$cc->monitoring_file."</a>"."</fieldset><hr>";
                            endforeach;

                        }
                        echo   "</fieldset>";
                    ?>
                    <?php echo "<b>Year Assessed : </b>".$row->date_assessed."<br>" ?>
                    <button type="button" value="<?php echo $row->id_hydrology;?>" class="btn btnbtn btn-info btn-xs" onclick="edithydro(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageHydro" data-id="<?php echo $row->id_hydrology ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="ct<?php echo $row->id_hydrology ?>" value="<?php echo $row->id_hydrology ?>" />
                <input type="hidden" id="trsw<?php echo $row->id_hydrology;?>" value="<?php echo $row->hydroSub_class ?>" />
                <input type="hidden" id="tryHydro<?php echo $row->id_hydrology;?>" value="<?php echo $row->hydro_class ?>" />
            </tr>
            <?php
        }
    }

    public function deletehydro($id = null)
        {
            $sql = "DELETE FROM tblpahydrology_details WHERE id_hydrology = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletehydro2($id = null)
        {
            $sql1 = $this->db->where('id_hydrology',$id)
                                            ->get('tblpahydrology')
                                            ->row();
            if ($sql1->hydro_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/hydrology_img/'.$sql1->hydro_img);
            }else{

            }

            $sql = "DELETE FROM tblpahydrology WHERE id_hydrology = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function addhydroparametersE()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('hydro-gencodes',true),
            'hydro_code'    => $this->input->post('hydro-gencode2',true),
            'hydro_parawclass_id'    => $this->input->post('edit-waterclass',true),
            'hydro_parasubwclass_id'    => $this->input->post('edit-waterclasssubid',true),
            'hydro_parameter'    => $this->input->post('edit-parameterwater',true),
            'hydro_date_assessed'    => $this->input->post('edit-hydro_monitoring_Y',true),
            'hydro_para_status'      => $this->input->post('edit-waterqualitystatus'),
            'monitoring_file'      => $this->input->post('edit-waterquality_span'),
            'monitoring_remarks'      => $this->input->post('edit-hydro_monitoring_remarks'),
            'hydro_dateM_assessed'      => $this->input->post('edit-hydro_monitoring_M'),
            'hydro_dateD_assessed'      => $this->input->post('edit-hydro_monitoring_D'),
            'monitoring_shpfile'      => $this->input->post('edit-shp_monitoring_site_text'),
            'monitoring_map'      => $this->input->post('edit-old_picturemonitoringsite')];

        $query = $this->pamain_model->inserthydroprameterss($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added hydrology water quality parameter';
                }
        echo json_encode($output);
    }

    public function refreshHydroparametersEdit()
    {
        $code2 = $this->input->post('codegens');
        $data3 = $this->pamain_model->getAllImageHydrologyWaterParam_break($code2);
        $pctr=0;foreach($data3 as $cc):$pctr+=1; ?>
            <div id="divdevelopmentedit<?php echo $cc->id_hydrology_para?>" class="showdata">
            <button type="button" class="btn btn-danger removeEditHydroParameters" id="<?php echo $cc->id_hydrology_para ?>" data-id="<?php echo $cc->id_hydrology_para ?>" style="position: absolute;right: 25px">Remove</button>
            <fieldset>
                <div class="col-xs-12">
                    <?php echo '<img src="../../../bmb_assets2/upload/hydro_monitoring_station_map/'.(!empty($cc->monitoring_map)?$cc->monitoring_map:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?>
                </div>
                <div class="col-xs-12">
                    <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_monitoring_station_shp/').$cc->monitoring_shpfile ?>"><?php echo $cc->monitoring_shpfile ?></a>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Sub Water Classification : </div>
                    <div class="col-xs-8 col-lg-8"><?php echo $cc->waterClass; ?></div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Date water monitoring assessment : </div>
                    <div class="col-xs-8 col-lg-8"><?php echo (!empty($cc->hydro_dateM_assessed)?$cc->hydro_dateM_assessed." ":"").(!empty($cc->hydro_dateD_assessed)?$cc->hydro_dateD_assessed.", ":"").(!empty($cc->hydro_date_assessed)?$cc->hydro_date_assessed:""); ?></div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Parameter : </div>
                    <div class="col-xs-8 col-lg-8"><?php echo $cc->hydro_parameter; ?></div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Status : </div>
                    <div class="col-xs-8 col-lg-8"><?php echo $cc->status_waterquality; ?></div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Monitoring Report : </div>
                    <div class="col-xs-8 col-lg-8"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/hydro_water_monitoring_report/').$cc->monitoring_file ?>"><?php echo $cc->monitoring_file ?></a></div>
                </div>
                <div class="col-xs-12">
                    <div class="col-xs-4 col-lg-4">Remarks : </div>
                    <div class="col-xs-8 col-lg-8"><?php echo $cc->monitoring_remarks; ?></div>
                </div>                        
            </fieldset>
            </div>
        <?php endforeach;
    }

    public function fetchImagelanduse(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagelanduse($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/existinglanduse_img/'.$row->landuse_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/existinglanduse_img/'.$row->landuse_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_landuseimage" class="hidden" value="'.$row->id_landuse.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagelanduseimage" data-id="'.$row->id_landuse.'" title="Remove">Remove</button>
           </div>';
        }
        echo $output;
    }

    public function deleteHydropParam($id = null)
    {
    $sql = "DELETE FROM tblpahydrology_para_details WHERE id_hydrology_para = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function fetchImagelanduseDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImagelanduseDetails($codegens);
        $dataTotal = $this->pamain_model->getAllImagelanduseDetailsTotal($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_landuse; ?>" class="trow">
                <td class="hidden"><?php echo $row->landuse_desc; ?></td>
                <td class="hidden"><?php echo $row->landuse_area; ?></td>
                <td class="hidden"><?php echo $row->remarks; ?></td>
                <td class="hidden"><?php echo $row->date_updated; ?></td>
                <td class="hidden"><?php echo $row->date_created; ?></td>
                <td><?php echo $row->landuses_desc." ".(!empty($row->landuse_sub)?$row->landuses_sub_desc:""); ?></td>
                <td><?php echo $row->landuse_area; ?></td>
                <td><?php echo $row->remarks; ?></td>
                <td class="hidden"><?php echo $row->landuse_type; ?></td>
                <td class=""><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/existinglanduse_shpfile/').$row->landuse_shpfile ?>"><?php echo $row->landuse_shpfile ?></a>
                </td>
                <td class="hide"><?php echo $row->landuse_shpfile; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_landuse;?>" class="btn btnbtn btn-info btn-xs" onclick="editLAnds(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageLand" data-id="<?php echo $row->id_landuse ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="ct<?php echo $row->id_landuse ?>" value="<?php echo $row->generatedcode ?>" />
                <input type="hidden" id="ctluc<?php echo $row->id_landuse ?>" value="<?php echo $row->landuse_type ?>" />
                <input type="hidden" id="ctlucz<?php echo $row->id_landuse ?>" value="<?php echo $row->landuse_sub ?>" />
            </tr>
            <?php } ?>
            <?php foreach($dataTotal as $total){ ?>
            <tr style="background-color: green;color: white">
                <td>GRAND TOTAL(has)</td>
                <td colspan="4" style="text-align: left"><?php echo $total->total_area; ?></td>
            </tr>
            <?php } ?>
            <?php
    }

    public function deletelanduse2($id = null)
        {
            $sql1 = $this->db->where('id_landuse',$id)
                                            ->get('tblpalanduse')
                                            ->row();
            if ($sql1->landuse_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/existinglanduse_img/'.$sql1->landuse_img);
            }else{

            }

            $sql = "DELETE FROM tblpalanduse WHERE id_landuse = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

     public function deletewatershed($id = null)
        {
            $sql1 = $this->db->where('id_watershed ',$id)
                                            ->get('tblpamainwatershed')
                                            ->row();
            if ($sql1->watershedmap_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/watershed/'.$sql1->watershedmap_img);
            }else{

            }

            $sql = "DELETE FROM tblpamainwatershed WHERE id_watershed = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchWatershed(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getalldatawatershed($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_watershed; ?>" class="trow">
                <td class="hidden"><?php echo $row->riverbasin_name; ?></td>
                <td class="hidden"><?php echo $row->watershed_name; ?></td>
                <td class="hidden"><?php echo $row->subwatershed_name; ?></td>
                <td class="hidden"><?php echo $row->watershedmap_img; ?></td>
                <td class="hidden"><?php echo $row->date_created; ?></td>
                <td class="hidden"><?php echo $row->date_update; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/watershed/'.$row->watershedmap_img ?></td>
                <td style="text-align: left">

                    <?php echo '<img src="../../../bmb_assets2/upload/watershed/'.(!empty($row->watershedmap_img)?$row->watershedmap_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>River Basin Name : </b>'.$row->riverbasin_names.'<br><b>Watershed Name : </b>'.$row->watershed_names.'<br><b>Sub-Watershed Name : </b>'.$row->subwatershed_name; ?><br>
                    <b>Shapefile : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/watershed_shpfile/').$row->watershedmap_shpfile ?>"><?php echo $row->watershedmap_shpfile ?></a><br>
                    <button type="button" value="<?php echo $row->id_watershed;?>" class="btn btnbtn btn-info btn-xs" onclick="editWatershed(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagewatershed" data-id="<?php echo $row->id_watershed ?>" title="Remove">Remove</button><hr>
                </td>
                <td class="hidden"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/watershed_shpfile/').$row->watershedmap_shpfile ?>"><?php echo $row->watershedmap_shpfile ?></a>
                </td>
                <td class="hide"><?php echo $row->watershedmap_shpfile; ?></td>
                <input type="hidden" id="wtr1<?php echo $row->id_watershed ?>" value="<?php echo $row->riverbasin_name ?>" />
                <input type="hidden" id="wtr2<?php echo $row->id_watershed ?>" value="<?php echo $row->watershed_name ?>" />

            </tr>
            <?php }
    }

    public function subwatershedsEdit()
        {
       $subcat = $this->input->post('subcat');
            if (!empty($subcat)) {
            $query = $this->db->select('*')
                ->from('tblriverbasin__watershed')
                ->where('riverbasin_id',$subcat)
                ->get();
            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_watersheds\">$apt->watershed_names</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No item available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function fetchImagevegetative()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagevegetatives($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/vegetative_img/'.(!empty($row->vegetative_img)?$row->vegetative_img:"nophoto.jpg").'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/vegetative_img/'.(!empty($row->vegetative_img)?$row->vegetative_img:"nophoto.jpg").'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_vegetativeimage" class="hidden" value="'.$row->id_vegetative.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagevegeimage" data-id="'.$row->id_vegetative.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletevegetative2($id = null)
        {
            $sql = "DELETE FROM tblpavegetative WHERE id_vegetative = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deletewdpalocs($id = null)
        {
            $sql = "DELETE FROM tblpawdpa_location WHERE id_wdpa_loc = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchImagevegetativeDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImagevegetativeDetails($codegens);
        $dataTotal = $this->pamain_model->getAllImagevegetativeDetailsTotal($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_vegetative; ?>" class="trow">
                <td><?php echo $row->landcover_class; ?></td>
                <td><?php echo number_format($row->vegetative_area,3); ?></td>
                <td class="hidden"><?php echo $row->vremarks; ?></td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td><?php echo $row->vremarks; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_vegetative;?>" class="btn btnbtn btn-info btn-xs" onclick="editvegetative(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagevegetative1" data-id="<?php echo $row->id_vegetative ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="ct<?php echo $row->id_vegetative ?>" value="<?php echo $row->generatedcode ?>" />
                <input type="hidden" id="ctlanduse<?php echo $row->id_vegetative ?>" value="<?php echo $row->vegetative_desc ?>" />
            </tr>
            <?php } ?>
            <?php foreach($dataTotal as $total){ ?>
            <tr style="background-color: green;color: white">
                <td>GRAND TOTAL(has)</td>
                <td colspan="3" style="text-align: left"><?php echo number_format($total->total_area,3); ?></td>
            </tr>
            <?php } ?>
            <?php
    }

    public function fetchImagefire(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImagefire($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_fire; ?>" class="trow">
                <td><?php echo '<img src="../../../bmb_assets2/upload/fire_img/'.$row->fire_img.'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.$row->fire_desc.'<br>'; ?>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/faultsurge_shpfile/').$row->faultline_shpfile ?>"><?php echo $row->faultline_shpfile ?></a><br>
                    <button type="button" value="<?php echo $row->id_fire;?>" class="btn btnbtn btn-info btn-xs" onclick="editfire(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagefire" data-id="<?php echo $row->id_fire ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->fire_desc; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/fire_img/'.$row->fire_img ?></td>
                <td class="hide"><?php echo $row->fire_img ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/faultsurge_shpfile/').$row->faultline_shpfile ?>"><?php echo $row->faultline_shpfile ?></a></td>
                <td class="hide"><?php echo $row->faultline_shpfile; ?></td>
            </tr>
            <input type="hidden" id="ct<?php echo $row->id_fire ?>" value="<?php echo $row->generatedcode ?>" />
            <?php
        }
    }

    public function deletefire($id = null)
        {
            $sql1 = $this->db->where('id_fire',$id)
                                            ->get('tblpahazardfire')
                                            ->row();
            if ($sql1->fire_img == "nophoto.jpg") {

            }elseif(!empty($sql1->fire_img)) {
                unlink('bmb_assets2/upload/fire_img/'.$sql1->fire_img);
            }

            $sql = "DELETE FROM tblpahazardfire WHERE id_fire = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deletevegetative($id = null)
        {

            $sql = "DELETE FROM tblpavegetative_details WHERE id_vegetative = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deleteland($id = null)
        {
            $sql = "DELETE FROM tblpalanduse_details WHERE id_landuse = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function image_landslide()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_landslide']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/landslide_img';
            $config['file_name'] = $_FILES['img_landslide']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_landslide')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_landslide') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'landslide_desc'      =>  $this->input->post('landslide',true),
            'landslide_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_landslide'])){
                $query = $this->pamain_model->createlandslideImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageLandslideDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageLandslideDetails($codegens);
        $dataTotal = $this->pamain_model->getAllImagelandslideDetailsTotal($codegens);

        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_landslide; ?>" class="trow">
                <td><?php echo $row->landslide_legend; ?></td>
                <td><?php echo number_format($row->landslide_area,3); ?></td>
                <td class="hidden"><?php echo $row->landslide_remarks; ?></td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_landslide;?>" class="btn btnbtn btn-info btn-xs" onclick="editlandslide(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimageLandslide" data-id="<?php echo $row->id_landslide ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="cpex<?php echo $row->id_landslide ?>" value="<?php echo $row->id_landslide ?>" />
                <input type="hidden" id="lndslde<?php echo $row->id_landslide ?>" value="<?php echo $row->landslide_desc ?>" />
            </tr>
            <?php
        }
            foreach($dataTotal as $total){ ?>
            <tr style="background-color: green;color: white">
                <td>GRAND TOTAL(has)</td>
                <td colspan="2" style="text-align: left"><?php echo number_format($total->total_area,3); ?></td>
            </tr>
        <?php }
    }

    public function fetchImageLandslide()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageLandslide($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/landslide_img/'.$row->landslide_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/landslide_img/'.$row->landslide_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_landslideimage" class="hidden" value="'.$row->id_landslide.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagellimage" data-id="'.$row->id_landslide.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletelandslide2($id = null)
        {
            $sql1 = $this->db->where('id_landslide',$id)
                                            ->get('tblpahazardlandslide')
                                            ->row();
            if (!empty($sql1->landslide_img)) {
                unlink('bmb_assets2/upload/landslide_img/'.$sql1->landslide_img);
            }

            $sql = "DELETE FROM tblpahazardlandslide WHERE id_landslide = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletelandslide($id = null)
        {
            $sql = "DELETE FROM tblpahazardlandslide_details WHERE id_landslide = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function image_flooding()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_flooding']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/flooding_img';
            $config['file_name'] = $_FILES['img_flooding']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_flooding')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_flooding') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'flooding_desc'      =>  $this->input->post('flooding',true),
            'flooding_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_flooding'])){
                $query = $this->pamain_model->createfloodingImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageFloodingDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImagefloodingDetails($codegens);
        $dataTotal = $this->pamain_model->getAllImagefloodingDetailsTotal($codegens);

        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_flooding; ?>" class="trow">
                <td><?php echo $row->flooding_legend; ?></td>
                <td><?php echo number_format($row->flooding_area,3); ?></td>
                <td class="hidden"><?php echo $row->flooding_remarks; ?></td>
                <td class="hidden"><?php echo " ".$row->date_updated; ?></td>
                <td class="hidden"><?php echo " ".$row->date_created; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_flooding;?>" class="btn btn-info btn-edit-landslide" onclick="editflooding(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeimageFlooding" data-id="<?php echo $row->id_flooding ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="cpez<?php echo $row->id_flooding ?>" value="<?php echo $row->id_flooding ?>" />
                <input type="hidden" id="fldlegend<?php echo $row->id_flooding ?>" value="<?php echo $row->flooding_desc ?>" />
            </tr>
            <?php
        }
            foreach($dataTotal as $total){ ?>
            <tr style="background-color: green;color: white">
                <td>GRAND TOTAL(has)</td>
                <td colspan="2" style="text-align: left"><?php echo number_format($total->total_area,3); ?></td>
            </tr>
        <?php }
    }

    public function fetchImageFlooding(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageFlooding($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/flooding_img/'.$row->flooding_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/flooding_img/'.$row->flooding_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_floodingimage" class="hidden" value="'.$row->id_flooding.'" />
            <button type="button" class="btn btn-danger btn-xs btn-flat removeimagefloodingimage" data-id="'.$row->id_flooding.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deleteflooding2($id = null)
        {
            $sql1 = $this->db->where('id_flooding',$id)
                                            ->get('tblpahazardflooding')
                                            ->row();
            if ($sql1->flooding_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/flooding_img/'.$sql1->flooding_img);
            }else{

            }

            $sql = "DELETE FROM tblpahazardflooding WHERE id_flooding = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function deleteflooding($id = null)
        {
            $sql = "DELETE FROM tblpahazardflooding_details WHERE id_flooding = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }


        public function image_sea()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_sea']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/sealevel_img';
            $config['file_name'] = $_FILES['img_sea']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_sea')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_sea') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'sea_desc'      =>  $this->input->post('sea',true),
            'sea_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_sea'])){
                $query = $this->pamain_model->createseaImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImageSea(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageSea($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_sea; ?>" class="trow">
                <td><?php echo '<img src="../../../bmb_assets2/upload/sealevel_img/'.$row->sea_img.'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.$row->sea_desc; ?><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/sealevel_shpfile/').$row->sealevel_shpfile ?>"><?php echo $row->sealevel_shpfile ?></a><br>
                    <button type="button" value="<?php echo $row->id_sea;?>" class="btn btnbtn btn-info btn-xs" onclick="editsea(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagesea" data-id="<?php echo $row->id_sea ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->sea_desc; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/sealevel_img/'.$row->sea_img ?></td>
                <td class="hide"><?php echo $row->sea_img ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/sealevel_shpfile/').$row->sealevel_shpfile ?>"><?php echo $row->sealevel_shpfile ?></a></td>
                <td class="hide"><?php echo $row->sealevel_shpfile; ?></td>
            </tr>
            <?php
        }
    }

    public function deletesea($id = null)
        {
            $sql1 = $this->db->where('id_sea',$id)
                                            ->get('tblpahazardsealevelrise')
                                            ->row();
            if ($sql1->sea_img == "nophoto.jpg") {

            }elseif (!empty($sql1->sea_img)) {
                unlink('bmb_assets2/upload/sealevel_img/'.$sql1->sea_img);
            }
            $sql = "DELETE FROM tblpahazardsealevelrise WHERE id_sea = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function image_tsunami()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['img_tsunami']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/tsunami_img';
            $config['file_name'] = $_FILES['img_tsunami']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('img_tsunami')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_tsunami') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'tsunami_desc'      =>  $this->input->post('tsunami',true),
            'tsunami_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_tsunami'])){
                $query = $this->pamain_model->createtsunamiImage($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchImagetsunami(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageTsunami($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_tsunami; ?>" class="trow">
                <td><?php echo '<img src="../../../bmb_assets2/upload/tsunami_img/'.$row->tsunami_img.'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.$row->tsunami_desc.'<br>'; ?>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/stormsurge_shpfile/').$row->stormsurge_shpfile ?>"><?php echo $row->stormsurge_shpfile ?></a><br>
                    <button type="button" value="<?php echo $row->id_tsunami;?>" class="btn btnbtn btn-info btn-xs" onclick="edittsunami(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagetsunami" data-id="<?php echo $row->id_tsunami ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->tsunami_desc; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/tsunami_img/'.$row->tsunami_img ?></td>
                <td class="hide"><?php echo $row->tsunami_img ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/stormsurge_shpfile/').$row->stormsurge_shpfile ?>"><?php echo $row->stormsurge_shpfile ?></a></td>
                <td class="hide"><?php echo $row->stormsurge_shpfile; ?></td>
            </tr>
            <?php
        }
    }

    public function deletetsunami($id = null)
        {
            $sql1 = $this->db->where('id_tsunami',$id)
                                            ->get('tblpahazardtsunami')
                                            ->row();
            if ($sql1->tsunami_img == "nophoto.jpg") {

            }elseif (!empty($sql1->tsunami_img)) {
                unlink('bmb_assets2/upload/tsunami_img/'.$sql1->tsunami_img);
            }
            $sql = "DELETE FROM tblpahazardtsunami WHERE id_tsunami = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

     public function fetchImagegeohazard(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllImageGeohazard($codegens);
        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_geohazard; ?>" class="trow">
                <td><?php echo '<img src="../../../bmb_assets2/upload/other_geohazard_img/'.$row->geohazard_map.'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.$row->geohazard_desc.'<br>'; ?>
                    <label>Shapefile : </label><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_geohazard_shpfile/').$row->geohazard_shpfile ?>"><?php echo $row->geohazard_shpfile ?></a><br>
                    <button type="button" value="<?php echo $row->id_geohazard;?>" class="btn btnbtn btn-info btn-xs" onclick="editgeohazard(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeimagegeohazard" data-id="<?php echo $row->id_geohazard ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->geohazard_desc; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/other_geohazard_img/'.$row->geohazard_map ?></td>
                <td class="hide"><?php echo $row->geohazard_map ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_geohazard_shpfile/').$row->geohazard_shpfile ?>"><?php echo $row->geohazard_shpfile ?></a></td>
                <td class="hide"><?php echo $row->geohazard_shpfile; ?></td>
            </tr>
            <?php
        }
    }

    public function deletegeohazard($id = null)
        {
            $sql1 = $this->db->where('id_geohazard',$id)
                                            ->get('tblpageohazard')
                                            ->row();
            if ($sql1->geohazard_map == "nophoto.jpg") {

            }elseif (!empty($sql1->geohazard_map)) {
                unlink('bmb_assets2/upload/other_geohazard_img/'.$sql1->geohazard_map);
            }

            $sql = "DELETE FROM tblpageohazard WHERE id_geohazard = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function file_econ()
    {
        $output2 = array('error' => false);
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        #-------------------------------#

        if(!empty($_FILES['economicfile']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/econprof_pdf';
            $config['file_name'] = $_FILES['economicfile']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('economicfile')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_econprof') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainimage'] = (object)$postDataImage = [
            'generatedcode '    =>  $this->input->post('gencode',true),
            'econ_desc'      =>  $this->input->post('econdesc',true),
            'econ_pdf'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'    => $now,
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataImage['id_econprof'])){
                $query = $this->pamain_model->inseteconpdf($postDataImage);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetcheconpdf(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAlleconpdf($codegens);
        foreach($data as $row){
            ?>
            <tr>
                <td><a href="<?php echo base_url('bmb_assets2/upload/econprof_pdf/').$row->econ_pdf ?>"><?php echo $row->econ_desc ?></a></td>
                <td><?php echo $row->econ_desc; ?></td>
                <td><button type="button" class="btn btn-danger btn-flat removeimageeconprof" data-id="<?php echo $row->id_econprof ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deleteeconprof($id = null)
        {
            $sql1 = $this->db->where('id_econprof',$id)
                                            ->get('tblpaeconomicprofile')
                                            ->row();
            unlink('bmb_assets2/upload/econprof_pdf/'.$sql1->econ_pdf);
            $sql = "DELETE FROM tblpaeconomicprofile WHERE id_econprof = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }


    public function insertpambresolutionfile()
    {
        $output2 = array('error' => false);
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        #-------------------------------#
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode ' =>  $this->input->post('mompambreso-gencode',true),
            'transmitcode' => $this->input->post('mompambreso-gencode3',true),
            'resolution_name'    =>  $this->input->post('resotitle',true),
            'pambreso_code'    =>  $this->input->post('mompambreso-gencode2',true),
            'month_chair'      =>  $this->input->post('date_approve_chair_month',true),
            'year_chair'      =>  $this->input->post('date_approve_chair_year',true),
            'month_sec'      =>  $this->input->post('date_affirmed_sec_month',true),
            'year_sec'      =>  $this->input->post('date_affirmed_sec_year',true),
            'resolution_no'      =>  $this->input->post('resono',true),
            'file_reso'       => $this->input->post('old_file_reso'),
            'status'       => $this->input->post('pambstatus'),
        ];
                $query = $this->pamain_model->insertresofile($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO location';
                }else{

                }
        echo json_encode($output);
    }


    public function file_crmp()
    {
        $output2 = array('error' => false);
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        #-------------------------------#

        $data['maindata'] = (object)$postDataImage = [
            'generatedcode' => $this->input->post('crmp-gencode',true),
            'id_pacbrma' => $this->input->post('crmp-id',true),
            'crmp_activity' => $this->input->post('crmp_activity',true),
            'crmp_area_devt' => str_replace(',','',$this->input->post('crmp_areadevt',true)),
            'crmp_x_coordinates' => $this->input->post('crmp_x_coor'),
            'crmp_y_coordinates' => $this->input->post('crmp_y_coor'),
            'crmp_cost' => str_replace(',','',$this->input->post('crmp_cost')),
            'crmp_outputs' => $this->input->post('crmp_output'),
            'crmp_file'       => $this->input->post('old_crmpfile'),
        ];

            if(empty($postDataImage['id_crmp'])){
                $query = $this->pamain_model->createCRMPActivity($postDataImage);
                if($query){
                $output['status'] = 'Successfull';
                $output['message'] = 'Successfully upload file';
                }else{
                $output['status'] = 'Failed';
                $output['message'] = 'No image upload';
                }
            }
            // }
            echo json_encode($output);
    }

    public function insertmunitesofmeeting(){
    $data['mainproj'] = (object)$postDataImage = [
    'pambreso_code '    => $this->input->post('pambresoCode',true),
    'generatedcode '    => $this->input->post('gencode',true),
    'month_minutes '    => $this->input->post('minutes_bmb_month',true),
    'day_minutes '      => $this->input->post('minutes_bmb_day',true),
    'year_minutes '     => $this->input->post('minutes_bmb_year',true),
    'title_minutes '     => $this->input->post('title_minutes',true),
    'remarks_minutes '     => $this->input->post('remarks_minutes',true),
    'file_name'         => $this->input->post('minutesfile_span'),
    'minutes_meeting_twg'         => $this->input->post('minutesfiletwg_span'),
    'uploaded_on'       =>  date("Y-m-d")
    ];
    $query = $this->pamain_model->insertresominutesFile($postDataImage);

    if($query){
        $output['message'] = 'Add';
        $output['status'] = 'Successfully added';
        }else{

        }
    echo json_encode($output);
}

    public function fetchoticeofmeeting(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->pambminutesofmeetings($codegens);
        foreach ($data as $row) {
            $cs = $row->pambreso_code;
            $count = $this->pamain_model->countpambminutesofmeetings($cs);
        ?>
        <tr id="<?php echo $row->id_reso_minutes; ?>" class="trow">
            <td><?php echo $row->month." ".$row->day_minutes.", ".$row->year ?></td>
            <td><?php echo $row->title_minutes ?></td>
            <td class="hidden"><?php echo $row->remarks_minutes ?></td>
            <td class="hidden"><?php echo $row->generatedcode ?></td>
            <td class="hidden"><?php echo $row->pambreso_code ?></td>
            <td>
                <a href="<?php echo base_url('bmb_assets2/upload/pamb_reso_minutes_file/').$row->file_name ?>"><?php echo $row->file_name ?></a>
            </td>
            <td class="hidden"><?php echo $row->file_name ?></td>
            <td><?php echo 'Total no. of PAMB Resolution : '.$count.'<br><a value="'.$row->id_reso_minutes.'" class="btn btn-warning btn-xs" onclick="add_pambresolutions(this);">Add/View PAMB Resolution</a>&nbsp;'; ?></td>
            <td class="hidden"><?php echo $row->month_minutes ?></td>
            <td class="hidden"><?php echo $row->year_minutes ?></td>
            <td><?php echo '<button type="button" value="'.$row->id_reso_minutes.'" class="btn btn-info btn-xs" onclick="editminutesofmeeting(this)">Edit</button>&nbsp;'.
                            '<button type="button" value="'.$row->id_reso_minutes.'" class="btn btn-danger btn-flat btn-xs removeminutesofmeeting" data-id="'.$row->id_reso_minutes.'">Remove</button>';?>
            <input type="hidden" id="momids<?php echo $row->id_reso_minutes ?>" value="<?php echo $row->id_reso_minutes ?>" />
            <input type="hidden" id="mom1<?php echo $row->id_reso_minutes ?>" value="<?php echo $row->month_minutes ?>" />
            <input type="hidden" id="mom2<?php echo $row->id_reso_minutes ?>" value="<?php echo $row->day_minutes ?>" />
            <input type="hidden" id="mom3<?php echo $row->id_reso_minutes ?>" value="<?php echo $row->year_minutes ?>" />
            </td>
        </tr>
    <?php
        }
    }

    public function deleteminutesofmeeting($id = null)
        {
            $sql1 = $this->db->where('id_reso_minutes',$id)
                                            ->get('tblpambreso_minutes')
                                            ->row();
            // unlink('bmb_assets2/upload/pdf_file_resolution/'.$sql1->file_reso);
            $sql = "DELETE FROM tblpambreso_minutes WHERE id_reso_minutes = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchresofile(){
        $codegens = $this->input->post('d2');
        $data = $this->pamain_model->getresofile($codegens);
        foreach($data as $row){
            $transmit = $row->transmitcode;
            $datatransmit = $this->pamain_model->getresofileTransmit($transmit);

            if ($row->month_chair == $row->month1) {
                $m1 = $row->m1;
            }

            if ($row->year_chair == $row->year1) {
                $y1 = $row->y1;
            }

            if ($row->month_sec == $row->month2) {
                $m2 = $row->m2;
            }

            if ($row->year_sec == $row->year2) {
                $y2 = $row->y2;
            }


            ?>
            <tr id="<?php echo $row->id_resolution; ?>" class="trow">
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/pdf_file_resolution/').$row->file_reso ?>"><?php echo $row->file_reso ?></a></td>
                <td class="hide"><?php echo $row->file_reso; ?></td>
                <td class="hide"><?php echo $row->resolution_no; ?></td>
                <td class="hide"><?php echo $row->resolution_name; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/pdf_file_resolution/').$row->file_reso ?></td>
                <td class="hide"><?php echo $row->pambreso_code; ?></td>
                <td class="hide"><?php echo $row->status; ?></td>
                <td class="hide"><?php echo $row->month_chair; ?></td>
                <td class="hide"><?php echo $row->year_chair; ?></td>
                <td class="hide"><?php echo $row->month_sec; ?></td>
                <td class="hide"><?php echo $row->year_sec; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->transmitcode; ?></td>
                <td>
                    <?php echo
                    "<b>PAMB Resolution Number : </b>".$row->resolution_no."<br>".
                    "<b>PAMB Resolution Title : </b>".$row->resolution_name."<br>".
                    '<b>PAMB Resolution File : </b><i class="cap-icon ci-paperclip"></i><a target="_blank" href='.base_url('bmb_assets2/upload/pdf_file_resolution/').$row->file_reso.">".$row->file_reso.'</a><br>'.
                    "<b>Date Approved by PAMB Chair : </b>".$m1." ".$y1."<br>".
                    "<b>Date Affirmed by the Secretary : </b>".$m2." ".$y2."<br>".
                    "<b>Action Taken/Status of Implementation : </b>".$row->status_desc."<br>".
                    "<b>Date submitted to BMB (with uploading of signed transmittal) : </b><br>"; ?>
                    <?php foreach ($datatransmit as $row_t) {
                       echo '<i class="cap-icon ci-paperclip"></i><a target="_blank" href='.base_url('bmb_assets2/upload/pamb_transmittal_file/').$row_t->file_name.">".$row_t->file_name.'</a>&nbsp;'.
                            'Submitted on '.$row_t->month." ".$row_t->year."<br>";
                    } ?>
                    <?php echo '<br><button type="button" value="'.$row->id_resolution.'" class="btn btn-info btn-xs" onclick="editresofile(this)">Edit</button>'.
                    '<button type="button" value="'.$row->id_resolution.'" class="btn btn-danger btn-flat btn-xs removeresofile" data-id="'.$row->id_resolution.'">Remove</button>';
                    ?>
                </td>
            </tr>
            <?php
        }
    }

    public function fetchmngmtplanfile(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getmngmtplansfile($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_mngmtplan; ?>" class="trow">
                <td>
                    <!-- <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/management_plan/').$row->mngmtplan_file ?>"><?php echo $row->mngmtplan_file ?></a> -->
                    <label>Management Plan : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/management_plan/').$row->mngmtplan_file ?>"><?php echo $row->mngmtplan_file ?></a><br>
                    <label>PAMB Resolution : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/managementplan_pmbreso/').$row->mngmtplan_pambreso ?>"><?php echo $row->mngmtplan_pambreso ?></a><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/managementplan_shpfile/').$row->mngmtplan_shpfile ?>"><?php echo $row->mngmtplan_shpfile ?></a>
                </td>
                <td><?php echo "Date approve : ".$row->month." ".$row->year."<br>Status : ".$row->status_desc."<br>Duration : ".$row->mpDuration ?></td>
                <td><?php echo "Upload : ".$row->date_upload."<br> Last Update : ".$row->last_update; ?>
                    <button type="button" value="<?php echo $row->id_mngmtplan;?>" class="btn btnbtn btn-info btn-xs" onclick="editmgmtplan(this);">Edit</button>
                    <button type="button"  class="btn btnbtn btn-danger btn-xs removemngmtplanfile" data-id="<?php echo $row->id_mngmtplan ?>" title="Remove">Remove</button>

                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/management_plan/').$row->mngmtplan_file ?>"><?php echo $row->mngmtplan_file ?></a></td>
                <td class="hide"><?php echo $row->mngmtplan_file; ?></td>
                <td class="hide"><?php echo $row->mngmtplan_remarks; ?></td>
                <td class="hide"><?php echo $row->mpDuration; ?></td>
                <td class="hide"><?php echo $row->mpObjectives; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/managementplan_pmbreso/').$row->mngmtplan_pambreso ?>"><?php echo $row->mngmtplan_pambreso ?></a></td>
                <td class="hide"><?php echo $row->mngmtplan_pambreso; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/managementplan_shpfile/').$row->mngmtplan_shpfile ?>"><?php echo $row->mngmtplan_shpfile ?></a></td>
                <td class="hide"><?php echo $row->mngmtplan_shpfile; ?></td>
            </tr>
            <input type="hidden" id="mgmtplanid<?php echo $row->id_mngmtplan ?>" value="<?php echo $row->id_mngmtplan ?>" />
            <input type="hidden" id="mgmtplanmonth<?php echo $row->id_mngmtplan ?>" value="<?php echo $row->mpMonth ?>" />
            <input type="hidden" id="mgmtplanday<?php echo $row->id_mngmtplan ?>" value="<?php echo $row->mpDay ?>" />
            <input type="hidden" id="mgmtplanyear<?php echo $row->id_mngmtplan ?>" value="<?php echo $row->mpYear ?>" />
            <input type="hidden" id="mgmtplanstatus<?php echo $row->id_mngmtplan ?>" value="<?php echo $row->mpStatus ?>" />

            <?php
        }
    }

    public function deletemngmtplanfile($id = null)
        {
            $sql1 = $this->db->where('id_mngmtplan',$id)
                                            ->get('tblpamanagementplan')
                                            ->row();

            if ($sql1->mngmtplan_file == "nophoto.jpg" || empty($sql1->mngmtplan_file)) {

            }elseif (!empty($sql1->mngmtplan_file)) {
                unlink('bmb_assets2/upload/management_plan/'.$sql1->mngmtplan_file);
            }

            $sql = "DELETE FROM tblpamanagementplan WHERE id_mngmtplan = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deleteresofile($id = null)
        {
            $sql1 = $this->db->where('id_resolution',$id)
                                            ->get('tblpambreso')
                                            ->row();
            // unlink('bmb_assets2/upload/pdf_file_resolution/'.$sql1->file_reso);
            $sql = "DELETE FROM tblpambreso WHERE id_resolution = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function file_mngmtplan()
    {
        if(isset($_FILES["mngmtplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/management_plan';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('mngmtplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function file_ecomngmtplan_pambreso()
    {
        if(isset($_FILES["ecomgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmntplan_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('ecomgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function file_ecomngmtplan_pambresoedit()
    {
        if(isset($_FILES["edit-ecomgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmntplan_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-ecomgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function file_mngmtplan_pambreso()
    {
        if(isset($_FILES["mgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/managementplan_pmbreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('mgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function file_mngmtplan_pambresoEdit()
    {
        if(isset($_FILES["edit-mgmtplanpambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/managementplan_pmbreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-mgmtplanpambreso'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    // public function file_mngmtplan()
    // {

    //     $output2 = array('error' => false);
    //     date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
    //     $now = date('Y-m-d');
    //     #-------------------------------#

    //     if(!empty($_FILES['mngmtplanfile']['name'])){
    //         $config ['upload_path'] = 'bmb_assets2/upload/management_plan';
    //         $config['file_name'] = $_FILES['mngmtplanfile']['name'];
    //         $config['allowed_types'] = 'pdf|csv';

    //         $this->load->library('upload', $config);
    //         $this->upload->initialize($config);
    //          if($this->upload->do_upload('mngmtplanfile')){
    //             $uploadData = $this->upload->data();
    //             $filenames = $uploadData['file_name'];
    //         }
    //     }
    //     if ($this->input->post('id_mngmtplan') == null)
    //     {
    //     $this->form_validation->set_rules('gencode','Code','required');
    //     $data['maindata'] = (object)$postDataImage = [
    //         'generatedcode ' =>  $this->input->post('gencode',true),
    //         'date_upload'    =>  $now,
    //         'mngmtplan_remarks'      =>  $this->input->post('mngmtplanremarks',true),
    //         'mngmtplan_file'       => (!empty($filenames)?$filenames:$this->input->post('old_mngmtplanfile')),
    //         'mpMonth ' =>  $this->input->post('mpMonth',true),
    //         'mpDay ' =>  $this->input->post('mpDay',true),
    //         'mpYear ' =>  $this->input->post('mpYear',true),
    //         'mpStatus ' =>  $this->input->post('mpStatus',true),
    //         'mpDuration ' =>  $this->input->post('mpduration',true),
    //     ];
    //     }

    //     if ($this->form_validation->run() == false) {
    //         $output['error'] = true;
    //         $output['status'] = validation_errors();
    //     }else{
    //         if (empty($filenames)) {
    //             $output['error'] = true;
    //             $output['status'] = 'No image upload';
    //         } else {
    //            if(empty($postDataImage['id_mngmtplan'])){
    //             $query = $this->pamain_model->insertmngmtplanfile($postDataImage);
    //             if($query){
    //             $output['status'] = 'Successfull';
    //             $output['message'] = 'Successfully upload file';
    //             }else{
    //             $output['status'] = 'Failed';
    //             $output['message'] = 'No image upload';
    //             }
    //         }
    //         }


    //     }
    //     echo json_encode($output);
    // }

    public function fetchincomes(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallfee($codegens);
           foreach($data as $row){
            ?>
            <tr>
                <td><?php echo $row->date_month." ".$row->date_day.", ".$row->date_year; ?></td>
                <td><?php echo "No. of Local Male : ".$row->locMale."<br> No. of Local Female : ".$row->locFemale."<br> No. of Foreign Male : ".$row->forMale."<br> No. of Foreign Female : ".$row->forFemale."<br><hr> Adults : ".$row->fil_adults."<br> Student: ".$row->fil_students."<br> Person with Disability : ".$row->fil_distab."<br> Foreigner: ".$row->foreigner ?></td>
                <td><?php echo "Picnic Table : ".$row->facility_tables."<br>Cottages<br>&nbsp &nbsp Day : ".$row->facility_cottages_day.
                    "<br>&nbsp &nbsp Night : ".$row->facility_cottages_night."<br>Camping Site: ".$row->facility_campingsite."<br> Swimming : ".$row->facility_swimmingpool.
                    "<br>Sport Facilities<br> &nbsp &nbsp Daytime :".$row->facility_bcourt_daytime."<br> &nbsp &nbsp Lights : ".$row->facility_bcourt_light.
                    "<br>Docking Area : ".$row->facility_dockingarea."<br> Special Docking Area  : ".$row->special_docking_area ?></td>
                <td><?php echo "Tricycle/Motorcycle : ".$row->parking_tricycle."<br> Car/SUV : ".$row->parking_cars."<br> Passenger Jeep/Coaster : ".$row->parking_jeep."<br> Mini/Tour Bus : ".$row->parking_bus ?></td>
                <td><?php echo "Recreational Activity<br>Water-based Activities<br> &nbsp &nbsp For Filipino : ".$row->recreational_waterbase_activity_foreign."<br>&nbsp &nbsp For Foreigner :".$row->recreational_waterbase_activity_local.
                    "<br>Hiking and Biking<br> &nbsp &nbsp For Filipino : ".$row->trekking_biking_local."<br>&nbsp &nbsp For Foreigner : ".$row->trekking_biking_foreign.
                    "<br>Documentation and Photography : ".$row->commercialdoc_photography.
                    "<br>Trekking, Biking, Mountain Climbing and Caving<br>&nbsp &nbsp For Filipino : ".$row->trekking_biking_local."<br>&nbsp &nbsp For Foreigner : ".$row->trekking_biking_foreign.
                    "<br>SCUBA diving, Whitewater Rafting and Non-Motorized Watersports<br> &nbsp &nbsp For Filipino : ".$row->scuba_local."<br> &nbsp &nbsp For Foreigner : ".$row->scuba_foreign ?></td>
                <td><button type="button" class="btn btn-danger btn-flat removefee" data-id="<?php echo $row->id_fee ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

     public function deletefees($id = null)
    {
            $sql1 = $this->db->where('id_fee',$id)
                                            ->get('tblpamainvisitorpa')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpamainvisitorpa WHERE id_fee = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchIpafsVisitors(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallIpafVisitorsEntrancefee($codegens);
        $datacr = $this->pamain_model->getallIpafincomecertificates($codegens);
        $dataGT = $this->pamain_model->grandtotalincomevisit($codegens);
        foreach ($data as $row) { ?>
            <tr id="<?php echo $row->id_visitor_payment; ?>" class="trow">
                <td><?php echo $row->visitorlogs_month; ?></td>
                <td><?php echo $row->visitorlogs_day; ?></td>
                <td><?php echo $row->visitorlogs_year; ?></td>
                <td><?php echo number_format($row->efamount,2) ?></td>
                <td><?php echo number_format($row->ffamount,2) ?></td>
                <td><?php echo number_format($row->rfamount,2) ?></td>
                <td><?php echo number_format($row->cfamount,2) ?></td>
                <td><?php echo number_format($row->dfamount,2) ?></td>
                <td><?php echo number_format($row->ofamount,2) ?></td>
                <td><?php echo number_format($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount,2) ?></td>
                <td><?php echo number_format(($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount)*.75,2) ?></td>
                <td><?php echo number_format(($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount)*.25,2) ?></td>
                <td><?php echo number_format($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount,2) ?></td>
                <td><?php echo $row->contritext; ?></td>
                <td><?php echo number_format($row->fpfamount,2); ?></td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                         <label>Existing BTR Certificate for the 25% file attached</label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/certificateofreceiptipaf/').$rowc->income_btr_certificate ?>"><?php echo $rowc->income_btr_certificate ?></a>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                         <label>Existing Bank Certification for depository bank file attached</label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_bank_certificate/').$rowc->income_bank_certificate ?>"><?php echo $rowc->income_bank_certificate ?></a>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year):
                            echo form_input('visitor_cert_id',$rowc->id_income_certificate,'id="visitor_cert_id"');
                        endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                            <?php echo form_input('btrcerti_old',$rowc->income_btr_certificate,'id="btrcerti_old"'); ?>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                            <?php echo form_input('bankcerti_old',$rowc->income_bank_certificate,'id="bankcerti_old"'); ?>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td>
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year):
                            // echo $rowc->id_income_certificate;
                            // echo form_input('visitor_cert_id',$rowc->id_income_certificate,'id="visitor_cert_id"');
                            echo "BTR Certificate for the 25% : ".(!empty($rowc->income_btr_certificate)?"&#10003;":"&#9747")."<br>";
                            echo "Bank Certification: ".(!empty($rowc->income_bank_certificate)?"&#10003;":"&#9747")."<br>";
                        endif; ?>
                    <?php } ?>
                    <button type="button" value="<?php echo $row->id_visitor_payment;?>" class="btn btn-info btn-edit-reference" onclick="add_incomeBTRfiles(this)">Upload file</button>
                    <input type="hidden" id="visitgencode2<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitors_gencode; ?>" />
                    <input type="hidden" id="visitgencode<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->generatedcode; ?>" />
                    <input type="hidden" id="visitm<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_month; ?>" />
                    <input type="hidden" id="visitd<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_day; ?>" />
                    <input type="hidden" id="visity<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_year; ?>" />
                </td>
            </tr>
        <?php } ?>
        <tr style="background-color: #336699;font-size: 18px;font-weight: 600;color: #ffa31a">
            <td colspan="10">GRAND TOTAL</td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format(($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount)*.75,2);
                } ?>
            </td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format(($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount)*.25,2);
                } ?>
            </td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount,2);
                } ?>
            </td>
            <td colspan="3"></td>
        </tr>
        <?php
    }

    public function fetchIncomeGenbyMonthYear(){
        $codegens = $this->input->post('code');
        $year = $this->input->post('yearselect');
        $month = $this->input->post('monthselect');
        $data = $this->pamain_model->SearchgetallIpafVisitorsEntrancefee($codegens,$year,$month);
        $datacr = $this->pamain_model->SearchgetallIpafincomecertificates($codegens,$year,$month);
        $dataGT = $this->pamain_model->Searchgrandtotalincomevisit($codegens,$year,$month);
        foreach ($data as $row) { ?>
            <tr id="<?php echo $row->id_visitor_payment; ?>" class="trow">
                <td><?php echo $row->visitorlogs_month; ?></td>
                <td><?php echo $row->visitorlogs_day; ?></td>
                <td><?php echo $row->visitorlogs_year; ?></td>
                <td><?php echo number_format($row->efamount,2) ?></td>
                <td><?php echo number_format($row->ffamount,2) ?></td>
                <td><?php echo number_format($row->rfamount,2) ?></td>
                <td><?php echo number_format($row->cfamount,2) ?></td>
                <td><?php echo number_format($row->dfamount,2) ?></td>
                <td><?php echo number_format($row->ofamount,2) ?></td>
                <td><?php echo number_format($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount,2) ?></td>
                <td><?php echo number_format(($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount)*.75,2) ?></td>
                <td><?php echo number_format(($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount)*.25,2) ?></td>
                <td><?php echo number_format($row->efamount+$row->ffamount+$row->rfamount+$row->cfamount+$row->dfamount+$row->ofamount,2) ?></td>
                <td><?php echo $row->contritext; ?></td>
                <td><?php echo number_format($row->fpfamount,2); ?></td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                         <label>Existing BTR Certificate for the 25% file attached</label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/certificateofreceiptipaf/').$rowc->income_btr_certificate ?>"><?php echo $rowc->income_btr_certificate ?></a>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                         <label>Existing Bank Certification for depository bank file attached</label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_bank_certificate/').$rowc->income_bank_certificate ?>"><?php echo $rowc->income_bank_certificate ?></a>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year):
                            echo form_input('visitor_cert_id',$rowc->id_income_certificate,'id="visitor_cert_id"');
                        endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                            <?php echo form_input('btrcerti_old',$rowc->income_btr_certificate,'id="btrcerti_old"'); ?>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td class="hidden">
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year): ?>
                            <?php echo form_input('bankcerti_old',$rowc->income_bank_certificate,'id="bankcerti_old"'); ?>
                        <?php endif ?>
                    <?php } ?>
                </td>
                <td>
                    <?php foreach ($datacr as $rowc) { ?>
                        <?php if ($row->visitorlogs_month == $rowc->certificate_date_month && $row->visitorlogs_day == $rowc->certificate_date_day && $row->visitorlogs_year == $rowc->certificate_date_year):
                            // echo $rowc->id_income_certificate;
                            // echo form_input('visitor_cert_id',$rowc->id_income_certificate,'id="visitor_cert_id"');
                            echo "BTR Certificate for the 25% : ".(!empty($rowc->income_btr_certificate)?"&#10003;":"&#9747")."<br>";
                            echo "Bank Certification: ".(!empty($rowc->income_bank_certificate)?"&#10003;":"&#9747")."<br>";
                        endif; ?>
                    <?php } ?>
                    <button type="button" value="<?php echo $row->id_visitor_payment;?>" class="btn btn-info btn-edit-reference" onclick="add_incomeBTRfiles(this)">Upload file</button>
                    <input type="hidden" id="visitgencode2<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitors_gencode; ?>" />
                    <input type="hidden" id="visitgencode<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->generatedcode; ?>" />
                    <input type="hidden" id="visitm<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_month; ?>" />
                    <input type="hidden" id="visitd<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_day; ?>" />
                    <input type="hidden" id="visity<?php echo $row->id_visitor_payment;?>" value="<?php echo $row->visitorlogs_year; ?>" />
                </td>
            </tr>
        <?php } ?>
        <tr style="background-color: #336699;font-size: 18px;font-weight: 600;color: #ffa31a">
            <td colspan="10">GRAND TOTAL</td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format(($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount)*.75,2);
                } ?>
            </td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format(($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount)*.25,2);
                } ?>
            </td>
            <td>
                <?php foreach ($dataGT as $rowgt) {
                   echo number_format($rowgt->efamount+$rowgt->ffamount+$rowgt->rfamount+$rowgt->cfamount+$rowgt->dfamount+$rowgt->ofamount,2);
                } ?>
            </td>
            <td colspan="3"></td>
        </tr>
        <?php
    }


    public function insertPAipafcertificates()
    {

        $output = array();
        if (!empty($this->input->post("visitor_cert_id"))) {
                $id = $this->input->post("visitor_cert_id");
                if($this->session->userdata('email')){
                    $ipaf_id = $this->input->post("recog-id");
                    $ipafdetails = array('generatedcode' => $this->input->post('btrs-gencode',true),
                                         'certificate_date_month' => $this->input->post('btrs-datemonth',true),
                                         'certificate_date_day' => $this->input->post('btrs-dateday',true),
                                         'certificate_date_year' => $this->input->post('btrs-dateyear',true),
                                         'income_btr_certificate' => (!empty($this->input->post('add-proofdeposit_span'))?$this->input->post('add-proofdeposit_span'):$this->input->post('btrcerti_old')),
                                         'income_bank_certificate' => (!empty($this->input->post('add-bankdeposit_span'))?$this->input->post('add-bankdeposit_span'):$this->input->post('bankcerti_old')));
                    $query = $this->pamain_model->updatePAbtrcertifi($ipafdetails,$id);
                     if($query){
                        $output['message'] = 'Add';
                        $output['status'] = 'Successfully Update';
                        }else{

                        }
                        echo json_encode($output);
                }
            }else{
                $data['paloacations'] = (object)$postData = [
                    'generatedcode' => $this->input->post('btrs-gencode',true),
                    'certificate_date_month' => $this->input->post('btrs-datemonth',true),
                    'certificate_date_day' => $this->input->post('btrs-dateday',true),
                    'certificate_date_year' => $this->input->post('btrs-dateyear',true),
                    'income_btr_certificate' => $this->input->post('add-proofdeposit_span',true),
                    'income_bank_certificate' => $this->input->post('add-bankdeposit_span',true),
                    'date_upload' => date('Y-m-d')

                ];
                        $query = $this->pamain_model->createPAbtrcertifi($postData);
                        // }
                        if($query){
                        $output['message'] = 'Add';
                        $output['status'] = 'Successfully added';
                        }else{

                        }
                echo json_encode($output);
            }
}

    public function update_income(){
        if(!empty($_FILES['edit-proofdeposit']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/certificateofreceiptipaf';
            $config['file_name'] = $_FILES['edit-proofdeposit']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg|pdf';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-proofdeposit')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['edit-bankdeposit']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/ipaf_bank_certificate';
            $config['file_name'] = $_FILES['edit-bankdeposit']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg|pdf';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-bankdeposit')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }
        $gencode = $this->input->post("income-gencode");
        $rctr = $this->input->post("rctr");

        if($this->session->userdata('email')){
            $ser_id = $this->input->post("income-id");
            $servicedetails = array('entrancefee' => $this->input->post("edit-entrancefee"),
                                    'facilities' => $this->input->post("edit-income_facilities"),
                                    'resource' => $this->input->post("edit-resource"),
                                    'concession' => $this->input->post("edit-concession"),
                                    'certificate_receipt' => (!empty($filenames)?$filenames:$this->input->post("old-proofdeposit")),
                                    'bank_deposit_file' => (!empty($filenames2)?$filenames2:$this->input->post("old-bankdeposit")),
                                    'date_uploaded' => date('Y-m-d'),
                                );
            $this->pamain_model->update_Incomes($servicedetails,$ser_id);
                    if(!empty($this->input->post('others_income_edit')) || !empty($this->input->post('others_amount_edit'))){
                        foreach($this->input->post('others_amount_edit') as $ccntaa => $ctr)
                        {
                            $aal = array(
                                        'id_fromincome' => $ser_id,
                                        'income_month' => $this->input->post('edit-monitor_months-inv',true),
                                        'income_day' => $this->input->post('edit-monitor_days-inv',true),
                                        'income_year' => $this->input->post('edit-monitor_years-inv',true),
                                        'other_title' => $this->input->post('others_income_edit')[$ccntaa],
                                        'other_amount' => $this->input->post('others_amount_edit')[$ccntaa],
                                        'generatedcode' => $this->input->post('income-gencode',true),
                                    );
                            $this->pamain_model->add_subIncomeGeneratedOthers($aal);
                        }
                    }

            // if(!empty($this->input->post('others_income_edit')) || !empty($this->input->post('others_amount_edit'))){
            //             foreach($this->input->post('others_amount_edit') as $ccntaa => $ctr)
            //             {
            //                 $aals = array(
            //                             'id_fromincome' => $this->input->post('income-id',true),
            //                             'income_month' => $this->input->post('edit-monitor_months-inv',true),
            //                             'income_day' => $this->input->post('edit-monitor_days-inv',true),
            //                             'income_year' => $this->input->post('edit-monitor_years-inv',true),
            //                             'other_title' => $this->input->post('others_income_edit')[$ccntaa],
            //                             'other_amount' => str_replace(',','',$this->input->post('others_amount_edit'))[$ccntaa],
            //                             'generatedcode' => $this->input->post('income-gencode',true),
            //                         );
            //                 $this->pamain_model->add_subIncomeGeneratedOthers($aals);
            //             }
            //         }else{
            //             $aal = array(
            //                             'id_fromincome' => $ser_id,
            //                             'income_month' => $this->input->post('edit-monitor_months-inv',true),
            //                             'income_day' => $this->input->post('edit-monitor_days-inv',true),
            //                             'income_year' => $this->input->post('edit-monitor_years-inv',true),
            //                             'other_title' => (!empty($this->input->post('others_income_edit'))?$this->input->post('others_income_edit'):'')[$ccntaa],
            //                             'other_amount' => (!empty($this->input->post('others_amount_edit'))?str_replace(',','',$this->input->post('others_amount_edit')):0)[$ccntaa],
            //                             'generatedcode' => $this->input->post('income-gencode',true),
            //                         );
            //                 $this->pamain_model->add_subIncomeGeneratedOthers($aal);
            //         }

                    // if(!empty($this->input->post('financial_amount')) || !empty($this->input->post('financial_details'))){
                    //     foreach($this->input->post('contribution') as $ccnt1 => $ctr)
                    //     {
                    //         $asl = array(
                    //                     'id_fromincome' => $query,
                    //                     'month_contri' => $this->input->post('month_monitoring',true),
                    //                     'day_contri' => $this->input->post('day_monitoring',true),
                    //                     'year_contri' => $this->input->post('year_monitoring',true),
                    //                     'trustfund' => $this->input->post('contribution')[$ccnt1],
                    //                     'mode_payment' => $this->input->post('mode_donation')[$ccnt1],
                    //                     'contri_amount' => $this->input->post('financial_amount')[$ccnt1],
                    //                     'contri_remarks' => $this->input->post('financial_details')[$ccnt1],
                    //                     'generatedcode' => $this->input->post('gencode',true),
                    //                 );
                    //         $this->pamain_model->add_subcontri($asl);
                    //     }
                    // }

                    // if(!empty($this->input->post('developments')) || !empty($this->input->post('dev_remarks'))){
                    //     foreach($this->input->post('developments') as $ccnt2 => $ctr)
                    //     {
                    //         $abl = array(
                    //                     'id_fromincome' => $query,
                    //                     'dev_month' => $this->input->post('month_monitoring',true),
                    //                     'dev_year' => $this->input->post('year_monitoring',true),
                    //                     'dev_day' =>  $this->input->post('day_monitoring',true),
                    //                     'devfee_amount' => $this->input->post('developments')[$ccnt2],
                    //                     'dev_remarks' => $this->input->post('dev_remarks')[$ccnt2],
                    //                     'generatedcode' => $this->input->post('gencode',true),
                    //                 );
                    //         $this->pamain_model->add_subdev($abl);
                    //     }
                    // }

                    // if(!empty($this->input->post('finespenalty')) || !empty($this->input->post('penalty_remarks'))){
                    //     foreach($this->input->post('finespenalty') as $ccnt3 => $ctr)
                    //     {
                    //         $acl = array(
                    //                     'id_fromincome' => $query,
                    //                     'penalty_month' => $this->input->post('month_monitoring',true),
                    //                     'penalty_day' => $this->input->post('day_monitoring',true),
                    //                     'penalty_year' => $this->input->post('year_monitoring',true),
                    //                     'penalty_amount' => $this->input->post('finespenalty')[$ccnt3],
                    //                     'penalty_remarks' => $this->input->post('penalty_remarks')[$ccnt3],
                    //                     'generatedcode' => $this->input->post('gencode',true),
                    //                 );
                    //         $this->pamain_model->add_subfine($acl);
                    //     }
                    // }
            // for($i=1;$i<=$rctr;$i++){
            //     $aid = $this->input->post("caid12".$i);
            //     if($this->input->post("idincomeothers".$i)!="" || $this->input->post("idincomeamount".$i)!=""){
            //         $al = array('other_title' => $this->input->post("idincomeothers".$i),
            //                     'other_amount' => $this->input->post("idincomeamount".$i)
            //                 );
            //         $this->pamain_model->update_ipafincome($al,$aid);
            //     }else
            //         $this->pamain_model->remove_ipafincome($aid);
            // }

            // if($this->input->post('others_income_edit')){
            //     foreach($this->input->post('others_income_edit') as $ccnt => $ctr)
            //     {
            //         $aal = array('id_fromincome' => $this->input->post('idincome'),
            //                     'income_month' => $this->input->post('idmonthincome'),
            //                     // 'income_day' => $this->input->post('iddayincome'),
            //                     'income_year' => $this->input->post('idyearincome'),
            //                     'generatedcode' => $this->input->post('income-gencode'),
            //                     'other_title' => $this->input->post("others_income_edit")[$ccnt],
            //                     'other_amount' => $this->input->post('others_amount_edit')[$ccnt]
            //                 );
            //         $this->pamain_model->add_IpafIncomeOthers($aal);
            //     }
            // }

            // if($this->input->post('edit-contribution')){
            //     foreach($this->input->post('edit-contribution') as $ccnt1 => $ctr)
            //     {
            //         $aals = array('id_fromcontri' => $this->input->post('idincome'),
            //                     'generatedcode' => $this->input->post('codegenerated'),
            //                     'month_contri' => $this->input->post('idmonthincome'),
            //                     'year_contri' => $this->input->post('idyearincome'),
            //                     'trustfund' => $this->input->post("edit-contribution")[$ccnt1],
            //                     'mode_payment' => $this->input->post('edit-mode_donation')[$ccnt1],
            //                     'contri_amount' => $this->input->post("edit-financial_amount")[$ccnt1],
            //                     'contri_remarks' => $this->input->post('edit-financial_details')[$ccnt1]
            //                 );
            //         $this->pamain_model->add_IpafcontriOther($aals);
            //     }
            // }

            // if($this->input->post('edit-development_amount')){
            //     foreach($this->input->post('edit-development_amount') as $ccnt2 => $ctr)
            //     {
            //         $abl = array('id_fromtrust' => $this->input->post('idcontri'),
            //                     'generatedcode' => $this->input->post('codegenerated'),
            //                     'dev_month' => $this->input->post('idmonthcontri'),
            //                     'dev_day' => $this->input->post('iddaycontri'),
            //                     'dev_year' => $this->input->post('idyearcontri'),
            //                     'devfee_amount' => $this->input->post("edit-development_amount")[$ccnt2],
            //                     'dev_remarks' => $this->input->post('edit-development_details')[$ccnt2]
            //                 );
            //         $this->pamain_model->add_IpafdevelopmentOther($abl);
            //     }
            // }

            // if($this->input->post('edit-penalty_amount')){
            //     foreach($this->input->post('edit-penalty_amount') as $ccnt3 => $ctr)
            //     {
            //         $acl = array('id_fromtrust' => $this->input->post('idcontri'),
            //                     'generatedcode' => $this->input->post('codegenerated'),
            //                     'penalty_month' => $this->input->post('idmonthcontri'),
            //                     'penalty_day' => $this->input->post('iddaycontri'),
            //                     'penalty_year' => $this->input->post('idyearcontri'),
            //                     'penalty_amount' => $this->input->post("edit-penalty_amount")[$ccnt3],
            //                     'penalty_remarks' => $this->input->post('edit-penalty_details')[$ccnt3]
            //                 );
            //         $this->pamain_model->add_IpafpenaltyOther($acl);
            //     }
            // }


            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchIpafs(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallIpaf1($codegens);
        $data1 = $this->pamain_model->getallIpafGrandtotal($codegens);
        $data2 = $this->pamain_model->getallGrandtotalIpafother($codegens);
        $data3 = $this->pamain_model->getallGrandtotalIpafdisbursements($codegens);
        $data4 = $this->pamain_model->getallGrandtotalIpafdevelopment($codegens);
        foreach($data as $row):
            $id = $row->id_income;
            $getallIpafdisbursementss = $this->pamain_model->getallIpafdisbursementss($id);
            $dataother = $this->pamain_model->getallIpafother($id);
            $datadisburse = $this->pamain_model->getalldisburse($id);
            $datadisburseedit = $this->pamain_model->getalldisburseedit($id);
            $datas = $this->pamain_model->get_income_other($id);
            $datacontri = $this->pamain_model->get_subcontri($id);
            $contriedit = $this->pamain_model->get_subcontrisplit($id);
            $datadevelopment = $this->pamain_model->get_devtfee($id);
            $datadevelopmentedit = $this->pamain_model->get_devtfeeedit($id);
            $datafines = $this->pamain_model->get_fines($id);
            $datafinesedit = $this->pamain_model->get_finesedit($id);
            ?>
            <tr id="<?php echo $row->id_income; ?>" class="trow">
                <td class="hide"><?php echo base_url('bmb_assets2/upload/certificateofreceiptipaf/').$row->certificate_receipt ?></td>
                <td class="hide"><?php echo $row->certificate_receipt; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/ipaf_bank_certificate/').$row->bank_deposit_file ?></td>
                <td class="hide"><?php echo $row->bank_deposit_file; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>

                <td><?php echo $row->date_month_income; ?></td>
                <td><?php echo $row->date_day_income; ?></td>
                <td><?php echo $row->date_year_income; ?></td>
                <td><?php echo number_format($row->entrancefee,2); ?></td>
                <td><?php echo number_format($row->facilities,2); ?></td>
                <td><?php echo number_format($row->resource,2); ?></td>
                <td><?php echo number_format($row->concession,2); ?></td>
                <?php foreach ($datadevelopment as $row4): ?>
                    <td><?php echo (!empty($row4->dconamount)?$row4->dconamount:0); ?></td>
                <?php endforeach ?>
                <?php foreach ($dataother as $row2): ?>
                    <td><?php echo !empty($row2->try2)?$row2->try2:0  ?>  </td>
                <?php endforeach ?>
                <?php
                    $d1 = $row->Grand_total_income;
                    $d2 = $row2->sumOther;
                    $d3 = $row4->sumdevamount;

                    $a = array($d1, $d2, $d3);
                    $sum_income = array_sum($a);
                ?>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income*0.75,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income*0.25,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income,2); ?></td>
                <?php foreach ($datacontri as $row3): ?>
                    <?php if (!empty($row3)): ?>
                        <td><?php echo (!empty($row3->finance)?$row3->finance:0); ?></td>
                        <td><?php echo $row3->mode; ?></td>
                        <td><?php echo number_format($row3->amounts,2); ?></td>
                    <?php endif ?>
                <?php endforeach ?>
                <?php foreach ($datafines as $row5): ?>
                    <td><?php echo !empty($row5->pconamount)?$row5->pconamount:0; ?></td>
                <?php endforeach ?>
                <td class="hidden">
                    <?php $rctr=0;foreach($datas as $ca):$rctr+=1;?>
                    <?php if ($row->id_income == $ca->id_fromincome): ?>
                    <div id="bca<?php echo $ca->id_incomeOthers?>" class="showdata">
                        <button type="button" class="btn btn-danger removeeditcontriothers" id="<?php echo $ca->id_incomeOthers ?>" data-id="<?php echo $ca->id_incomeOthers ?>" style="position: absolute;right: 25px">
                            Remove
                        </button>
                            <fieldset>
                                <div class="col-xs-12">
                                    <div class="col-xs-4 col-lg-4">Others (specify) : </div>
                                    <div class="col-xs-4 col-lg-4"><?php echo $ca->other_title; ?></div>
                                </div>
                                <div class="col-xs-12">
                                    <div class="col-xs-4 col-lg-4">Amount : </div>
                                    <div class="col-xs-4 col-lg-4"><?php echo $ca->other_amount; ?></div>
                                </div>
                            </fieldset>
                    </div>
                    <?php endif; ?>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $octr=0;foreach($contriedit as $cb):$octr+=1;
                    if($row->id_income == $cb->id_fromincome):
                    ?>
                    <div id="divcontriedit<?php echo $cb->id_contrisub?>" class="showdata">
                    <input type="hidden" name="caid26<?php echo $octr;?>" value="<?php echo $cb->id_contrisub; ?>"/>
                    <button type="button" class="btn btn-danger removeeditcontri" id="<?php echo $cb->id_contrisub ?>" data-id="<?php echo $cb->id_contrisub ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <?php $financialList['Trust Fund'] =[
                        '0'  => 'Select',
                        '1' => 'Donation',
                        '2' => 'Grants',
                        '3' => 'Endowment'

                    ];     ?>
                    <?php $modepayment['Mode of Payment'] =[
                        '0'  => 'Select',
                        '1' => 'In-kind',
                        '2' => 'Cash'
                    ];
                        ?>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Trust Fund : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->finance_desc; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Mode of Payment : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->description; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Estimated Monitary Value : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php else: ?>

                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datadevelopmentedit as $cc):$pctr+=1;
                    if($row->id_income == $cc->id_fromincome):
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_devfees?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditdevelopment" id="<?php echo $cc->id_devfees ?>" data-id="<?php echo $cc->id_devfees ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Devt Fee/ Royalty : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->devfee_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->dev_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datafinesedit as $dd):$pctr+=1;
                    if($row->id_income == $dd->id_fromincome):
                    ?>
                    <div id="divpenaltyedit<?php echo $dd->id_penalty?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditpenalty" id="<?php echo $dd->id_penalty ?>" data-id="<?php echo $dd->id_penalty ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Fines and Penalties : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $rctrs=0;foreach($datadisburseedit as $rowdis):$rctrs+=1;?>
                    <?php if ($row->id_income == $rowdis->id_fromincome): ?>
                    <div id="bca1<?php echo $rowdis->id_ipafdisburse ?>" class="showdata">
                    <input type="hidden" name="caaa<?php echo $rctrs;?>" value="<?php echo $rowdis->id_ipafdisburse; ?>"/>
                    <button type="button" class="btn btn-danger removeeditdisbursement" id="<?php echo $rowdis->id_ipafdisburse ?>" data-id="<?php echo $rowdis->id_ipafdisburse ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <div class="col-xs-12">
                                <div class="col-xs-4 col-lg-4">Amount : </div>
                                <div class="col-xs-4 col-lg-4"><?php echo $rowdis->disbursement_amount; ?></div>
                            </div>
                            <div class="col-xs-12">
                                <div class="col-xs-4 col-lg-4">Remarks : </div>
                                <div class="col-xs-4 col-lg-4"><?php echo $rowdis->disbursement_remarks; ?></div>
                            </div>
                        </fieldset>
                    </div>
                    <?php endif; ?>
                    <?php endforeach;?>
                </td>
                 <td>
                    <button type="button" value="<?php echo $row->id_income;?>" class="btn btn-info btn-xs btn-edit-income" onclick="editincome(this);">Edit</button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeipaf" data-id="<?php echo $row->id_income ?>" title="Remove">Remove</button>
                </td>
            </tr>
                <?php
                endforeach;
                foreach ($data1 as $gtotal1 ):
                foreach ($data2 as $gtotal2 ):
                    foreach ($data4 as $gtotal3 ):
                ?>
                    <tr style="background-color: #ff8000; color: #fff; font-size: 24px; font-weight: 700;">
                        <?php $Gsum_income = $gtotal1->Grand_totals + $gtotal2->GsumOther + $gtotal3->Gsumdevelopment; ?>
                        <td colspan="9" style="text-align: left">GRAND TOTAL</td>
                        <td colspan="" style="text-align: right"><?php echo number_format($Gsum_income,2); ?></td>
                        <td colspan="11"></td>
                    </tr>
                    <?php
                    endforeach;
                endforeach;
            endforeach;
    }


      public function fetchRecog(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getRecognition($codegens);
        foreach($data as $row):
            $code2 = $row->recognition_code;
            $data2_1 = $this->pamain_model->getRecognitionCriteriaRamsar($code2);
            $title ="";
            foreach($data2_1 as $row2):
                $title = $row2->try2;
            endforeach;
            $data2 = $this->pamain_model->getRecognitionCriteriaRamsarList($code2);

            ?>
             <tr id="<?php echo $row->id_interrecog; ?>" class="trow">
                <?php if ($row->recognition == "8"){ ?>
                    <td><?php echo $row->reg_desc."(".$row->inscribed.") ".(!empty($row->siteno)?''."<br> Site No./Code:  ".$row->siteno:""); ?></td>
                <?php } else if($row->recognition == "3") { ?>
                    <td><?php echo $row->reg_desc."<br>".$title.(!empty($row->siteno)?''."<br> Site No./Code:  ".$row->siteno:"")."<br>Area(has) :".number_format($row->recog_area_ha,2); ?></td>
                <?php } else if($row->recognition == "7") { ?>
                    <td><?php echo $row->reg_desc."<br> Area(sq. km.):  ".number_format($row->recog_area_sq,2); ?></td>
                <?php } else if($row->recognition == "2" || $row->recognition == "6") { ?>
                    <td><?php echo $row->reg_desc."<br> Area(has):  ".number_format($row->recog_area_ha,2); ?></td>
                <?php } else if($row->recognition == "4" || $row->recognition == "5") { ?>
                    <td><?php echo $row->reg_desc.(!empty($row->siteno)?''."<br> Site No./Code:  ".$row->siteno:"")."<br> Area(has):  ".number_format($row->recog_area_ha,2); ?></td>
                <?php } else if($row->recognition == "1") { ?>
                    <td><?php echo $row->reg_desc.(!empty($row->recog_sub)?"<br>".$row->int_crit." ".$row->crit_desc:"")."<br> Area(has):  ".number_format($row->recog_area_ha,2); ?></td>
                <?php } ?>
                <td><?php echo $row->month_declared." ".(!empty($row->day_declared)?$row->day_declared.", ":"").$row->year_declared; ?></td>

                <td class="hide"><?php echo $row->inscribed; ?></td>
                <td class="hide"><?php echo $row->recognition; ?></td>
                <td class="hide"><?php echo $row->month_declared; ?></td>
                <td class="hide"><?php echo $row->year_declared; ?></td>
                <td class="hide"><?php echo $row->siteno; ?></td>
                <td class="hide"><?php echo $row->recog_area_ha; ?></td>
                <td class="hide"><?php echo $row->recog_area_sq; ?></td>
                <td class="hide"><?php  ?>
                    <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/recognition_shapefile/').$row->file_attached_map ?>"><?php echo !empty($row->file_attached_map)?$row->file_attached_map:""?></a></td>
                <td class="hide"><?php echo $row->file_attached_map; ?></td>
                <td class="hide"><?php echo $row->recognition_code; ?></td>
                <td class="hidden">
                    <?php foreach ($data2 as $dd): ?>
                        <div id="divdevelopmentedit<?php echo $dd->id_recog_critlist?>" class="showdata">
                        <button type="button" class="btn btnbtn btn-danger btn-xs removerecogcriterias" id="<?php echo $dd->id_recog_critlist ?>" data-id="<?php echo $dd->id_recog_critlist ?>" style="position: absolute;right: 25px">
                            Remove
                        </button>
                            <fieldset>
                                <?php echo $dd->int_crit.") ".$dd->crit_desc; ?>
                            </fieldset>
                        </div>
                    <?php endforeach; ?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_interrecog;?>" class="btn btnbtn btn-info btn-xs" onclick="editrecognition(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removerecog" data-id="<?php echo $row->id_interrecog ?>" title="Remove">Remove</button>
                     <input type="hidden" id="cpea<?php echo $row->id_interrecog;?>" value="<?php echo $row->recognition; ?>" />
                    <input type="hidden" id="cpintcit<?php echo $row->id_interrecog;?>" value="<?php echo $row->recog_sub; ?>" />
                    <input type="hidden" id="cpintcit1<?php echo $row->id_interrecog;?>" value="<?php echo $row->month_declared; ?>" />
                    <input type="hidden" id="cpintcit2<?php echo $row->id_interrecog;?>" value="<?php echo $row->year_declared; ?>" />
                    <input type="hidden" id="cpintcit3<?php echo $row->id_interrecog;?>" value="<?php echo $row->day_declared; ?>" />
                    <input type="hidden" id="cpintcit4<?php echo $row->id_interrecog;?>" value="<?php echo $row->recognition_code; ?>" />
                </td>
            </tr>
            <?php
        endforeach;
        // }
    }

    public function refreshrecogcriterias()
    {
        $codes = $this->input->post('codegens');
        $data = $this->pamain_model->getRecognitionCriteriaRamsarList($codes);
        foreach($data as $dd):;                    ?>
           <div id="divdevelopmentedit<?php echo $dd->id_recog_critlist?>" class="showdata">
               <button type="button" class="btn btnbtn btn-danger btn-xs removerecogcriterias" id="<?php echo $dd->id_recog_critlist ?>" data-id="<?php echo $dd->id_recog_critlist ?>" style="position: absolute;right: 25px">
                   Remove
               </button>
                   <fieldset>
                       <?php echo $dd->int_crit.") ".$dd->crit_desc; ?>
                   </fieldset>
           </div>
        <?php endforeach;
    }

    public function deleteRecog($id = null)
        {
        $sql = "DELETE FROM tblrecognition WHERE id_interrecog = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
            echo json_encode($output);
        }

        public function addrecognitionCriterias()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('recog-gencode',true),
            'recognition_code'    => $this->input->post('recog-gencode2',true),
            'criteria_list'    => $this->input->post('edit-int_crit',true)
        ];

        $query = $this->pamain_model->insertrecognitionCriterias($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added';
                }
        echo json_encode($output);
    }


    public function deleteIncome($id = null)
        {

         $sql1 = "DELETE FROM tblpaipafincome WHERE id_income = '$id'";
         $sql2 = "DELETE FROM tblpaipafincomeothers WHERE id_fromincome = '$id'";
         $sql3 = "DELETE FROM tblpaipafcontrisub WHERE id_fromincome = '$id'";
         $sql4 = "DELETE FROM tblpaipafdevfee WHERE id_fromincome = '$id'";
         $sql5 = "DELETE FROM tblpaipafpenalty WHERE id_fromincome = '$id'";

        if($this->db->query($sql1) &&
           $this->db->query($sql2) &&
           $this->db->query($sql3) &&
           $this->db->query($sql4) &&
           $this->db->query($sql5))
        {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchVisitors(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallvisitors($codegens);
        $dataTotal = $this->pamain_model->getgrandtotalvisitors($codegens);

        foreach($data as $row){ ?>
            <?php if (empty($row->id_visitors)){ ?>
                <tr id="<?php echo $row->id_visitors; ?>" class="trow">
                    <td colspan="11" style="font-style: italic;text-align: center;">No Data</td>
                </tr>
            <?php }else{ ?>
                <tr id="<?php echo $row->id_visitors; ?>" class="trow">
                    <td style="text-align: center"><?php echo $row->date_month." ".$row->date_day.", ".$row->date_year; ?></td>
                    <td style="text-align: center"><?php echo $row->no_male_local; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_local; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_student; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_student; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_student; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_pwd; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_pwd; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_pwd; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_sc; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_sc; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_sc; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_children; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_children; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_children; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_foreign; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_foreign; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_foreign; ?></td>
                    <td style="text-align: center"><?php echo $row->total_male; ?></td>
                    <td style="text-align: center"><?php echo $row->total_female; ?></td>
                    <td style="color: red;font-weight: 700;text-align: center"><?php echo $row->grand_total; ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_visitors;?>" class="btn btn-info btn-edit-visitors" onclick="editvisitors(this);">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removevisitors" data-id="<?php echo $row->id_visitors ?>" title="Remove">Remove</button>
                        <input type="hidden" name="visitm<?php echo $row->id_visitors;?>" value="<?php echo $row->date_month; ?>"/>
                        <input type="hidden" name="visitd<?php echo $row->id_visitors;?>" value="<?php echo $row->date_day; ?>"/>
                        <input type="hidden" name="visity<?php echo $row->id_visitors;?>" value="<?php echo $row->date_year; ?>"/>

                    </td>
                </tr>
            <?php }

            }
            foreach($dataTotal as $Trow){ ?>
                <tr>
                    <td style="color: red;font-weight: 700;text-align: center">GRAND TOTAL</td>
                    <td style="color: red;font-weight: 700;text-align: right" colspan="3"><?php echo $Trow->gtadults; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtstudents; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtpwd; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtsc; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtchildren; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtforeign; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;font-size: 24px" colspan="3"><?php echo $Trow->overallGrandTotal; ?></td>
                    <td></td>
                </tr>
            <?php
            }
    }

    public function deleteVisitors($id = null)
        {
        $sql = "DELETE FROM tblpaipafvisitors WHERE id_visitors = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchContri(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->searcdatetrust($codegens);

        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            $id = $row->id_trustreceipt;
            $datacontri = $this->pamain_model->get_trust_data($id);
            $datadevelopment = $this->pamain_model->get_development_data($id);
            $datapenalty = $this->pamain_model->get_penalty_data($id);
            ?>
            <?php if (empty($row->id_trustreceipt)) { ?>
            <tr id="<?php echo $row->id_trustreceipt; ?>" class="trow">
                <td colspan="9" style="text-align: center;font-style: italic;">No Data</td>
            </tr>
            <?php } else { ?>
            <tr id="<?php echo $row->id_trustreceipt; ?>" class="trow">
                <td style="text-align: center"><?php echo $row->trust_month; ?></td>
                <td style="text-align: center"><?php echo $row->trust_day; ?></td>
                <td style="text-align: center"><?php echo $row->trust_year; ?></td>
                <td style="text-align: center"><?php echo $row->finance; ?></td>
                <td style="text-align: center"><?php echo $row->mode; ?></td>
                <td style="text-align: center"><?php echo $row->amounts; ?></td>
                <td style="text-align: center"><?php echo $row->dconamount; ?></td>
                <td style="text-align: center"><?php echo $row->dconpenaltyamount; ?></td>
                <td class="hidden">
                    <?php $octr=0;foreach($datacontri as $cb):$octr+=1;
                    ?>
                    <div id="divcontriedit<?php echo $cb->id_contrisub?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditcontri" id="<?php echo $cb->id_contrisub ?>" data-id="<?php echo $cb->id_contrisub ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <?php $financialList['Trust Fund'] =[
                        '0'  => 'Select',
                        '1' => 'Donation',
                        '2' => 'Grants',
                        '3' => 'Endowment'

                    ];     ?>
                    <?php $modepayment['Mode of Payment'] =[
                        '0'  => 'Select',
                        '1' => 'In-kind',
                        '2' => 'Cash'
                    ];
                        ?>
                    <fieldset>
                        <input type="hidden" name="caid26<?php echo $octr;?>" value="<?php echo $cb->id_contrisub; ?>"/>
                        <input type="hidden" name="idcontri" value="<?php echo $row->id_trustreceipt; ?>"/>
                        <input type="hidden" name="codegenerated" value="<?php echo $row->generatedcode; ?>"/>
                        <input type="hidden" name="idmonthcontri" value="<?php echo $row->trust_month; ?>"/>
                        <input type="hidden" name="iddaycontri" value="<?php echo $row->trust_day; ?>"/>
                        <input type="hidden" name="idyearcontri" value="<?php echo $row->trust_year; ?>"/>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Trust Fund : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->finance_desc; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Mode of Payment : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->description; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Estimated Monitary Value : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datadevelopment as $cc):$pctr+=1;
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_devfees?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditdevelopment" id="<?php echo $cc->id_devfees ?>" data-id="<?php echo $cc->id_devfees ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>

                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Devt Fee/ Royalty : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->devfee_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->dev_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datapenalty as $dd):$pctr+=1;
                    ?>
                    <div id="divpenaltyedit<?php echo $dd->id_penalty?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditpenalty" id="<?php echo $dd->id_penalty ?>" data-id="<?php echo $dd->id_penalty ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>

                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Fines and Penalties : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_trustreceipt;?>" class="btn btn-info btn-edit-contri" onclick="editcontri(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removecontri" data-id="<?php echo $row->id_trustreceipt ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php } ?>

            <?php
            // }
        }
    }

    public function deleteTrustContri($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpaipafcontrisub WHERE id_contrisub = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function deleteTrustDevelopment($id = null)
    {
    $sql = "DELETE FROM tblpaipafdevfee WHERE id_devfees = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

		public function deleteinitialcomphistory($id = null)
    {
    $sql = "DELETE FROM tblpamainlegislation_history WHERE id_legishistory = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

        public function deleterecognitioncriterias($id = null)
    {
    $sql = "DELETE FROM tblrecognition_criteria_list WHERE id_recog_critlist = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteapasuSOs($id = null)
    {
    $sql = "DELETE FROM tblapasu_sofile WHERE id_file_apasu = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deletethreatlisted($id = null)
    {
    $sql = "DELETE FROM tblpathreat_multi WHERE id_multi_threat = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteperformmeas($id = null)
    {
    $sql = "DELETE FROM tblipaf_physical_performace_measure WHERE id_performance_measure = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deletepambtechcom($id = null)
    {
    $sql = "DELETE FROM tblpambmember_techcomm WHERE id_techcomms = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

     public function deletefinespenlaties($id = null)
    {
    $sql = "DELETE FROM tblpaipafpenalty WHERE id_penalty = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deletevisitorspayments($id = null)
    {
    $sql = "DELETE FROM tblpavisitorspayment WHERE id_visitor_payment = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteContri($id = null)
        {
        $sql = "DELETE FROM tblpaipafcontri WHERE id_contri = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_contri(){
        $gencode = $this->input->post("contri-gencode");
        $contri = $this->input->post("trustcontri");
        $mode = $this->input->post("trustmode");
        $amount = $this->input->post("trustamount");
        $remarks = $this->input->post("trustremarks");

        if($this->session->userdata('email')){

            if(!empty($this->input->post('edit-contribution')) || !empty($this->input->post('edit-mode_donation'))){
                foreach($this->input->post('edit-contribution') as $ccnt => $ctr)
                {
                    $aal = array('id_fromcontri' => $this->input->post('idcontri'),
                                'generatedcode' => $this->input->post('codegenerated'),
                                'month_contri' => $this->input->post('idmonthcontri'),
                                'day_contri' => $this->input->post('iddaycontri'),
                                'year_contri' => $this->input->post('idyearcontri'),
                                'trustfund' => $this->input->post("edit-contribution")[$ccnt],
                                'mode_payment' => $this->input->post('edit-mode_donation')[$ccnt],
                                'contri_amount' => $this->input->post("edit-financial_amount")[$ccnt],
                                'contri_remarks' => $this->input->post('edit-financial_details')[$ccnt]
                            );
                    $this->pamain_model->add_IpafcontriOther($aal);
                }
            }

            if(!empty($this->input->post('edit-development_amount')) || !empty($this->input->post('edit-development_details'))){
                foreach($this->input->post('edit-development_amount') as $ccnt => $ctr)
                {
                    $abl = array('id_fromtrust' => $this->input->post('idcontri'),
                                'generatedcode' => $this->input->post('codegenerated'),
                                'dev_month' => $this->input->post('idmonthcontri'),
                                'dev_day' => $this->input->post('iddaycontri'),
                                'dev_year' => $this->input->post('idyearcontri'),
                                'devfee_amount' => $this->input->post("edit-development_amount")[$ccnt],
                                'dev_remarks' => $this->input->post('edit-development_details')[$ccnt]
                            );
                    $this->pamain_model->add_IpafdevelopmentOther($abl);
                }
            }

            if(!empty($this->input->post('edit-penalty_amount')) || !empty($this->input->post('edit-penalty_details'))){
                foreach($this->input->post('edit-penalty_amount') as $ccnt => $ctr)
                {
                    $acl = array('id_fromtrust' => $this->input->post('idcontri'),
                                'generatedcode' => $this->input->post('codegenerated'),
                                'penalty_month' => $this->input->post('idmonthcontri'),
                                'penalty_day' => $this->input->post('iddaycontri'),
                                'penalty_year' => $this->input->post('idyearcontri'),
                                'penalty_amount' => $this->input->post("edit-penalty_amount")[$ccnt],
                                'penalty_remarks' => $this->input->post('edit-penalty_details')[$ccnt]
                            );
                    $this->pamain_model->add_IpafpenaltyOther($acl);
                }
            }

            echo json_encode(['result' => 'things you want to show']);


        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchsearchbydateTrust(){
        $codegens = $this->input->post('code');
        $year = $this->input->post('yearselect');
        $month = $this->input->post('monthselect');
        $data = $this->pamain_model->getsearcdatetrust($codegens,$month,$year);
           foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            $id = $row->id_trustreceipt;
            $datacontri = $this->pamain_model->get_trust_data($id);
            $datadevelopment = $this->pamain_model->get_development_data($id);
            $datapenalty = $this->pamain_model->get_penalty_data($id);
            ?>
            <?php if (empty($row->id_trustreceipt)) { ?>
            <tr id="<?php echo $row->id_trustreceipt; ?>" class="trow">
                <td colspan="9" style="text-align: center;font-style: italic;">No Data</td>
            </tr>
            <?php } else { ?>
            <tr id="<?php echo $row->id_trustreceipt; ?>" class="trow">
                <td style="text-align: center"><?php echo $row->trust_month; ?></td>
                <td class="hidden" style="text-align: center"><?php echo $row->trust_day; ?></td>
                <td style="text-align: center"><?php echo $row->trust_year; ?></td>
                <td style="text-align: center"><?php echo $row->finance; ?></td>
                <td style="text-align: center"><?php echo $row->mode; ?></td>
                <td style="text-align: center"><?php echo $row->amounts; ?></td>
                <td style="text-align: center"><?php echo $row->dconamount; ?></td>
                <td style="text-align: center"><?php echo $row->dconpenaltyamount; ?></td>
                <td class="hidden">
                    <?php $octr=0;foreach($datacontri as $cb):$octr+=1;
                    ?>
                    <div id="divcontriedit<?php echo $cb->id_contrisub?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditcontri" id="<?php echo $cb->id_contrisub ?>" data-id="<?php echo $cb->id_contrisub ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <?php $financialList['Trust Fund'] =[
                        '0'  => 'Select',
                        '1' => 'Donation',
                        '2' => 'Grants',
                        '3' => 'Endowment'

                    ];     ?>
                    <?php $modepayment['Mode of Payment'] =[
                        '0'  => 'Select',
                        '1' => 'In-kind',
                        '2' => 'Cash'
                    ];
                        ?>
                    <fieldset>
                        <input type="hidden" name="caid26<?php echo $octr;?>" value="<?php echo $cb->id_contrisub; ?>"/>
                        <input type="hidden" name="idcontri" value="<?php echo $row->id_trustreceipt; ?>"/>
                        <input type="hidden" name="codegenerated" value="<?php echo $row->generatedcode; ?>"/>
                        <input type="hidden" name="idmonthcontri" value="<?php echo $row->trust_month; ?>"/>
                        <input type="hidden" name="iddaycontri" value="<?php echo $row->trust_day; ?>"/>
                        <input type="hidden" name="idyearcontri" value="<?php echo $row->trust_year; ?>"/>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Trust Fund : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->finance_desc; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Mode of Payment : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->description; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Estimated Monitary Value : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_remarks; ?></div>
                        </div>
                        <!-- <ul><li>
                            <input type="hidden" name="caid2<?php echo $octr;?>" value="<?php echo $cb->id_contrisub; ?>"/>
                            <?= form_label('Trust Fund','','for="trustcontri"').form_dropdown("trustcontri$octr",$financialList,$cb->trustfund,'placeholder="" id="trustcontri$octr"')?>
                        </ul></li>
                        <ul><li>
                            <?= form_label('Mode of Payment','','for="trustmode"').form_dropdown("trustmode$octr",$modepayment,$cb->mode_payment,'placeholder="" id="trustmode$octr"')?>
                        </ul></li>
                        <ul><li>
                            <?= form_label('Estimated Monitary Value','','for="trustamount"').form_input("trustamount$octr",$cb->contri_amount,'placeholder="" id="trustamount$octr"')?>
                        </ul></li>
                        <ul><li>
                            <?= form_label('Remarks','','for="trustremarks"').form_textarea("trustremarks$octr",$cb->contri_remarks,'placeholder="" id="trustremarks$octr"')?>
                        </li></ul> -->
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datadevelopment as $cc):$pctr+=1;
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_devfees?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditdevelopment" id="<?php echo $cc->id_devfees ?>" data-id="<?php echo $cc->id_devfees ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>

                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Devt Fee/ Royalty : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->devfee_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->dev_remarks; ?></div>
                        </div>

                       <!--  <ul><li>
                            <?= form_label('Devt Fee/ Royalty','','for="developmentfee"').form_input("developmentfee$pctr",$cc->devfee_amount,'placeholder="" id="developmentfee$pctr"')?>
                        </ul></li>
                        <ul><li>
                            <?= form_label('Remarks','','for="developmentremarks"').form_textarea("developmentremarks$pctr",$cc->dev_remarks,'placeholder="" id="developmentremarks$pctr"')?>
                        </li></ul> -->
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datapenalty as $dd):$pctr+=1;
                    ?>
                    <div id="divpenaltyedit<?php echo $dd->id_penalty?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditpenalty" id="<?php echo $dd->id_penalty ?>" data-id="<?php echo $dd->id_penalty ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>

                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Fines and Penalties : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_remarks; ?></div>
                        </div>
                        <!-- <ul><li>
                            <?= form_label('Fines and Penalties','','for="penalty_amount"').form_input("penalty_amount$pctr",$dd->penalty_amount,'placeholder="" id="penalty_amount$pctr"')?>
                        </ul></li>
                        <ul><li>
                            <?= form_label('Remarks','','for="penalty_remarks"').form_textarea("penalty_remarks$pctr",$dd->penalty_remarks,'placeholder="" id="penalty_remarks$pctr"')?>
                        </li></ul> -->
                    </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_trustreceipt;?>" class="btn btn-info btn-edit-contri" onclick="editcontri(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removecontri" data-id="<?php echo $row->id_trustreceipt ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php } ?>

            <?php
            // }
        }
    }

    public function fetchsearchbydateVisitor(){
        $codegens = $this->input->post('code');
        $year = $this->input->post('yearselect');
        $month = $this->input->post('monthselect');
        $data = $this->pamain_model->getsearchallvisitors($codegens,$year,$month);
        $dataTotal = $this->pamain_model->getsearchallvisitorsGrandtotal($codegens,$year,$month);

        foreach($data as $row){ ?>
            <?php if (empty($row->id_visitors)){ ?>
                <tr id="<?php echo $row->id_visitors; ?>" class="trow">
                    <td colspan="12" style="font-style: italic;text-align: center;">No Data</td>
                </tr>
            <?php }else{ ?>
                <tr id="<?php echo $row->id_visitors; ?>" class="trow">
                    <td style="text-align: center"><?php echo $row->date_month." ".$row->date_day.", ".$row->date_year; ?></td>
                    <td style="text-align: center"><?php echo $row->no_male_local; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_local; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_student; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_student; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_student; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_pwd; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_pwd; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_pwd; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_sc; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_sc; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_sc; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_local_children; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_local_children; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_children; ?></td>

                    <td style="text-align: center"><?php echo $row->no_male_foreign; ?></td>
                    <td style="text-align: center"><?php echo $row->no_female_foreign; ?></td>
                    <td style="color:red;text-align: center"><?php echo $row->total_foreign; ?></td>
                    <td style="text-align: center"><?php echo $row->total_male; ?></td>
                    <td style="text-align: center"><?php echo $row->total_female; ?></td>
                    <td style="color: red;font-weight: 700;text-align: center"><?php echo $row->grand_total; ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_visitors;?>" class="btn btn-info btn-edit-visitors" onclick="editvisitors(this);">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removevisitors" data-id="<?php echo $row->id_visitors ?>" title="Remove">Remove</button>
                    </td>
                </tr>
                <?php } ?>
            <?php } ?>

                <?php foreach($dataTotal as $Trow){ ?>
                <tr>
                    <td style="color: red;font-weight: 700;text-align: center">GRAND TOTAL</td>
                    <td style="color: red;font-weight: 700;text-align: right" colspan="3"><?php echo $Trow->gtadults; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtstudents; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtpwd; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtsc; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtchildren; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;" colspan="3"><?php echo $Trow->gtforeign; ?></td>
                    <td style="color: red;font-weight: 700;text-align: right;font-size: 24px" colspan="3"><?php echo $Trow->overallGrandTotal; ?></td>
                    <td></td>
                </tr>


            <?php
        }
    }

    public function getwclass()
        {
       $idcat = $this->input->post('idcat');
            if (!empty($idcat)) {
            $query = $this->db->select('*')
                ->from('tblclass')
                ->where('WCode',$idcat)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $item) {
                    $option .= "<option value=\"$item->id_c\">$item->ClassDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getworder()
        {
       $idclass = $this->input->post('idclass');
            if (!empty($idclass)) {
            $query = $this->db->select('*')
                ->from('tblorderw')
                ->where('ClassCodes',$idclass)
                ->order_by('OrderDesc')
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $item) {
                    $option .= "<option value=\"$item->id_family\">$item->OrderDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getwfamily()
        {
       $idorder = $this->input->post('idorder');
            if (!empty($idorder)) {
            $query = $this->db->select('*')
                ->from('tblfamily')
                ->where('Ordercode',$idorder)
                ->order_by('ScientificName')
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $item) {
                    $option .= "<option value=\"$item->id_scientific\">$item->ScientificName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getwcommon()
        {
       $idfamily = $this->input->post('idfamily');
       $code = $this->input->post('code');
            if (!empty($idfamily)) {
            $query = $this->db->select('*')
                ->from('tblwspeciesgenus')
                ->where('family_id',$idfamily)
                ->where('generatedcode',$code)
                ->order_by('commonNameSpecies')
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $item) {
                    $option .= "<option value=\"$item->id_genus\">$item->commonNameSpecies</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Species name available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function pambStrictProt()
    {
        $output2 = array('error' => false);
        #-------------------------------#

        if(!empty($_FILES['strict_prot_image']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/strict_protection_image';
            $config['file_name'] = $_FILES['strict_prot_image']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('strict_prot_image')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['pamainPambFile'] = (object)$postDataPambFile = [
            'generatedcode '    => $this->input->post('gencode',true),
            'image'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'description'       =>  $this->input->post('desc_strict',true),
        ];
        }else{
        $data['pamainPambFile'] = (object)$postDataPambFile = [
            'generatedcode '    => $this->input->post('gencode',true),
            'image'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'description'       =>  $this->input->post('desc_strict',true),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No image upload';
            } else {
               if(empty($postDataPambFile['id'])){
                $query = $this->pamain_model->createStrict($postDataPambFile);
                if($query){
                $output['status'] = 'Image successfully uploaded';
                }else{
                $output['error'] = true;
                $output['status'] = 'No document upload';
                }
            }
            }


        }
        $data['files'] = $this->pamain_model->getRows();
        echo json_encode($output);
    }

    public function deleteStricts($id = null)
        {
            $sql1 = $this->db->where('id',$id)
                                            ->get('tblstrictprotzone')
                                            ->row();
            unlink('bmb_assets2/upload/strict_protection_image/'.$sql1->image);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblstrictprotzone WHERE id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchstrictzone(){
        $codegens = $this->input->post('codegens');
        $idS = $this->input->post('pasu_idd');
        $data = $this->pamain_model->getAllStrictzone($codegens);
        $data2 = $this->pamain_model->getAllstrictprotzoneTotal($codegens);
        foreach($data as $row){

            ?>
            <tr id="<?php echo $row->id; ?>" class="text-center trows">
                <td class="hidden"><?php echo $row->spzcat; ?></td>
                <td class="hidden"><?php echo $row->s_area; ?></td>
                <td class="hidden"><?php echo $row->description; ?></td>
                <?php if ($row->spzcat == 1): ?>
                    <td>Terrestrial</td>
                <?php elseif ($row->spzcat == 2): ?>
                    <td>Aquatic</td>
                <?php endif ?>
                <td><?php echo $row->description; ?></td>
                <td><?php echo number_format($row->s_area,3); ?></td>
                <td>
                    <?php
                    if ($row->strictarchipelagic == 1) {
                       echo "Yes";
                    }elseif($row->strictarchipelagic == 2){
                       echo "No";
                    }
                    ?>
                    <!-- <?php echo $answers; ?>                     -->
                    <button type="button" style="float: right;" class="btn btnbtn btn-danger btn-xs removeStricts" data-id="<?php echo $row->id ?>" title="Remove">Remove</button>
                    <button type="button" value="<?php echo $row->id;?>" style="float: right;" class="btn btnbtn btn-info btn-xs" onclick="edit_strict(this);">
                    Edit </button>
                    <input type="hidden" id="cp<?php echo $row->id;?>" value="<?php echo $row->id ?>" />
                    <input type="hidden" id="spz<?php echo $row->id;?>" value="<?php echo $row->spzcat ?>" />
                    <input type="hidden" id="archipel<?php echo $row->id;?>" value="<?php echo $row->strictarchipelagic ?>" />
                </td>
            </tr>
            <?php }
            foreach ($data2 as $stricttotal) { ?>
          <tr style="background-color: #ffcccc;font-weight: 700">
              <td colspan="2">GRAND TOTAL</td>
              <td colspan="2"><?php echo number_format($stricttotal->total_area,3); ?></td>
          </tr>

        <?php }
            ?>

            <?php

    }

    public function update_sProt(){
        $gencode = $this->input->post("strict-gencode");
        if($this->session->userdata('email')){
            $strict_id = $this->input->post("strict-id");
            $servicedetails1 = array('description' => $this->input->post("edit-descs"),
                                    // 'image'       => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture')),
                                    's_area'       => str_replace(',','',$this->input->post("edit-stricthas")),
                                    'spzcat'       => $this->input->post("edit-splcat"),
                                    'strictarchipelagic'       => $this->input->post("edit-strictarchisea"),
                            );
            $this->pamain_model->update_sProt($servicedetails1,$strict_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_Multiple(){
        $gencode = $this->input->post("multiple-gencode");
        if($this->session->userdata('email')){
            $multiId = $this->input->post("multiple-id");
            $servicedetails1 = array('description' => $this->input->post("edit-descs-multiple"),
                                    'area'       => str_replace(',','',$this->input->post("edit-stricthas-multiple")),
                                    'multicat'       => $this->input->post("edit-mcat"),
                                    'multiarchipelagic'       => $this->input->post("edit-marchisea"),
                            );
            $this->pamain_model->update_Multi($servicedetails1,$multiId);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

     public function deletestrict($id = null)
    {
            $sql1 = $this->db->where('id',$id)
                                            ->get('tblstrictprotzone')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblstrictprotzone WHERE id = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetcheventlist(){
        $code = $this->input->post('code');
        $event_data = $this->pamain_model->getalleventlists($code);
        foreach($event_data->result_array() as $row):
            $data[] = array(
            'id' => $row['id_paevent'],
            'title' => $row['event_title'],
            'desc' => $row['event_desc'],
            'conducted' => $row['event_conducted'],
            'start' => $row['event_start'],
            'end' => $row['event_end']
           );
        endforeach;
        echo json_encode($data);
    }

    public function fetchmultiplezone(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllMultiple($codegens);
        $data2 = $this->pamain_model->getAllmultipleusezoneTotal($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id; ?>" class="trows">
            <?php if ($row->multicat == 1): ?>
                <td>Terrestrial</td>
            <?php elseif ($row->multicat == 2): ?>
                <td>Aquatic</td>
            <?php endif ?>
                <td><?php echo $row->description; ?></td>
                <td><?php echo number_format($row->area,3); ?></div></td>
                <td>
                     <?php
                    if ($row->multiarchipelagic == 1) {
                       echo $answers = "Yes";
                    }elseif($row->multiarchipelagic == 2){
                       echo $answers = "No";
                    }
                    ?>
                    <button style='float: right;' type="button" class="btn btnbtn btn-danger btn-xs removemultiple" data-id="<?php echo $row->id ?>" title="Remove">Remove</button>
                    <button style='float: right;' type="button" value="<?php echo $row->id;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_multiple(this);">Edit</button>
                </td>
            <input type="hidden" id="cp<?php echo $row->id;?>" value="<?php echo $row->id; ?>" />
            <input type="hidden" id="catm<?php echo $row->id;?>" value="<?php echo $row->multicat; ?>" />
            <input type="hidden" id="march<?php echo $row->id;?>" value="<?php echo $row->multiarchipelagic; ?>" />
            </tr>

            <?php }
        foreach ($data2 as $multitotal) { ?>
          <tr style="background-color: #ffcccc;font-weight: 700">
              <td colspan="2">GRAND TOTAL</td>
              <td colspan="2"><?php echo number_format($multitotal->total_area,3); ?></td>
          </tr>

        <?php }
            ?>
        <?php
    }

     public function deletemultiple($id = null)
    {
            $sql1 = $this->db->where('id',$id)
                                            ->get('tblpamultiplezone')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpamultiplezone WHERE id = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_pambs(){
        $gencode = $this->input->post("ser-gencode");
        $now = date('Y-m-d');
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("ser-id");
            $servicedetails = array('fname' => $this->input->post("edit-fname"),
                                'mname' => $this->input->post("edit-mname"),
                                'lname' => $this->input->post("edit-lname"),
                                'pamb_suffix' => $this->input->post("edit-pamb_suffix"),
                                'sex' => $this->input->post("edit-sex-pamb"),
                                'civil_status' => $this->input->post("edit-maritalstatus_s"),
                                'residential_address' => $this->input->post("edit-address_s"),
                                'designation' => $this->input->post("edit-position_s"),
                                'office_name' => $this->input->post("edit-office_s"),
                                'appointment' => $this->input->post("edit-appointment_s"),
                                'appointment_month' => $this->input->post("edit-appointment_m"),
                                'appointment_day' => $this->input->post("edit-appointment_d"),
                                'appointment_year' => $this->input->post("edit-appointment_y"),
                                'status' => $this->input->post("edit-appointment_status"),
                                'sub_appointment' => $this->input->post("edit-subappointment"),
                                'pamb_landline' => $this->input->post("edit_pamo_landline"),
                                'pamb_mobile' => $this->input->post("edit_pamo_mobile"),
                                'techworkgrp' => $this->input->post("edit-twgchck")==null?0:1,
                                'techcom' => $this->input->post("edit-techcomchck")==null?0:1,
                                'execom' => $this->input->post("edit-execomchck")==null?0:1,
                                'date_update' => $now,
                                'alternateofficial' => $this->input->post('edit-alternateofficials',true),
                                'alternateofficial_sex' => $this->input->post('edit-aosex',true),
                                'alternateofficial_appoint_month' => $this->input->post('edit-aoamonth',true),
                                'alternateofficial_appoint_day' => $this->input->post('edit-aoaday',true),
                                'alternateofficial_appoint_year' => $this->input->post('edit-aoayear',true),
                                'alternateofficial_postition' => $this->input->post('edit-aoposition',true),
                                'name_twg' => $this->input->post('edit-twgname',true),
                                'name_techcom' => $this->input->post('edit-techcomname',true),
                                'techcomm_other' => $this->input->post('edit-othertechcom',true),
                                'pamb_codegen' => $this->input->post('ser-gencode2',true),
                                'cofname' => $this->input->post('edit-cofname',true),
                                'comname' => $this->input->post('edit-comname',true),
                                'colname' => $this->input->post('edit-colname',true),
                                'cosuffix' => $this->input->post('edit-cosuffix',true),
                                'coposition' => $this->input->post('edit-coposition',true),
                                'cosex' => $this->input->post('edit-cosex',true),
                                'colandline' => $this->input->post('edit-colandline',true),
                                'comobile' => $this->input->post('edit-comobile',true),
                                'cochair' => $this->input->post('edit-appointchkcochair',true)==null?0:1,
                                'pamb_file_appt' => (empty($this->input->post('edit-pambfile_appt_span'))?$this->input->post('edit-pambfile_appt_old'):$this->input->post('edit-pambfile_appt_span'))

                            );
            $this->pamain_model->update_member($servicedetails,$ser_id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/pamb_file_appointment/'.$scraperdelete);
            // } else {

            // }
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchThreat(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllThreat($codegens);
        foreach($data as $row){
            $code = $row->threat_gencode;
            $datathreat = $this->pamain_model->getthreatlistperPA($code);
            $cepaprinti = $this->pamain_model->get_threat_multiimages($code);

            ?>

            <tr id="<?php echo $row->id_threat; ?>" class="trows">
                <td>
                    <?php echo '<br><img src="../../../bmb_assets2/upload/img_threat/'.(!empty($row->img_threat)?$row->img_threat:'nophoto.jpg').'"style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>';?>
                    <?php echo "<br><b>Location : </b>".(!empty($row->threat_region)?$row->regionName:"").(!empty($row->threat_province)?", ".$row->provinceName:"").(!empty($row->threat_municipality)?", ".$row->municipalName:"").(!empty($row->threat_barangay)?", ".$row->barangayName:"")."<br>"; ?>
                    <?php $pctr=0;foreach($datathreat as $cc):$pctr+=1;
                    ?>
						<?php
			                 if ($cc->threat_long_degree_x == 1):
			                     $long = "East";
			                 elseif($cc->threat_long_degree_x == 2):
			                     $long = "West";
			                 else:
			                     $long = "";
			                 endif;
			                 if ($cc->threat_lat_degree_x == 1):
			                     $lat = "North";
			                 elseif($cc->threat_lat_degree_x == 2):
			                     $lat = "South";
			                 else:
			                     $lat = "";
			                 endif;
			            ?>
                        <div class="col-xs-12 container-boxes">
                            <div class="row-boxes">
                            <b>Nature of threat : </b> <?php echo $cc->natural_threats_desc; ?><br>
                            <b>Category : </b> <?php echo $cc->threats_category_desc; ?><br>
                            <b>Threats : </b> <?php echo $cc->sub_cat_desc; ?><br>
							<b><?php echo "Longitude : ".$long." ".(!empty($cc->threat_long_degree_x)?$cc->threat_long_degree_x."° ":"").(!empty($cc->threat_long_minute_x)?$cc->threat_long_minute_x."' ":"").(!empty($cc->threat_long_second_x)?$cc->threat_long_second_x."'' ":"")."<br>".
																					"Latitude : ".$lat." ".(!empty($cc->threat_lat_degree_x)?$cc->threat_lat_degree_x."° ":"").(!empty($cc->threat_lat_minute_x)?$cc->threat_lat_minute_x."' ":"").(!empty($cc->threat_lat_second_x)?$cc->threat_lat_second_x."'' ":"") ?></b>
                            </div>
                        </div>
                    <?php endforeach;?>
                    <div class="col-xs-12">
                        <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/img_threat_shpfile/').$row->threat_shpfile ?>"><?php echo $row->threat_shpfile ?></a>
                    </div>
                    <label>Actual Photo : </label>
                    <?php
                        foreach ($cepaprinti as $spec) {
                            echo "<div style='display: inline-block'>".(!empty($spec->threat_multi_images)?'<img src="'.base_url('bmb_assets2/upload/threat_multi_img/').(!empty($spec->threat_multi_images)?$spec->threat_multi_images:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px">':"")."</div>";
                        }
                    ?>
                    <div class="col-xs-12">
                    <button type="button" value="<?php echo $row->id_threat;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_threat(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeThreat" data-id="<?php echo $row->id_threat ?>" title="Remove">Remove</button>
                    </div>
                </td>
                <td class="hide"><?php echo '<img src="../../../bmb_assets2/upload/img_threat/'.$row->img_threat.'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'; ?></td>
                <td class="hide"><?php echo $row->threat_desc; ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/img_threat/'.$row->img_threat ?></td>
                <td class="hide"><?php echo $row->img_threat ?></td>
                <td class="hide"><?php echo $row->qualifier ?></td>
                <td class="hide"><?php echo $row->threats_location ?></td>
                <td class="hide"><?php echo $row->threats_sub ?></td>
                <td class="hide"><?php echo $row->threats_longitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->threats_longitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->threats_longitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->threats_latitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->threats_latitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->threats_latitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->date_upload ?></td>
                <td class="hide"><?php echo $row->date_update ?></td>
                <td class="hide"><?php echo $row->x_long ?></td>
                <td class="hide"><?php echo $row->y_lat ?></td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datathreat as $cc):$pctr+=1;
                    ?>
										<?php
			                 if ($cc->threat_long_direction_x == 1):
			                     $longs = "East";
			                 elseif($cc->threat_long_direction_x == 2):
			                     $longs = "West";
			                 else:
			                     $longs = "";
			                 endif;
			                 if ($cc->threat_lat_direction_x == 1):
			                     $lats = "North";
			                 elseif($cc->threat_lat_direction_x == 2):
			                     $lats = "South";
			                 else:
			                     $lats = "";
			                 endif;
			              ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_multi_threat?>" class="showdata">
                    <!-- <fieldset>  -->
                        <!-- <div class="col-xs-12"> -->
                            <div class="col-xs-12 container-boxes">
                                <div class="row-boxes">
                                    <b>Nature of threat : </b> <?php echo $cc->natural_threats_desc; ?><br>
                                    <b>Category : </b> <?php echo $cc->threats_category_desc; ?><br>
									<b>Threats : </b> <?php echo $cc->sub_cat_desc; ?><br>
									<b><?php echo "Longitude : ".$longs." ".(!empty($cc->threat_long_degree_x)?$cc->threat_long_degree_x."° ":"").(!empty($cc->threat_long_minute_x)?$cc->threat_long_minute_x."' ":"").(!empty($cc->threat_long_second_x)?$cc->threat_long_second_x."'' ":"")."<br>".
																									"Latitude : ".$lats." ".(!empty($cc->threat_lat_degree_x)?$cc->threat_lat_degree_x."° ":"").(!empty($cc->threat_lat_minute_x)?$cc->threat_lat_minute_x."' ":"").(!empty($cc->threat_lat_second_x)?$cc->threat_lat_second_x."'' ":"") ?></b>
                                    <br><button type="button" class="btn btn-danger btn-xs removethreatlist" id="<?php echo $cc->id_multi_threat ?>" data-id="<?php echo $cc->id_multi_threat ?>">Remove</button> <br><br>
                                </div>
                            </div>

                        <!-- </div> -->
                    <!-- </fieldset>   -->
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><?php echo $row->threat_gencode ?></td>
                <td class="hide"><?php echo $row->generatedcode ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/img_threat_shpfile/').$row->threat_shpfile ?>"><?php echo $row->threat_shpfile ?></a>
                </td>
                <td class="hide">
                    <?php echo $row->threat_shpfile ?>
                </td>
                <td class="hide">
                    <?php $rctr=0;foreach($cepaprinti as $ca):$rctr+=1;
                    ?>
                    <div id="bca<?php echo $ca->threat_images_id ?>" class="showdata">
                    <button type="button" class="btn btn-danger removeMultipleImageThreats2" id="<?php echo $ca->threat_images_id ?>" data-id="<?php echo $ca->threat_images_id ?>" style="position: absolute;right: 3px">
                        x
                    </button>
                    <ul><li style="text-align:left;">
                        <?php echo  '<br><img src="'.base_url().'bmb_assets2/upload/threat_multi_img/'.(!empty($ca->threat_multi_images)?$ca->threat_multi_images:'nophoto.jpg').'"style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'
                        ?>
                    </li></ul>
                    </div>
                    <?php endforeach;?>
                </td>
                <input type="hidden" id="trRank<?php echo $row->id_threat;?>" value="<?php echo $row->threats_rank ?>" />
                <input type="hidden" id="trMonth<?php echo $row->id_threat;?>" value="<?php echo $row->threats_month_observe ?>" />
                <input type="hidden" id="trYear<?php echo $row->id_threat;?>" value="<?php echo $row->threats_year_observe ?>" />
                <input type="hidden" id="trLong<?php echo $row->id_threat;?>" value="<?php echo $row->threats_longitude_dms_direction ?>" />
                <input type="hidden" id="trLat<?php echo $row->id_threat;?>" value="<?php echo $row->threats_latitude_dms_direction ?>" />
                <input type="hidden" id="threatloc1<?php echo $row->id_threat;?>" value="<?php echo $row->threat_region ?>" />
                <input type="hidden" id="threatloc2<?php echo $row->id_threat;?>" value="<?php echo $row->threat_province ?>" />
                <input type="hidden" id="threatloc3<?php echo $row->id_threat;?>" value="<?php echo $row->threat_municipality ?>" />
                <input type="hidden" id="threatloc4<?php echo $row->id_threat;?>" value="<?php echo $row->threat_barangay ?>" />

            </tr>

            <?php
        }
    }

    public function refreshmultipleimagethreats()
    {
        $cepacode = $this->input->post('codegens');
        $cepaprinti = $this->pamain_model->get_threat_multiimages($cepacode);
        $rctr=0;foreach($cepaprinti as $ca):$rctr+=1;
            ?>
            <div id="bca<?php echo $ca->threat_images_id ?>" class="showdata">
            <button type="button" class="btn btn-danger removeMultipleImageThreats2" id="<?php echo $ca->threat_images_id ?>" data-id="<?php echo $ca->threat_images_id ?>" style="position: absolute;right: 3px">
                x
            </button>
            <ul><li style="text-align:left;">
                <?php echo  '<br><img src="'.base_url().'bmb_assets2/upload/threat_multi_img/'.(!empty($ca->threat_multi_images)?$ca->threat_multi_images:'nophoto.jpg').'"style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>'
                ?>
            </li></ul>
            </div>
        <?php endforeach;
    }

     public function update_threat(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        $scraper = $this->input->post("edit-pic_threat");
        $scraperdelete = $this->input->post("edit-old_picture_map");

        if(!empty($_FILES['edit-pic_threat']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/img_threat';
            $config['file_name'] = $_FILES['edit-pic_threat']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_threat')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("threats-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("threats-id");
            $servicedetails = array('threat_desc' => $this->input->post("edit-threats-desc"),
                                    'nature_threats' => $this->input->post("edit-nature_threats"),
                                    'sub_nature_threats' => $this->input->post("edit-nature_threats_sub"),
                                    'threats_rank' => $this->input->post("edit-threats_cat_rank"),
                                    'qualifier' => $this->input->post("edit-qualifiers"),
                                    'threats_category' => $this->input->post("edit-threats_cat"),
                                    'threats_sub' => $this->input->post("edit-threats_cat_sub"),
                                    'threats_location' => $this->input->post("edit-threat_loc"),
                                    'threats_month_observe' => $this->input->post("edit-threat_dMonth"),
                                    'threats_year_observe' => $this->input->post("edit-threat_dYear"),
                                    'threats_longitude_dms_direction' => $this->input->post("edit-threats_longitude_dms_direction"),
                                    'threats_longitude_dms_degrees' => $this->input->post("edit-threats_longitude_dms_degrees"),
                                    'threats_longitude_dms_minutes' => $this->input->post("edit-threats_longitude_dms_minutes"),
                                    'threats_longitude_dms_seconds' => $this->input->post("edit-threats_longitude_dms_seconds"),
                                    'threats_latitude_dms_direction' => $this->input->post("edit-threats_latitude_dms_direction"),
                                    'threats_latitude_dms_degrees' => $this->input->post("edit-threats_latitude_dms_degrees"),
                                    'threats_latitude_dms_minutes' => $this->input->post("edit-threats_latitude_dms_minutes"),
                                    'threats_latitude_dms_seconds' => $this->input->post("edit-threats_latitude_dms_seconds"),
                                    'x_long' => $this->input->post("edit-ddlongoutput"),
                                    'y_lat' => $this->input->post("edit-ddlatoutput"),
                                    'date_update' => $now,
                                    'img_threat' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture-threat')),
                                    'threat_shpfile' => (empty($this->input->post('edit-shp_threat_txt'))?$this->input->post('edit-shp_threat_old'):$this->input->post('edit-shp_threat_txt')));
            $this->pamain_model->update_Threat($servicedetails,$ser_id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/img_threat/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function deleteThreat($id = null)
    {
            $sql1 = $this->db->where('id_threat',$id)
                                            ->get('tblpathreat')
                                            ->row();

            if ($sql1->img_threat == "nophoto.jpg" || empty($sql1->img_threat)) {

            }elseif (!empty($sql1->img_threat)) {
                unlink('bmb_assets2/upload/img_threat/'.$sql1->img_threat);
            }

        $output = array();
         $sql = "DELETE FROM tblpathreat WHERE id_threat = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchRef(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllRef($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_reference; ?>" class="trow">
                <td>
                    <?php if($row->type_citation == 1):
                             echo $row->type_reference."<br>".
                             $row->author.' ('.$row->ref_date_year.', '.$row->ref_date_month.') <i>'.$row->webtitleRef.'</i>. '.$row->websiteRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                          elseif($row->type_citation == 2):
                             echo $row->type_reference."<br>".
                             $row->author.' ('.$row->ref_date_year.') <i>'.$row->worktitleRef.'</i>. '.$row->bookpublisherRef.'. <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                          elseif($row->type_citation == 3):
                             echo $row->type_reference."<br>".
                             $row->author.' ('.$row->ref_date_year.') '.$row->journaltitleRef.'<i>'.$row->periodicalRef.'</i>. <i>'.$row->journalVolRef.'</i>, '.$row->journalpagerangeRef.', <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update;
                        endif; ?>
                    <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRef" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
                    <button type="button" style="float: right" value="<?php echo $row->id_reference;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_ref(this)">
                    Edit </button>
                </td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->type_citation; ?></td>
                <td class="hide"><?php echo $row->ref_date_month; ?></td>
                <td class="hide"><?php echo $row->ref_date_year; ?></td>
                <td class="hide"><?php echo $row->author; ?></td>
                <td class="hide"><?php echo $row->webtitleRef; ?></td>
                <td class="hide"><?php echo $row->websiteRef; ?></td>
                <td class="hide"><?php echo $row->worktitleRef; ?></td>
                <td class="hide"><?php echo $row->bookpublisherRef; ?></td>
                <td class="hide"><?php echo $row->journaltitleRef; ?></td>
                <td class="hide"><?php echo $row->periodicalRef; ?></td>
                <td class="hide"><?php echo $row->journalVolRef; ?></td>
                <td class="hide"><?php echo $row->journalpagerangeRef; ?></td>
                <td class="hide"><?php echo $row->link; ?></td>
                <td class="hide"><?php echo $row->ref_desc; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_update; ?></td>
            <input type="hidden" id="cR<?php echo $row->id_reference;?>" value="<?php echo $row->id_reference ?>" />
            <input type="hidden" id="cRss<?php echo $row->id_reference;?>" value="<?php echo $row->type_citation ?>" />

            </tr>

            <?php
        }
    }

    public function fetchRefResearch(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllRefResearch($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_reference; ?>" class="trow">
                <td><?php echo $row->author.' '.$row->ref_date_month.' '.$row->ref_date_year.'. <i style="color:blue;font-style:italic">'.$row->title.'</i>'.$row->place.' <a href="'.$row->link.'" target="_blank">'.$row->link.'</a><br>'."<b>Date created : </b>".$row->date_created."<br><b>Date last updated : </b>".$row->date_update; ?>
                    <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removeRef" data-id="<?php echo $row->id_reference ?>" title="Remove">Remove</button>
                    <button type="button" style="float: right" value="<?php echo $row->id_reference;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_ref(this)">
                    Edit </button>
                </td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->reference_desc; ?></td>
                <td class="hide"><?php echo $row->link; ?></td>
                <td class="hide"><?php echo $row->sponsoring_body; ?></td>
                <td class="hide"><?php echo $row->author; ?></td>
                <td class="hide"><?php echo $row->ref_date_month; ?></td>
                <td class="hide"><?php echo $row->ref_date_year; ?></td>
                <td class="hide"><?php echo $row->title; ?></td>
                <td class="hide"><?php echo $row->place; ?></td>
                <td class="hide"><?php echo $row->ref_desc; ?></td>
                <td class="hide"><?php echo $row->ref_usage; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_update; ?></td>
            <input type="hidden" id="cR<?php echo $row->id_reference;?>" value="<?php echo $row->id_reference ?>" />

            </tr>

            <?php
        }
    }



    public function deleteRef($id = null)
    {
            $sql1 = $this->db->where('id_reference',$id)
                                            ->get('tblpareference')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpareference WHERE id_reference = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function update_reference(){
        $gencode = $this->input->post("reference-gencode");
        $date_update = date("Y-m-d");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("reference-id");
            $servicedetails = array(
                                'type_citation' => $this->input->post("edit-type_citation"),
                                'ref_date_month' => $this->input->post("edit-ref_date_month"),
                                'ref_date_year' => $this->input->post("edit-ref_date_year"),
                                'author' => $this->input->post("edit-author"),
                                'webtitleRef' => $this->input->post("edit-webtitleRef"),
                                'websiteRef' => $this->input->post("edit-websiteRef"),
                                'worktitleRef' => $this->input->post("edit-worktitleRef"),
                                'bookpublisherRef' => $this->input->post("edit-bookpublisherRef"),
                                'journaltitleRef' => $this->input->post("edit-journaltitleRef"),
                                'periodicalRef' => $this->input->post("edit-periodicalRef"),
                                'journalVolRef' => $this->input->post("edit-journalVolRef"),
                                'journalpagerangeRef' => $this->input->post("edit-journalpagerangeRef"),
                                'link' => $this->input->post("edit-links"),
                                'ref_desc' => $this->input->post("edit-reference_desc"),
                                "date_update"   => $date_update);
            $this->pamain_model->update_Ref($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function othermapShpFile()
    {
        if(isset($_FILES["shp_othermap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/map_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_othermap'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydromonitoringShpFile()
    {
        if(isset($_FILES["shp_monitoringsite"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_monitoring_station_shp';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_monitoringsite'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function hydromonitoringShpFileEdit()
    {
        if(isset($_FILES["edit-shp_monitoringsite"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/hydro_monitoring_station_shp';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_monitoringsite'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function marineinfluriversShpFile()
    {
        if(isset($_FILES["shp_influerivers"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/marine_shp_influencing_river';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('shp_influerivers'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function othermapShpFileEdit()
    {
        if(isset($_FILES["edit-shp_othermap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/map_shpfile';
            $config['allowed_types'] = 'rar|zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-shp_othermap'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function update_map(){

        $scraper = $this->input->post("edit-pic_map");
        $scraperdelete = $this->input->post("edit-old_picture_map");

        $gencode = $this->input->post("map-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("map-id");
            $servicedetails = array('remarks' => $this->input->post("edit-map-desc"),
                                    'filename' => (empty($this->input->post('edit-img_outputspan'))?$this->input->post('edit-old_picture_map'):$this->input->post('edit-img_outputspan')),
                                    'map_shpfile' => (empty($this->input->post('edit-shp_othermap_txt'))?$this->input->post('edit-shp_othermap_old'):$this->input->post('edit-shp_othermap_txt')));
            $this->pamain_model->update_Maps($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function updateothergeohazard(){

        $scraper = $this->input->post("edit-pic_geohazard");
        $scraperdelete = $this->input->post("edit-old_picture_geohazard");

        if(!empty($_FILES['edit-pic_geohazard']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/other_geohazard_img';
            $config['file_name'] = $_FILES['edit-pic_geohazard']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_geohazard')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if($this->session->userdata('email')){
            $ser_id = $this->input->post("geohazard-id");
            $servicedetails = array('geohazard_desc' => $this->input->post("edit-geohazard-desc"),
                                    'geohazard_map' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_geohazard')),
                                    'geohazard_shpfile' => (empty($this->input->post('edit-shpzip_othergeohazard_text'))?$this->input->post('edit-shpzip_othergeohazard_old'):$this->input->post('edit-shpzip_othergeohazard_text')));
            $this->pamain_model->update_othergeohazardMaps($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }



    public function update_visitors(){

        $gencode = $this->input->post("visitors-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("visitors-id");
            $servicedetails = array('no_male_local' => $this->input->post("edit-no_male_local"),
                                    'no_female_local' => $this->input->post("edit-no_female_local"),
                                    'no_male_local_student' => $this->input->post("edit-no_male_local_student"),
                                    'no_female_local_student' => $this->input->post("edit-no_female_local_student"),
                                    'no_male_local_pwd' => $this->input->post("edit-no_male_local_pwd"),
                                    'no_female_local_pwd' => $this->input->post("edit-no_female_local_pwd"),
                                    'no_male_local_sc' => $this->input->post("edit-no_male_local_sc"),
                                    'no_female_local_sc' => $this->input->post("edit-no_female_local_sc"),
                                    'no_male_local_children' => $this->input->post("edit-no_male_local_children"),
                                    'no_female_local_children' => $this->input->post("edit-no_female_local_children"),

                                    'no_male_foreign' => $this->input->post("edit-no_male_foreign"),
                                    'no_female_foreign' => $this->input->post("edit-no_female_foreign"));
            $this->pamain_model->update_Visitors($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_fform()
    {
        $gencode = $this->input->post("ff-gencode");
        $date_update = date("Y-m-d");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("ff-id");
            $servicedetails = array('forest_formation' => $this->input->post("edit-fform-legend"),
                                    'forest_formation_area' => str_replace(',','',$this->input->post('edit-fform-area',true)),
                                    'forest_formation_remarks' => $this->input->post("edit-fform-remarks"),
                                    'date_updated' => $date_update,
                                    );
            $this->pamain_model->update_Fform($servicedetails,$ser_id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }


    public function update_topo(){

        $date_update = date("Y-m-d");

        $gencode = $this->input->post("topo-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("topo-id");
            $topodetails = array('topology_desc' => $this->input->post("edit-topo-desc"),
                             'topo_shpfile' => (!empty($this->input->post('edit-shp_topo_txt'))?$this->input->post('edit-shp_topo_txt'):$this->input->post("edit-shp_topo_old")),
                             'date_updated' => $date_update);
            $this->pamain_model->update_Topo($topodetails,$id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_reso_file(){

        $scraper = $this->input->post("edit-resofile");
        $scraperdelete = $this->input->post("edit-old_file_reso");

        $gencode = $this->input->post("resofile-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("resofile-id");
            $details = array('resolution_name' => $this->input->post("edit-resotitle"),
                                'resolution_no' => $this->input->post("edit-resono"),
                                'status' => $this->input->post("edit-pambstatus"),
                                'pambreso_code' => $this->input->post("resofile-pambresoCode"),
                                'month_chair' => $this->input->post("edit-date_approve_chair_month"),
                                'year_chair' => $this->input->post("edit-date_approve_chair_year"),
                                'month_sec' => $this->input->post("edit-date_affirmed_sec_month"),
                                'year_sec' => $this->input->post("edit-date_affirmed_sec_year"),
                                'file_reso' => (empty($this->input->post('edit-pambresotxt'))?$this->input->post('edit-old_file_reso'):$this->input->post('edit-pambresotxt')));
            $this->pamain_model->updateResoFile($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/pdf_file_resolution/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_mgmtplant(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $scraper = $this->input->post("edit-mngmtplanfile");
        $scraperdelete = $this->input->post("edit-old_mngmtplanfile");

        $gencode = $this->input->post("mgmtplan-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("mgmtplan-id");
            $details = array('mpMonth' => $this->input->post("edit-mpMonth"),
                             'mpDay' => $this->input->post("edit-mpDay"),
                             'mpYear' => $this->input->post("edit-mpYear"),
                             'mpStatus' => $this->input->post("edit-mpStatus"),
                             'mpDuration' => $this->input->post("edit-mpduration"),
                             'mngmtplan_remarks' => $this->input->post("edit-mngmtplanremarks"),
                             'mpObjectives' => $this->input->post("edit-mgmtplanobjective"),
                             'last_update' => $now,
                             'mngmtplan_file' => (empty($this->input->post("edit-old_mngmtplanfile_span"))?$this->input->post("edit-old_mngmtplanfile"):$this->input->post("edit-old_mngmtplanfile_span")),
                             'mngmtplan_shpfile' => (empty($this->input->post("edit-new_shpfilemgmntplan"))?$this->input->post("edit-old_shpfilemgmntplan"):$this->input->post("edit-new_shpfilemgmntplan")),
                             'mngmtplan_pambreso' => (empty($this->input->post("edit-new_mgmtplanpambreso"))?$this->input->post("edit-old_mgmtplanpambreso"):$this->input->post("edit-new_mgmtplanpambreso")));
            $this->pamain_model->updateMgmtPlan($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_sapa(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $scraper = $this->input->post("edit-sapafile");
        $scraperdelete = $this->input->post("edit-sapafile_span");

        $gencode = $this->input->post("sapa-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("sapa-id");
            $details = array('sapa_no' => $this->input->post("edit-sapano"),
                             'sapa_name_proponent' => $this->input->post("edit-sapaproponent"),
                             'sapa_duration_from' => $this->input->post("edit-sapa_yearstart"),
                             'sapa_duration_to' => $this->input->post("edit-sapa_yearend"),
                             'sapa_nature_development' => $this->input->post("edit-sapa_development"),
                             'sapa_project_location' => $this->input->post("edit-sapa_location"),
                             'status' => $this->input->post("edit-sapa_status"),
                             'sapa_remarks' => $this->input->post("edit-sapa_remarks"),
                             'sapa_development_others' => $this->input->post("edit-otheruses"),
                             'sapa_date_month' => $this->input->post("edit-sapa_approve_month"),
                             'sapa_date_year' => $this->input->post("edit-sapa_approve_year"),
                             'sapa_area' => str_replace(',','',$this->input->post('edit-sapa_area',true)),
                             'sapa_project_cost' => str_replace(',','',$this->input->post('edit-sapa_cost',true)),
                             'sapa_rehabbond_cost' => str_replace(',','',$this->input->post('edit-rehabbondcost',true)),
                             'sapa_scanned_file' => (empty($this->input->post('edit-sapafile_span'))?$this->input->post('edit-sapafile_txt'):$this->input->post('edit-sapafile_span')),
                             'sapa_mgm_plan' =>     (empty($this->input->post('edit-sapamgmtplanfile_span'))?$this->input->post('edit-sapamgmtplanfile_txt'):$this->input->post('edit-sapamgmtplanfile_span')),
                             'sapa_cdmp_file' =>    (empty($this->input->post('edit-sapacdmpplanfile_span'))?$this->input->post('edit-sapacdmpplanfile_txt'):$this->input->post('edit-sapacdmpplanfile_span')),
                             'sapa_pamb_reso' =>    (empty($this->input->post('edit-sapapambresofile_span'))?$this->input->post('edit-sapapambresofile_txt'):$this->input->post('edit-sapapambresofile_span')),
                             'sapa_shpfile' =>    (empty($this->input->post('edit-shp_sapa_txt'))?$this->input->post('edit-shp_sapa_old'):$this->input->post('edit-shp_sapa_txt')),
                             'sapa_pamb_clearance' => (empty($this->input->post('edit-sapapambclearancefile_span'))?$this->input->post('edit-sapapambclearancefile_txt'):$this->input->post('edit-sapapambclearancefile_span')));
            $this->pamain_model->updatequerySapa($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_pacbrma(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $scraper = $this->input->post("edit-approvedocs");
        $scraperdelete = $this->input->post("edit-approveodcs_span");

        $gencode = $this->input->post("pcbrma-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("pcbrma-id");
            $details = array('pacbrma_no' => $this->input->post("edit-pcbrma_no"),
                             'pacbrma_holder' => $this->input->post("edit-pcbrma_holder"),
                             'pacbrma_po' => $this->input->post("edit-pcbrma_po"),
                             'pacbrma_start' => $this->input->post("edit-pcbrma_yearstart"),
                             'pacbrma_end' => $this->input->post("edit-pcbrma_yearend"),
                             'pacbrma_devt' => $this->input->post("edit-pcbrma_devt"),
                             'pacbrma_location' => $this->input->post("edit-pcbrma_location"),
                             'pacbrma_area' => str_replace(',','',$this->input->post("edit-pcbrma_area")),
                             'pacbrma_cost' => $this->input->post("edit-pcbrma_cost"),
                             'pacbrma_remarks' => $this->input->post("edit-pcbrma_remarks"),
                             'pacbrma_status' => $this->input->post("edit-pcbrma_status"),
                             'pacbrma_male' => str_replace(',','',$this->input->post("edit-pcbrma_member_male")),
                             'pacbrma_female' => str_replace(',','',$this->input->post("edit-pcbrma_member_female")),
                             'pacbrma_total' => str_replace(',','',$this->input->post("edit-pcbrma_member")),
                             'pacbrma_shpfile' => (empty($this->input->post('edit-shp_pacbrma_txt'))?$this->input->post('edit-shp_pacbrma_old'):$this->input->post('edit-shp_pacbrma_txt')),
                             'pacbrma_doc_file' => (empty($this->input->post('edit-approveodcs_span'))?$this->input->post('edit-pacbrmafile_txt'):$this->input->post('edit-approveodcs_span')),
                             'pacbrma_pamb_clearance' => (empty($this->input->post('edit-pacbrmapambclearancefile_span'))?$this->input->post('edit-pacbrmapambclearancefile_text'):$this->input->post('edit-pacbrmapambclearancefile_span')),
                             'pacbrma_member_file' => (empty($this->input->post('edit-pcbrmamember_span'))?$this->input->post('edit-approvpcbrmamember_txt'):$this->input->post('edit-pcbrmamember_span')));
            $this->pamain_model->updatequeryPCBRMA($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_researchers(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        if(!empty($_FILES['edit-searchpermite']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/tenure_docs_research_permit';
            $config['file_name'] = $_FILES['edit-searchpermite']['name'];
            $config['allowed_types'] = 'pdf|csv';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-searchpermite')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['edit-pambresoe']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['file_name'] = $_FILES['edit-pambresoe']['name'];
            $config['allowed_types'] = 'pdf|csv';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pambresoe')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }

        $gencode = $this->input->post("searche-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("searche-id");
            $details = array(
                            'type_research' => $this->input->post('edit-search_type',true),
                            'permit_no' => $this->input->post('edit-search_permit',true),
                            'funding_agency' => $this->input->post('edit-search_funding'),
                            'name_researcher' => $this->input->post('edit-search_name'),
                            'institution' => $this->input->post('edit-search_institution'),
                            'research_purpose' => $this->input->post('edit-search_purpose'),
                            'pamb_reso_no' => $this->input->post('edit-search_pambresono'),
                            'pamb_reso_title' => $this->input->post('edit-search_titlereso'),
                            'search_status' => $this->input->post('edit-research_fromprog_status'),
                            'research_reason' => $this->input->post('edit-research_reason_terminatefromprog'),
                            'research_year_extend' => $this->input->post('edit-yearextendfromprog'),
                            'research_month_from' => $this->input->post('edit-search_monthfrom'),
                            'research_year_from' => $this->input->post('edit-search_yearfrom'),
                            'research_month_to' => $this->input->post('edit-search_monthto'),
                            'research_year_to' => $this->input->post('edit-search_yearto'),
                            'research_pamb_reso' => (empty($this->input->post('edit-modal_research_reso_new'))?$this->input->post('edit-modal_research_reso_old'):$this->input->post('edit-modal_research_reso_new')),
                            'search_permit_attached' => (empty($this->input->post('edit-searchpermit_txte'))?$this->input->post('edit-searchpermit_txte_old'):$this->input->post('edit-searchpermit_txte')),
                            'research_pamb_adopted' => $this->input->post('edit-chk_progres_approves')==null ? 0 : 1,
                         );
            $this->pamain_model->updatequeryResearch($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_researchersEdit(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');


        $gencode = $this->input->post("research2-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("research2-id");
            $details = array('type_research' => $this->input->post('edit-editsearch_type',true),
                            'research_purpose' => $this->input->post('edit-editsearch_purpose'),
                            'research_month_from' => $this->input->post('edit-research_month_froms'),
                            'research_year_from' => $this->input->post('edit-research_year_froms'),
                            'research_month_to' => $this->input->post('edit-research_month_tos'),
                            'research_year_to' => $this->input->post('edit-research_year_tos'),
                            'research_year_extend' => $this->input->post('edit-yearextendfromprogsmain'),
                            'research_pamb_adopted' => $this->input->post('edit-chk_progres_approvemain')==null?0:1,
                            'permit_no' => $this->input->post('edit-editsearch_permit',true),
                            'search_permit_attached' => (empty($this->input->post('edit-editsearchpermit_spane'))?$this->input->post('edit-editsearchpermit_txte'):$this->input->post('edit-editsearchpermit_spane')),
                            'research_pamb_clearance' => (empty($this->input->post('edit-researpambclearance_txt'))?$this->input->post('edit-researpambclearance_span'):$this->input->post('edit-researpambclearance_txt')),
                            'research_pamb_reso' => (empty($this->input->post('edit-research_reso_pamb_new'))?$this->input->post('edit-research_reso_pamb_old'):$this->input->post('edit-research_reso_pamb_new')),
                            'funding_agency' => $this->input->post('edit-editsearch_funding'),
                            'name_researcher' => $this->input->post('edit-editsearch_name'),
                            'institution' => $this->input->post('edit-editsearch_institution'),
                            'pamb_reso_title' => $this->input->post("edit-editsearch_titlereso"),
                            'pamb_reso_no' => $this->input->post('edit-editsearch_pambreso'),
                            'search_status' => $this->input->post('edit-research_status'),
                            'research_reason' => $this->input->post('edit-research_reason_terminate'));


            $this->pamain_model->updatequeryResearchEdit($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_moa(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $scraper = $this->input->post("edit-moafile");
        $scraperdelete = $this->input->post("edit-moafile_span");

        $gencode = $this->input->post("moa-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("moa-id");
            $details = array('moa_holder' => $this->input->post("edit-moa_proponent"),
                             'moa_second_party' => $this->input->post("edit-moa_party"),
                             'moa_from_month' => $this->input->post("edit-moa_month"),
                             'moa_from_day' => $this->input->post("edit-moa_day"),
                             'moa_from_year' => $this->input->post("edit-moa_year"),
                             'moa_to_month' => $this->input->post("edit-moa_exp_month"),
                             'moa_to_day' => $this->input->post("edit-moa_exp_day"),
                             'moa_to_year' => $this->input->post("edit-moa_exp_year"),
                             'moa_devt' => $this->input->post("edit-moa_development"),
                             'moa_location' => $this->input->post("edit-moa_location"),
                             'moa_area' => str_replace(',','',$this->input->post("edit-moa_area")),
                             'moa_cost' => str_replace(',','',$this->input->post("edit-moa_cost")),
                             'moa_remarks' => $this->input->post("edit-moa_remarks"),
                             'moa_status' => $this->input->post("edit-moa_status"),
                             'moa_doc_file' => (empty($this->input->post('edit-moafile_span'))?$this->input->post('edit-moafile_txt'):$this->input->post('edit-moafile_span')),
                             'moa_mgm_plan' => (empty($this->input->post('edit-moamgmtplanfile_span'))?$this->input->post('edit-moamgmtplanfile_txt'):$this->input->post('edit-moamgmtplanfile_span')),
                             'moa_pamb_approve' => (empty($this->input->post('edit-moapambapprovefile_span'))?$this->input->post('edit-moapambapprovefile_txt'):$this->input->post('edit-moapambapprovefile_span')),
                             'moa_pamb_reso' => (empty($this->input->post('edit-moapambresofile_span'))?$this->input->post('edit-moapambresofile_txt'):$this->input->post('edit-moapambresofile_span')),
                             'moa_shpfile' => (empty($this->input->post('edit-shp_moa_txt'))?$this->input->post('edit-shp_moa_old'):$this->input->post('edit-shp_moa_txt')),
                             'moa_pamb_clearance' => (empty($this->input->post('edit-moapambclearancefile_span'))?$this->input->post('edit-moapambclearancefile_text'):$this->input->post('edit-moapambclearancefile_span')));
            $this->pamain_model->updatequeryMoa($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_coralreefnew(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("coralreefn-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("coralreefn-id");
            $details = array('generatedcode'    => $this->input->post('coralreefn-gencode',true),
                             'coastal_generatedcode'    => $this->input->post('coralreefnSS-gencode',true),
                             'coral_has'      => str_replace(',','',$this->input->post('edit-coral_ha',true)),
                             'hcc_value'      => str_replace(',','',$this->input->post('edit-hcc_value',true)),
                             'taus_value'      => str_replace(',','',$this->input->post('edit-taus_value',true)),
                             'hcc_category'    => $this->input->post('edit-coral_condition',true),
                             'taus_category'    => $this->input->post('edit-taus_category',true),
                             'coral_date_month'      => $this->input->post('edit-coral_conducted_month',true),
                             'coral_date_day'    => $this->input->post('edit-coral_conducted_day',true),
                             'coral_date_year'    => $this->input->post('edit-coral_conducted_year',true),
                             'coral_map_img'    => (empty($this->input->post('edit-img_coralmapspan'))?$this->input->post('edit-img_coralmaptext'):$this->input->post('edit-img_coralmapspan')),
                             'coral_shpfile'    => (empty($this->input->post('edit-shp_corals_txt'))?$this->input->post('edit-shp_corals_old'):$this->input->post('edit-shp_corals_txt')),

                             'coral_remarks'    => $this->input->post('edit-coral_remarks',true));
                $this->pamain_model->updatequeryCoralReef($details,$id);
                echo json_encode(['result' => 'things you want to show']);
            }
            else{
                echo "<script>alert('Login is required.');</script>";
                echo "<meta http-equiv=Refresh content=0;url=../../login>";
            }
        }

        public function update_seagrassessnew(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("seagrassN-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("seagrassN-id");
            $idcoralmap = $this->input->post("seagrassmap-id");
            $details = array(
            // 'generatedcode'    => $this->input->post('seagrassN-gencode',true),
            // 'coastal_generatedcode'    => $this->input->post('seagrassNs-gencode',true),
            'seagrass_area'      => str_replace(',','',$this->input->post('edit-seagrass_ha',true)),
            'seagrass_cover_value'      => str_replace(',','',$this->input->post('edit-cover_value',true)),
            'diversity_value'      => str_replace(',','',$this->input->post('edit-diversity_values',true)),
            'seagrass_conditions'    => $this->input->post('edit-seagrass_condition',true),
            'diversity_index'    => $this->input->post('edit-diversity_index',true),
            'seagrass_no'      => str_replace(',','',$this->input->post('edit-seagrass_no',true)),
            'seagrass_remarks'    => $this->input->post('edit-seagrass_remarks',true),
            'seagrass_date_month'    => $this->input->post('edit-seagrass_conducted_month',true),
            'seagrass_date_day'    => $this->input->post('edit-seagrass_conducted_day',true),
            'seagrass_date_year'    => $this->input->post('edit-seagrass_conducted_year',true),
            'seagrass_map_img'    => (empty($this->input->post('edit-img_seagrassmapspan'))?$this->input->post('edit-img_seagrassmaptext'):$this->input->post('edit-img_seagrassmapspan')),
            'seagrass_shpfile'    => (empty($this->input->post('edit-shp_seagrass_txt'))?$this->input->post('edit-shp_seagrass_old'):$this->input->post('edit-shp_seagrass_txt')),
            'date_updated' => $now);

            $this->pamain_model->updatequerySeagrass($details,$id);
            echo json_encode(['result' => 'things you want to show']);



        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
        }

    public function update_Mangrovenew(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $gencode = $this->input->post("MangroveN-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("MangroveN-id");

            $details = array(
                'generatedcode'    => $this->input->post('MangroveN-gencode',true),
                'mangrove_area'      => str_replace(',','',$this->input->post('edit-mangrove_ha',true)),
                'crown_cover'      => str_replace(',','',$this->input->post('edit-crown_cover',true)),
                'regeneration'      => str_replace(',','',$this->input->post('edit-regeneration',true)),
                'avg_height'      => str_replace(',','',$this->input->post('edit-avg_height',true)),
                'observation'    => $this->input->post('edit-observation_mangrove',true),
                'mangrove_diversity'    => $this->input->post('edit-diversity_value',true),

                'mangrove_condition'    => $this->input->post('edit-mangrove_condition',true),
                'regen_cat'    => $this->input->post('edit-mangrove_regen',true),
                'height_cat'    => $this->input->post('edit-mangrove_height',true),
                'observe_cat'    => $this->input->post('edit-mangrove_observe',true),
                'divert_cat'    => $this->input->post('edit-mangrove_diversity',true),
                'mangrove_remarks'    => $this->input->post('edit-mangrove_remarks',true),
                'mangrove_date_month'    => $this->input->post('edit-mangrove_conducted_month',true),
                'mangrove_date_day'    => $this->input->post('edit-mangrove_conducted_day',true),
                'mangrove_date_year'    => $this->input->post('edit-mangrove_conducted_year',true),
                'mangrove_map_img'    => (empty($this->input->post('edit-img_mangrovemapspan'))?$this->input->post('edit-img_mangrovemaptext'):$this->input->post('edit-img_mangrovemapspan')),
                'mangrove_shpfile'    => (empty($this->input->post('edit-shp_mangrove_txt'))?$this->input->post('edit-shp_mangrove_old'):$this->input->post('edit-shp_mangrove_txt')),

                'date_updated'       =>  $now);
            $this->pamain_model->updatequeryMangrove($details,$id);

            echo json_encode(['result' => 'things you want to show']);

        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
        }

    public function update_fishdetails(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        if($this->session->userdata('email')){
            $id = $this->input->post("fish-ids");

            $details = array(
                'fish_diversity_value'      => str_replace(',','',$this->input->post('edit-fish_diversity_value',true)),
                'density_value'      => str_replace(',','',$this->input->post('edit-density_value',true)),
                'biomass_value'      => str_replace(',','',$this->input->post('edit-biomass_value',true)),
                'fish_category'    => $this->input->post('edit-fish_category',true),
                'fish_diversity'    => $this->input->post('edit-fish_diversity',true),
                'fishdensity'    => $this->input->post('edit-fishdensity',true),
                'fishbiomass'    => $this->input->post('edit-fishbiomass',true),
                'date_assessed_m'    => $this->input->post('edit-fish_month_monitoring',true),
                'date_assessed_d'    => $this->input->post('edit-fish_day_monitoring',true),
                'date_assessed_y'    => $this->input->post('edit-fish_year_monitoring',true),
                'date_updated'       =>  $now);
            $this->pamain_model->updatequeryfishdetails($details,$id);

            echo json_encode(['result' => 'things you want to show']);

        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
        }

    public function update_othertenure(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("othertenure-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("othertenure-id");
            $details = array('type_instrument' => $this->input->post("edit-typesinstrument"),
                             'titledno' => $this->input->post("edit-titledinstrument"),
                             'tenure_holder' => $this->input->post("edit-holderinstrument"),
                             'tenure_purpose' => $this->input->post("edit-purposeinstrument"),
                             'other_instrument_location' => $this->input->post("edit-otlocation"),
                             'other_instrument_area' => str_replace(',','',$this->input->post("edit-otarea")),
                             'other_instrument_start' => $this->input->post("edit-otyearstart"),
                             'other_instrument_expire' => $this->input->post("edit-otyearend"),
                             'other_instrument_status' => $this->input->post("edit-otstatus"),
                             'date_updated' => $now,
                             'other_instrument_map' => (empty($this->input->post('edit-othermapimage_text'))?$this->input->post('edit-old_otother'):$this->input->post('edit-othermapimage_text')),
                             'other_instrument_shp' => (empty($this->input->post('edit-shpzip_otherinstrument'))?$this->input->post('edit-old_shpfileotherinstrument'):$this->input->post('edit-shpzip_otherinstrument')),
                             'other_instrument_file' => (empty($this->input->post('edit-shpzip_otherinstrumentfile_text'))?$this->input->post('edit-old_shpfileotherinstrumentfile'):$this->input->post('edit-shpzip_otherinstrumentfile_text')),
                             'other_instrument_pamb_clearance' => (empty($this->input->post('edit-shpzip_otherpambclearancefile_text'))?$this->input->post('edit-otherpambclearancefile_span'):$this->input->post('edit-shpzip_otherpambclearancefile_text')));

            $this->pamain_model->updatequeryOtherTenure($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_climate(){

        $gencode = $this->input->post("climate-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $climate_id = $this->input->post("climate-id");
            $climatedetails = array('climate_desc' => $this->input->post("edit-climate-desc"),
                                    'climate_type' => $this->input->post("edit-climate"),
                                    'date_updated' => $date_update);
            $this->pamain_model->update_Climate($climatedetails,$climate_id);

            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_hydro()
    {
        $gencode = $this->input->post("hydro-gencode");
        $date_update = date("Y-m-d");

         if(!empty($_FILES['edit-pic_hydromap']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/hydro_map_img';
            $config['file_name'] = $_FILES['edit-pic_hydromap']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_hydromap')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

         if(!empty($_FILES['edit-zip_shpfile_hydro']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/hydro_shp_file';
            $config['file_name'] = $_FILES['edit-zip_shpfile_hydro']['name'];
            $config['allowed_types'] = 'zip';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-zip_shpfile_hydro')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }

        if($this->session->userdata('email')){
            $id = $this->input->post("hydro-id");
            $details = array('hydro_desc' => $this->input->post("edit-hydro-desc"),
                             'date_updated' => $date_update,
                             'hydro_class'=> $this->input->post("edit-waterclass"),
                             'hydroSub_class' => ($this->input->post('edit-waterclass',true)==1?$this->input->post('edit-waterclasssubid',true):""),
                             'riverinflow'=>$this->input->post("edit-riverinflow"),
                             'riveroutflow'=>$this->input->post("edit-riveroutflow"),
                             'hydro_map_img'=> (empty($this->input->post('edit-img_hydromaptext',true))?$this->input->post('edit-img_hydromapold'):$this->input->post('edit-img_hydromaptext')),
                             'hydro_shp_file'=> (empty($this->input->post('edit-ziphydrodata_text',true))?$this->input->post('edit-ziphydrodata_old'):$this->input->post('edit-ziphydrodata_text')),
                             'date_assessed' => ($this->input->post('edit-waterclass',true)==1?$this->input->post('edit-hydroyearassess',true):""),
                             // 'hydro_shp_file'=>(!empty($filenames2)?$filenames2:$this->input->post('edit-shpzip_hydro')),
                         );
            $this->pamain_model->update_Hydro($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_exland()
    {
        $gencode = $this->input->post("land-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("land-id");
            $details = array('landuse_type' => $this->input->post("edit-land-legend"),
                             'landuse_sub' => $this->input->post("edit-sub_existing_landuse"),
                             'landuse_area' => str_replace(',','',$this->input->post("edit-land-area")),
                             'remarks' => $this->input->post("edit-land-remarks"),
                             'landuse_shpfile' => (empty($this->input->post('edit-shp_landuse_txt'))?$this->input->post('edit-shp_landuse_old'):$this->input->post('edit-shp_landuse_txt')),
                             'date_updated' => $date_update);
            $this->pamain_model->update_Land($details,$id);
            echo json_encode(['result' => 'things you want to show']);        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

     public function update_vegetative(){

        $gencode = $this->input->post("vegetative-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("vegetative-id");
            $details = array('vegetative_desc' => $this->input->post("edit-vegetative-legend"),
                             'vegetative_area' => str_replace(',','',$this->input->post('edit-vegetative-area',true)),
                             'vremarks' => $this->input->post("edit-vegetative-remarks"),
                             'date_updated' => $date_update);
            $this->pamain_model->update_Vege($details,$id);
            echo json_encode(['result' => 'things you want to show']);        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_landslide(){

        $gencode = $this->input->post("landslide-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("landslide-id");
            $details = array('landslide_desc' => $this->input->post("edit-landslide-legend"),
                                      'landslide_area' => str_replace(',','',$this->input->post("edit-landslide-area")),
                                      'landslide_remarks' => $this->input->post("edit-landslide-remarks"),
                                      'date_updated' => $date_update);
            $this->pamain_model->update_Landslide($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_flooding(){

        $gencode = $this->input->post("flooding-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("flooding-id");
            $details = array('flooding_desc' => $this->input->post("edit-flood-legend"),
                             'flooding_area' => str_replace(',','',$this->input->post("edit-flood-area")),
                             'flooding_remarks' => $this->input->post("edit-flood-remarks"),
                             'date_updated' => $date_update);
            $this->pamain_model->update_Flooding($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_sea(){

        $scraper = $this->input->post("edit-pic_sea");
        $scraperdelete = $this->input->post("edit-old_picture_sea");

        if(!empty($_FILES['edit-pic_sea']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/sealevel_img';
            $config['file_name'] = $_FILES['edit-pic_sea']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_sea')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("sea-gencode");
        if($this->session->userdata('email')){
            $sea_id = $this->input->post("sea-id");
            $seadetails = array('sea_desc' => $this->input->post("edit-sea-desc"),
                                'sea_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_sea')),
                                'sealevel_shpfile'    => (empty($this->input->post('edit-shpzip_sealevel_text'))?$this->input->post('edit-shpzip_sealevel_old'):$this->input->post('edit-shpzip_sealevel_text')),
                            );
            $this->pamain_model->update_Sea($seadetails,$sea_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_tsunami(){

        $scraper = $this->input->post("edit-pic_tsunami");
        $scraperdelete = $this->input->post("edit-old_picture_tsunami");

        if(!empty($_FILES['edit-pic_tsunami']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/tsunami_img';
            $config['file_name'] = $_FILES['edit-pic_tsunami']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_tsunami')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("tsunami-gencode");
        if($this->session->userdata('email')){
            $tsunami_id = $this->input->post("tsunami-id");
            $tsunamidetails = array('tsunami_desc' => $this->input->post("edit-tsunami-desc"),
                                    'tsunami_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_tsunami')),
                                    'stormsurge_shpfile'    => (empty($this->input->post('edit-shpzip_storm_text'))?$this->input->post('edit-shpzip_storm_old'):$this->input->post('edit-shpzip_storm_text')),
                                );
            $this->pamain_model->update_Tsunami($tsunamidetails,$tsunami_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_fire(){

        $scraper = $this->input->post("edit-pic_fire");
        $scraperdelete = $this->input->post("edit-old_picture_fire");

        if(!empty($_FILES['edit-pic_fire']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/fire_img';
            $config['file_name'] = $_FILES['edit-pic_fire']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_fire')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("fire-gencode");
        if($this->session->userdata('email')){
            $tsunami_id = $this->input->post("fire-id");
            $tsunamidetails = array('fire_desc' => $this->input->post("edit-fire-desc"),
                                    'fire_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_fire')),
                                    'faultline_shpfile'    => (empty($this->input->post('edit-shpzip_fault_text'))?$this->input->post('edit-shpzip_fault_old'):$this->input->post('edit-shpzip_fault_text')));
            $this->pamain_model->update_Fire($tsunamidetails,$tsunami_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_geohazard(){

        $scraper = $this->input->post("edit-pic_geohazard");
        $scraperdelete = $this->input->post("edit-old_picture_geohazard");

        if(!empty($_FILES['edit-pic_geohazard']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/other_geohazard_img';
            $config['file_name'] = $_FILES['edit-pic_geohazard']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_geohazard')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("geohazard-gencode");
        if($this->session->userdata('email')){
            $tsunami_id = $this->input->post("geohazard-id");
            $tsunamidetails = array('geohazard_desc' => $this->input->post("edit-geohazard-desc"),
                                    'geohazard_map' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_geohazard')));
            $this->pamain_model->update_hazard($tsunamidetails,$tsunami_id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/other_geohazard_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_attraction(){
        $gencode = $this->input->post("attraction-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("attraction-id");
            $details = array('title' => $this->input->post("edit-attraction-title"),
                                    'description' => $this->input->post("edit-attraction-desc"),
                                    'eco_activity' => $this->input->post("edit-eco_activities"),
                                    'other_activity' => $this->input->post("edit-otherecoactivity"),
                                    'source_photo' => $this->input->post('edit-source_photo'),
                                    'chk_activity1' => $this->input->post('edit-chk_activity1')==null? 0 : 1,
                                    'chk_activity2' => $this->input->post('edit-chk_activity2')==null? 0 : 1,
                                    'chk_activity3' => $this->input->post('edit-chk_activity3')==null? 0 : 1,
                                    'chk_activity4' => $this->input->post('edit-chk_activity4')==null? 0 : 1,
                                    'chk_activity5' => $this->input->post('edit-chk_activity5')==null? 0 : 1,
                                    'chk_activity6' => $this->input->post('edit-chk_activity6')==null? 0 : 1,
                                    'chk_activity7' => $this->input->post('edit-chk_activity7')==null? 0 : 1,
                                    'chk_activity8' => $this->input->post('edit-chk_activity8')==null? 0 : 1,
                                    'chk_activity9' => $this->input->post('edit-chk_activity9')==null? 0 : 1,
                                    'chk_activity10' => $this->input->post('edit-chk_activity10')==null? 0 : 1,
                                    'chk_activity11' => $this->input->post('edit-chk_activity11')==null? 0 : 1,
                                    'chk_activity12' => $this->input->post('edit-chk_activity12')==null? 0 : 1,
                                    'chk_activity13' => $this->input->post('edit-chk_activity13')==null? 0 : 1,
                                    'chk_activity14' => $this->input->post('edit-chk_activity14')==null? 0 : 1,
                                    'chk_activity15' => $this->input->post('edit-chk_activity15')==null? 0 : 1,
                                    // 'image_attr' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_attraction')));
                                    'image_attr' => (empty($this->input->post('ecotourismnewimages'))?$this->input->post('edit-old_picture_attraction'):$this->input->post('ecotourismnewimages')));
            $this->pamain_model->update_Attraction($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_watershed(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $scraper = $this->input->post("edit-pic_watershedimg");
        $scraperdelete = $this->input->post("edit-old_picture_watershed");

        if(!empty($_FILES['edit-pic_watershedimg']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/watershed';
            $config['file_name'] = $_FILES['edit-pic_watershedimg']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_watershedimg')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("watershed-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("watershed-id");
            $details = array('watershed_name' => $this->input->post("edit-watershedname"),
                             'riverbasin_name' => $this->input->post("edit-riverbasinname"),
                             'subwatershed_name' => $this->input->post("edit-subwatershedname"),
                             'date_update' => $now,
                             'watershedmap_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_watershed')),
                             'watershedmap_shpfile' => (empty($this->input->post('edit-shp_watersheds_txt'))?$this->input->post('edit-shp_watersheds_old'):$this->input->post('edit-shp_watersheds_txt')),
                         );
            $this->pamain_model->update_watershed($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/watershed/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_facility(){

        $scraper = $this->input->post("edit-pic_facility");
        $scraperdelete = $this->input->post("edit-old_picture_facility");

        $gencode = $this->input->post("facility-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("facility-id");
            $details = array('title_facility' => $this->input->post("edit-facility-title"),
                             'description_facility' => $this->input->post("edit-facility-desc"),
                             // 'image_facility' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_facility')),
                             'image_facility' => (empty($this->input->post('edit-img_facilitiesoutput'))?$this->input->post('edit-old_picture_facility'):$this->input->post('edit-img_facilitiesoutput')),
                             'facility_date_month' => $this->input->post("edit-facilities_month"),
                             'facility_condition' => $this->input->post("edit-facility_condition"),
                             'facility_date_year' => $this->input->post("edit-facilities_year"),
                             'noaccomodate' => $this->input->post("edit-nopeopleaccom"));
            $this->pamain_model->update_Facility($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/facilities_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_activity(){

        $scraper = $this->input->post("edit-pic_activity");
        $scraperdelete = $this->input->post("edit-old_picture_activity");

        if(!empty($_FILES['edit-pic_activity']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/ecotourism_img';
            $config['file_name'] = $_FILES['edit-pic_activity']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_activity')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("activity-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("activity-id");
            $details = array('activity_title' => $this->input->post("edit-activity-title"),
                             'description_activity' => $this->input->post("edit-activity-desc"),
                             'image_eco' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_activity')));
            $this->pamain_model->update_Activity($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/ecotourism_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_product(){

        $scraper = $this->input->post("edit-pic_product");
        $scraperdelete = $this->input->post("edit-old_picture_product");

        $gencode = $this->input->post("product-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("product-id");
            $details = array('prod_desc' => $this->input->post("edit-product-desc"),
                             'prod_img' => (empty($this->input->post("edit-img_outputproduct"))?$this->input->post("edit-old_picture_product"):$this->input->post("edit-img_outputproduct")));
            $this->pamain_model->update_product($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/product_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_agro(){

        $scraper = $this->input->post("edit-pic_agro");
        $scraperdelete = $this->input->post("edit-old_picture_agro");

        if(!empty($_FILES['edit-pic_agro']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/agroforestry_img';
            $config['file_name'] = $_FILES['edit-pic_agro']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_agro')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("agro-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("agro-id");
            $details = array('title_agro' => $this->input->post("edit-agro-title"),
                             'description_agro' => $this->input->post("edit-agro-desc"),
                             'has_agro' => $this->input->post("edit-agro-area"),
                             'image_agro' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture_agro')));
            $this->pamain_model->update_Agro($details,$id);
            // if (empty($scraper)) {
            //     unlink('bmb_assets2/upload/agroforestry_img/'.$scraperdelete);
            // } else {
            //     # code...
            // }
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }


    public function update_soil(){

        $gencode = $this->input->post("soil-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $soil_id = $this->input->post("soil-id");
            $soildetails = array('geology_desc' => $this->input->post("edit-soil-desc"),
                                 'date_updated' => $date_update,
                                 'soil_shpfile' => (!empty($this->input->post('edit-shp_soil_txt'))?$this->input->post('edit-shp_soil_txt'):$this->input->post("edit-shp_soil_old")));
            $this->pamain_model->update_Soil($soildetails,$soil_id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_bdfe(){

        $gencode = $this->input->post("bdfe-gencode");
        $date_update = date("Y-m-d");

         if(!empty($_FILES['edit-bdfe_image']['name'])){
                $config ['upload_path'] = 'bmb_assets2/upload/bdfe_img';
                $config['file_name'] = $_FILES['edit-bdfe_image']['name'];
                $config['allowed_types'] = 'gif|jpg|png|jpeg';
                // $config['max_size'] = '10000';

                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                 if($this->upload->do_upload('edit-bdfe_image')){
                    $uploadData = $this->upload->data();
                    $filenames = $uploadData['file_name'];
                }
            }
// 'image'       => (!empty($filenames)?$filenames:$this->input->post('edit-old_picture')),

        if($this->session->userdata('email')){
            $id = $this->input->post("bdfe-id");
            $details = array(
                             // 'enterprise_name' => $this->input->post("edit-lhName"),
                             // 'lh_type_enterprise' => $this->input->post("edit-lh_type"),
                             // 'lh_desc' => $this->input->post("edit-lh_type_desc"),
                             // 'lh_area' => str_replace(',','',$this->input->post('edit-lh_area',true)),
                             // 'lh_assessed_month_frm' => $this->input->post("edit-from_date_assessed_month"),
                             // 'lh_assessed_day_frm' => $this->input->post("edit-from_date_assessed_day"),
                             // 'lh_assessed_year_frm' => $this->input->post("edit-from_date_assessed_year"),
                             // 'lh_assessed_month_to' => $this->input->post("edit-to_date_assessed_month"),
                             // 'lh_assessed_day_to' => $this->input->post("edit-to_date_assessed_day"),
                             // 'lh_assessed_year_to' => $this->input->post("edit-to_date_assessed_year"),
                             // 'office_involved' => $this->input->post("edit-lh_agency"),
                             // 'lh_po_male' => str_replace(',','',$this->input->post('edit-no_male_lh',true)),
                             // 'lh_po_female' => str_replace(',','',$this->input->post('edit-no_female_lh',true)),
                             // 'other_source_assistance' => $this->input->post("edit-lh_assistance"),
                             // 'proj_proposal' => $this->input->post("edit-proj_prop"),
                             // 'lh_business_plan' => $this->input->post("edit-business_plan"),
                             // 'lh_wfp' => $this->input->post("edit-reg_aprvd_wfp"),
                             // 'lh_moa' => $this->input->post("edit-aprvd_moa"),
                             // 'lh_ecological' => $this->input->post("edit-rate_ecological"),
                             // 'lh_economic' => $this->input->post("edit-rate_economic"),
                             // 'lh_equity' => $this->input->post("edit-rate_equity"),
                             // 'lh_total_rating' => $this->input->post("edit-total_rate"),
                             // 'lh_products' => $this->input->post("edit-liveproducts"),
                             // 'lh_po_assisted' => $this->input->post("edit-lh_po_assisted"),
                             // 'lh_img'       => (!empty($filenames)?$filenames:$this->input->post('edit-old_picturebdfe')),
                             // 'capacity_desc' => $this->input->post("edit-lh_capacity")
                    'enterprise_name' => $this->input->post('edit-lhName',true),
                    'lh_po_assisted' => $this->input->post('edit-lh_po_assisted',true),
                    'dor_month' => $this->input->post('edit-dateregismonth',true),
                    'dor_day' => $this->input->post('edit-dateregisday',true),
                    'dor_year' => $this->input->post('edit-dateregisyear',true),
                    'type_registration' => $this->input->post('edit-typeregis',true),
                    'other_registration' => $this->input->post('edit-typeregis_others',true),
                    'lh_category' => $this->input->post('edit-liveproducts',true),
                    'lh_sub_category' => $this->input->post('edit-lh_type',true),
                    'lh_category_others' => $this->input->post('edit-lh_cat_others',true),
                    'lh_products' => $this->input->post('edit-lhproductsname',true),
                    'lh_area' => str_replace(',','',$this->input->post('edit-lh_area',true)),
                    'lh_month_inclusion' => $this->input->post('edit-lh_month_inclusion',true),
                    'lh_day_inclusion' => $this->input->post('edit-lh_day_inclusion',true),
                    'lh_year_inclusion' => $this->input->post('edit-lh_year_inclusion',true),
                    'date_profile_month' => $this->input->post('edit-date_profile_month',true),
                    'date_profile_day' => $this->input->post('edit-date_profile_day',true),
                    'date_profile_year' => $this->input->post('edit-date_profile_year',true),
                    'lh_po_male' => str_replace(',','',$this->input->post('edit-no_male_lh',true)),
                    'lh_po_female' => str_replace(',','',$this->input->post('edit-no_female_lh',true)),
                    'size_enterprise' => $this->input->post('edit-size_enterprise',true),
                    'lh_enteprise_other' => $this->input->post('edit-lh_enteprise_other',true),
                    'poassetval' => str_replace(',','',$this->input->post('edit-poassetval',true)),
                    'avgnetmonthincome' => str_replace(',','',$this->input->post('edit-avgnetmonthincome',true)),
                    'date_appraisal_month' => $this->input->post('edit-date_appraisal_month',true),
                    'date_appraisal_day' => $this->input->post('edit-date_appraisal_day',true),
                    'date_appraisal_year' => $this->input->post('edit-date_appraisal_year',true),
                    'bdfe_level' => $this->input->post('edit-bdfe_level',true),
                    'bamsresult_file' => $this->input->post('edit-bamsresult_span',true),
                    'businessplan_file' => $this->input->post('edit-businessplan_span',true),
                    'seamsresult_file' => $this->input->post('edit-seamsresult_span',true),
                    'rapidhabitatassess_file' => $this->input->post('edit-rapidhabitatassess_span',true),
                    'businesspermit_file' => $this->input->post('edit-businesspermit_span',true),
                    'poinventory_file' => $this->input->post('edit-poinventory_span',true),
                    'strengthenedbamsresult_file' => $this->input->post('edit-bamsresult_span',true),
                    'strengthenedbusinessplan_file' => $this->input->post('edit-businessplan_span',true),
                    'strengthenedseams_file' => $this->input->post('edit-seamsresult_span',true),
                    'updatebusinessplan_file' => $this->input->post('edit-updatebusinessplan_span',true)==null?"":$this->input->post('edit-updatebusinessplan_span',true),
                    'bamsresultdeveloped_file' => $this->input->post('edit-bamsresultdeveloped_span',true),
                    'businesspermitdeveloped_file' => $this->input->post('edit-businesspermitdeveloped_span',true),
                    'pppagreementdeveloped_file' => $this->input->post('edit-pppagreementdeveloped_span',true),
                    'lguresolution_file' => $this->input->post('edit-lguresolution_span',true),
                    'bamsresultsustained_file' => $this->input->post('edit-bamsresultsustained_span',true),
                    'seamsresultsustained_file' => $this->input->post('edit-seamsresultsustained_span',true),
                    'submissionappraisalpdf_file' => $this->input->post('edit-submissionappraisalpdf_span',true),
                    'tech_assistance' => $this->input->post('edit-chkbox1ep')==null ? 0 : 1,
                    'financce_assistance' => $this->input->post('edit-chkbox2ep')==null ? 0 : 1,
                    'faamount' => str_replace(',','',$this->input->post('edit-faamount',true)),
                    'other_source_assistance' => $this->input->post('edit-othersourceassistance',true),
                    'assistingorganization' => $this->input->post('edit-assistingorganization',true),
                    'qualifiesrecog' => $this->input->post('edit-qualifiesrecog',true)==null ? 0 : 1,
                    'date_recog_endorsement_month' => $this->input->post('edit-date_recog_endorsement_month',true),
                    'date_recog_endorsement_day' => $this->input->post('edit-date_recog_endorsement_day',true),
                    'date_recog_endorsement_year' => $this->input->post('edit-date_recog_endorsement_year',true),
                    'date_recog_validation_month' => $this->input->post('edit-date_recog_validation_month',true),
                    'date_recog_validation_day' => $this->input->post('edit-date_recog_validation_day',true),
                    'date_recog_validation_year' => $this->input->post('edit-date_recog_validation_year',true),
                    'resultvalidation' => $this->input->post('edit-resultvalidation',true)==null ? 0 : 1,
                    'dateCOR_month' => $this->input->post('edit-dateCOR_month',true),
                    'dateCOR_day' => $this->input->post('edit-dateCOR_day',true),
                    'dateCOR_year' => $this->input->post('edit-dateCOR_year',true),
                    'recogfindingsdocupload' => $this->input->post('edit-recognitionfileupload_span',true),
                    'supportingmaterialsupload' => $this->input->post('edit-supportmaterialphotodoc_span',true),
                         );
            $this->pamain_model->update_bdfe($details,$id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }



    public function update_rock(){

        $gencode = $this->input->post("rock-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("rock-id");
            $details = array('rock_details' => $this->input->post("edit-rock-desc"),
                             'rock_shpfile' => (!empty($this->input->post('edit-shp_rock_txt'))?$this->input->post('edit-shp_rock_txt'):$this->input->post("edit-shp_rock_old")),
                             'date_updated' => $date_update);
            $this->pamain_model->update_Rock($details,$id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchIPAFget(){
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllIpafs($codegens);

        foreach($datar as $row){
            ?>
            <tr id="<?php echo $row->id_ipaf; ?>" class="text-center strow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->date_month; ?></td>
                <td class="hide"><?php echo $row->date_year; ?></td>
                <td class="hide"><?php echo $row->no_visitors; ?></td>
                <td class="hide"><?php echo $row->visitors; ?></td>
                <td class="hide"><?php echo $row->parking_area; ?></td>
                <td class="hide"><?php echo $row->facilities; ?></td>
                <td class="hide"><?php echo $row->recreational_activity; ?></td>
                <td class="hide"><?php echo $row->water_activity; ?></td>
                <td><?php echo $row->date_month." ".$row->date_year; ?></td>
                <td><?php echo $row->no_visitors; ?></td>
                <td style="border-right: 0px solid"><?php echo 'Visitors :<br>Parking area :<br>Facilities :<br>Recreational :<br>Watersports :<br><hr>' ?></td>
                <td><?php echo $row->visitors.'<br>'.$row->parking_area.'<br>'.$row->facilities.'<br>'.$row->recreational_activity.'<br>'.$row->water_activity.'<br><hr>'.$row->total; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_ipaf;?>" class="btn btn-info btn-xs" onclick="editipaf(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeipaf" data-id="<?php echo $row->id_ipaf ?>" title="Remove">Remove</button>
                </td>
                <input type="" id="c1<?php echo $row->id_ipaf;?>" value="<?php echo $row->id_ipaf ?>" />

            </tr>


            <?php
        }
    }

    public function update_ipaf(){
        $gencode = $this->input->post("ipafs-gencode");
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("ipafs-id");
            $ipafdetails = array('no_visitors' => $this->input->post("edit-no_visitors"),
                                'visitors' => $this->input->post("edit-visitors"),
                                'facilities' => $this->input->post("edit-facilities"),
                                'parking_area' => $this->input->post("edit-parking"),
                                'recreational_activity' => $this->input->post("edit-recreational"),
                                'water_activity' => $this->input->post("edit-water"),
                                'date_month' => $this->input->post("edit-month_monitoring"),
                                'date_year' => $this->input->post("edit-year_monitoring")
                            );
            $this->pamain_model->update_ipafs($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_recog(){
        $gencode = $this->input->post("recog-gencode");
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("recog-id");
            $ipafdetails = array('recognition' => $this->input->post("edit-recognition"),
                                'month_declared' => $this->input->post("edit-date_declared_month"),
                                'year_declared' => $this->input->post("edit-date_declared_year"),
                                'day_declared' => $this->input->post("edit-date_declared_day"),
                                'inscribed' => $this->input->post("edit-inscribe"),
                                'recog_sub' => $this->input->post("edit-int_crit"),
                                'siteno' => $this->input->post("edit-sitenumber"),
                                'file_attached_map' => (empty($this->input->post("edit-recog_shapefile_span"))?$this->input->post("recog_shapefile_old"):$this->input->post("edit-recog_shapefile_span")),
                                'recog_area_ha' => str_replace(',','',$this->input->post('edit-recog_area_has',true)),
                                'recog_area_sq' => str_replace(',','',$this->input->post('edit-recog_area_sqr',true)),
                            );
            $this->pamain_model->update_recog($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_minutesofmeeting(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("moms-id");
            $ipafdetails = array('month_minutes '    => $this->input->post('edit-minutes_bmb_month',true),
                                 'day_minutes '      => $this->input->post('edit-minutes_bmb_day',true),
                                 'year_minutes '     => $this->input->post('edit-minutes_bmb_year',true),
                                 'title_minutes '     => $this->input->post('edit-title_minutes',true),
                                 'remarks_minutes '     => $this->input->post('edit-remarks_minutes',true),
                                 'file_name'         => (empty($this->input->post('edit-minutesfile_span'))?$this->input->post('edit-minutesfile_text'):$this->input->post('edit-minutesfile_span')),
                                 'date_updated'       =>  date("Y-m-d")
                            );
            $this->pamain_model->update_minutesofmeeting($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_project(){
        $gencode = $this->input->post("project-gencode");
        if($this->session->userdata('email')){
            $projid = $this->input->post("project-id");
            $projdetails = array('project_name' => $this->input->post("edit-project-name"),
                                 'date_start' => $this->input->post("edit-yearstart"),
                                 'date_end' => $this->input->post("edit-yearend"),
                                 'source_fund' => $this->input->post("edit-funding"),
                                 'amount' => $this->input->post("edit-amount_fund"),
                                 'implementor' => $this->input->post("edit-implementor"),
                                 'type_processing' => $this->input->post("edit-issuance"),
                                 'sapa_no' => $this->input->post("edit-sapa_no"),
                                 'moa_date_signing_month' => $this->input->post("edit-moa_month"),
                                 'moa_date_signing_day' => $this->input->post("edit-moa_day"),
                                 'moa_date_signing_year' => $this->input->post("edit-moa_year"),
                                 'moa_date_exp_month' => $this->input->post("edit-moa_exp_month"),
                                 'moa_date_exp_day' => $this->input->post("edit-moa_exp_day"),
                                 'moa_date_exp_year' => $this->input->post("edit-moa_exp_year"),
                                 'secondparty' => $this->input->post("edit-second_party"),
                                 'remarks' => $this->input->post("edit-remarks"),
                                 "pacbrma_no" => $this->input->post('edit-pacbrma_no'),
                                 "people_organization" => $this->input->post('edit-po'),
                                 "proj_location" => $this->input->post('edit-proj_location'),
                                 "proj_area" => $this->input->post('edit-area'),
                                 "nature_development" => $this->input->post('edit-nature_development'),
                                );
            $this->pamain_model->update_projs($projdetails,$projid);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_program(){
        $gencode = $this->input->post("program-gencode");
        if($this->session->userdata('email')){
            $progid = $this->input->post("program-id");
            $progdetails = array('program_name' => $this->input->post("edit-program_name"),
                                 'program_partner' => $this->input->post("edit-program_partner"),
                                 'program_sector' => $this->input->post("edit-programsector"),
                                 'sector_program_id' => $this->input->post("edit-programsectorlist"),
                                 'program_details' => $this->input->post("edit-program_details"),
                                 'prog_duration_from_month' => $this->input->post('edit-prog_duration_from_month',true),
                                 'prog_duration_from_year' => $this->input->post('edit-prog_duration_from_year',true),
                                 'prog_duration_to_month' => $this->input->post('edit-prog_duration_to_month',true),
                                 'prog_duration_to_year' => $this->input->post('edit-prog_duration_to_year',true),
                                 'date_updated'=> date('Y-m-d'),
                                );
            $this->pamain_model->update_progs($progdetails,$progid);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_search(){
        $gencode = $this->input->post("research-gencode");
        if($this->session->userdata('email')){
            $searchgid = $this->input->post("research-id");
            $searchgdetails = array('search_title' => $this->input->post("edit-search_title")
                                );
            $this->pamain_model->update_searchh($searchgdetails,$searchgid);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchLGU(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllLGU($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_lgu; ?>" class="trow">
                <td><?php echo $row->lgu_name; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_lgu;?>" class="btn btn-info btn-edit-lgu " onclick="edit_lgu(this)">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeLGU" data-id="<?php echo $row->id_lgu ?>" title="Remove">Remove</button></td>
            <input type="hidden" id="cR<?php echo $row->id_lgu;?>" value="<?php echo $row->id_lgu ?>" />

            </tr>

            <?php
        }
    }



    public function deleteLGUs($id = null)
    {
            $sql1 = $this->db->where('id_lgu',$id)
                                            ->get('tblpalgu')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpalgu WHERE id_lgu = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function Updatelgu(){
        $gencode = $this->input->post("lgu-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("lgu-id");
            $lgudetails = array('lgu_name' => $this->input->post("edit-lgu"));
            $this->pamain_model->update_lgu($lgudetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchStaff(){
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllstaff($codegens);

        foreach($datar as $row){
            ?>
            <tr id="<?php echo $row->id_staff; ?>">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo ucwords($row->tfname); ?></td>
                <td class="hide"><?php echo ucwords($row->tmname); ?></td>
                <td class="hide"><?php echo ucwords($row->tlname); ?></td>
                <td class="hide"><?php echo $row->tsex; ?></td>
                <td class="hide"><?php echo $row->tage; ?></td>
                <td class="hide"><?php echo $row->tstatus; ?></td>
                <td class="hide"><?php echo $row->tposition; ?></td>
                <td><?php echo ucwords($row->tfname).' '.ucwords(substr($row->tmname, 0, 1)).'. '.ucwords($row->tlname); ?></td>
                <td><?php echo $row->sexdesc; ?></td>
                <td><?php echo $row->adescription; ?></td>
                <td><?php echo $row->tposition ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_update; ?></td>
                <td class="hide"><?php echo $row->tsuffix; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_staff;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_staff(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removestaff" data-id="<?php echo $row->id_staff ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="c1<?php echo $row->id_staff;?>" value="<?php echo $row->id_staff ?>" />
                <input type="hidden" id="emp_month<?php echo $row->id_staff;?>" value="<?php echo $row->appointed_month ?>" />
                <input type="hidden" id="emp_year<?php echo $row->id_staff;?>" value="<?php echo $row->appointed_year ?>" />
                <input type="hidden" id="emp_stat<?php echo $row->id_staff;?>" value="<?php echo $row->status ?>" />

            </tr>


            <?php
        }
    }

    public function deleteStaff($id = null)
    {
         $sql = "DELETE FROM tblpasustaff WHERE id_staff = '$id'";
        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_staff(){
        $gencode = $this->input->post("staff-gencode");
        $date_update = date("Y-m-d");
        if($this->session->userdata('email')){
            $staffgid = $this->input->post("staff-id");
            $staffdetails = array('tfname' => $this->input->post("edit-tfname"),
                                  'tmname' => $this->input->post("edit-tmname"),
                                  'tlname' => $this->input->post("edit-ttlname"),
                                  'tsuffix' => $this->input->post("edit-tsuffix"),
                                  'tsex' => $this->input->post("edit-tsex"),
                                  'tage' => $this->input->post("edit-tage"),
                                  'tstatus' => $this->input->post("edit-tappointment"),
                                  'tposition' => $this->input->post("edit-tposition"),
                                  'status' => $this->input->post("edit-status_employment"),
                                  'appointed_month' => $this->input->post("edit-pamb_date_month"),
                                  'appointed_year' => $this->input->post("edit-pamb_date_year"),
                                  'date_update' => $date_update,

                                );
            $this->pamain_model->update_staffs($staffdetails,$staffgid);
            echo json_encode(['result' => $this->input->post("edit-tfname")." ". $this->input->post("edit-tmname")." ".$this->input->post("edit-ttlname")]);
        }
    }

    public function fetchImageForestFormDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllff($codegens);
        $total = $this->pamain_model->getAllfftotal($codegens);
        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_forestform; ?>" class="trow">
                <td><?php echo $row->ff_details; ?></td>
                <td><?php echo $row->forest_formation_area." has."; ?></td>
                <td class="hide"><?php echo $row->forest_formation_area; ?></td>
                <td class="hide"><?php echo $row->forest_formation_remarks; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_updated; ?></td>
                <td class=""><?php echo $row->forest_formation_remarks; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_forestform;?>" class="btn btnbtn btn-info btn-xs" onclick="editfform(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removefform" data-id="<?php echo $row->id_forestform ?>" title="Remove">Remove</button>
                    <input type="hidden" id="cfftype<?php echo $row->id_forestform;?>" value="<?php echo $row->forest_formation ?>" />
                </td>
            </tr>
            <?php } ?>
            <?php foreach ($total as $row) { ?>
               <tr style="background-color: #ffcccc;font-weight: 700">
                   <td>GRAND TOTAL</td>
                   <td colspan="3"><?php echo $row->gtotal." has." ?></td>
               </tr>
            <?php
            }
    }

    public function fetchImageForestForm(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageForestForm($codegens);
        if (!empty($datar)) {
            foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/ff_map_img/'.$row->ff_map_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/ff_map_img/'.$row->ff_map_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_forestform" class="hidden" value="'.$row->id_forestform.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimageforestform" data-id="'.$row->id_forestform.'" title="Remove">Remove</button><br>
           </div>
           ';
        }
        } else {
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/ff_map_img/nophoto.jpg" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/ff_map_img/nophoto.jpg" id="" class="img-thumbnail img-gallery" /></a><br>
            <span class="span_img_notif"></span>
           </div>
           ';
        }

        echo $output;
    }

    public function deletefform($id = null)
        {
        $sql = "DELETE FROM tblpaforestformation_details WHERE id_forestform = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deleteforestformmap($id = null)
        {
            $sql1 = $this->db->where('id_forestform',$id)
                                            ->get('tblpaforestformation')
                                            ->row();
            if ($sql1->ff_map_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/ff_map_img/'.$sql1->ff_map_img);
            }else{

            }

            $sql = "DELETE FROM tblpaforestformation WHERE id_forestform = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchinland(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllInland($codegens);
        $total = $this->pamain_model->getAllInlandTotal($codegens);
        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_inland; ?>" class="trow">
                <td><?php echo $row->inland_desc; ?></td>
                <td><?php echo $row->inland_area." has."; ?></td>
                <td class="hide"><?php echo $row->inland_area; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_inland;?>" class="btn btn-info btn-edit-visitors" onclick="editinland(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeinland" data-id="<?php echo $row->id_inland ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php } ?>
            <?php foreach ($total as $row) { ?>
               <tr style="background-color: #ffcccc;font-weight: 700">
                   <td>GRAND TOTAL</td>
                   <td colspan="2"><?php echo $row->gtotal." has." ?></td>
               </tr>
            <?php
            }
    }

    public function deleteinland($id = null)
        {
        $sql = "DELETE FROM tblpainland WHERE id_inland = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_inland(){

        $gencode = $this->input->post("inland-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("inland-id");
            $servicedetails = array('inland_desc' => $this->input->post("edit-inland_desc"),
                                    'inland_area' => $this->input->post("edit-inland_area"),
                                    );
            $this->pamain_model->update_Inland($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchwetland(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllwetland($codegens);
        $total = $this->pamain_model->getAllwetlandtotal($codegens);

        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_wetland; ?>" class="trow">
                <td><?php echo $row->wetland_desc; ?></td>
                <td><?php echo $row->wetland_area." has."; ?></td>
                <td class="hide"><?php echo $row->wetland_area; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_wetland;?>" class="btn btn-info btn-edit-visitors" onclick="editwetland(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removewetland" data-id="<?php echo $row->id_wetland ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php } ?>
            <?php foreach ($total as $row) { ?>
               <tr style="background-color: #ffcccc;font-weight: 700">
                   <td>GRAND TOTAL</td>
                   <td colspan="2"><?php echo $row->gtotal." has." ?></td>
               </tr>
            <?php
            }
    }

    public function deletewetland($id = null)
        {
        $sql = "DELETE FROM tblpawetland WHERE id_wetland = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_wetland(){

        $gencode = $this->input->post("wetland-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("wetland-id");
            $servicedetails = array('wetland_desc' => $this->input->post("edit-wetland_desc"),
                                    'wetland_area' => $this->input->post("edit-wetland_area"),
                                    );
            $this->pamain_model->update_Wetland($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchcaves(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageCave($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/cavemap_img/'.$row->cavemap_img.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/cavemap_img/'.$row->cavemap_img.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_cavemap" class="hidden" value="'.$row->id_cavemap.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removecavemapimage" data-id="'.$row->id_cavemap.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimagecaves($id = null)
        {
            $sql1 = $this->db->where('id_cavemap',$id)
                                            ->get('tblpacavemap')
                                            ->row();
            if ($sql1->cavemap_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/cavemap_img/'.$sql1->cavemap_img);
            }else{

            }

            $sql = "DELETE FROM tblpacavemap WHERE id_cavemap = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchThreatMap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageThreatMap($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/img_threat_map/'.$row->threat_map_img.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/img_threat_map/'.$row->threat_map_img.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_threatmap" class="hidden" value="'.$row->id_threatmap.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimageThreatimagemap" data-id="'.$row->id_threatmap.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletethreatmap($id = null)
        {
            $sql1 = $this->db->where('id_threatmap',$id)
                                            ->get('tblpatreatmap')
                                            ->row();
            if ($sql1->threat_map_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/img_threat_map/'.$sql1->threat_map_img);
            }else{

            }

            $sql = "DELETE FROM tblpatreatmap WHERE id_threatmap = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchcoralmap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageCoral($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/coralreef_map_img/'.$row->coralreefmap.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/coralreef_map_img/'.$row->coralreefmap.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_coralmap" class="hidden" value="'.$row->id_coralmap.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemapimagecoralreef" data-id="'.$row->id_coralmap.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimagecoralreefs($id = null)
        {
            $sql1 = $this->db->where('id_coralmap',$id)
                                            ->get('tblpacoastalcoralmap')
                                            ->row();
            if ($sql1->coralreefmap != "nophoto.jpg") {
                unlink('bmb_assets2/upload/coralreef_map_img/'.$sql1->coralreefmap);
            }else{

            }

            $sql = "DELETE FROM tblpacoastalcoralmap WHERE id_coralmap = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchseagrassmap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageSeagrass($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/seagrass_map/'.$row->seagrass_map.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/seagrass_map/'.$row->seagrass_map.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_seagrassmap" class="hidden" value="'.$row->id_seagrassmap.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemapimageseagrasses" data-id="'.$row->id_seagrassmap.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimageseagrasses($id = null)
        {
            $sql1 = $this->db->where('id_seagrassmap',$id)
                                            ->get('tblpacoastalseagrassmap')
                                            ->row();
            if ($sql1->seagrass_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/seagrass_map/'.$sql1->seagrass_map);
            }else{

            }

            $sql = "DELETE FROM tblpacoastalseagrassmap WHERE id_seagrassmap = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchmngtzonemap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagemngtzone($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/managementzone_img/'.$row->managementzone_image.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/managementzone_img/'.$row->managementzone_image.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_management" class="hidden" value="'.$row->id_management.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagemngmtzone" data-id="'.$row->id_management.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function fetchattractionmap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageattraction($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/attraction_map/'.$row->attraction_img_map.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/attraction_map/'.$row->attraction_img_map.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_attraction_map" class="hidden" value="'.$row->id_attraction_map.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemapimageattraction" data-id="'.$row->id_attraction_map.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimageattractions($id = null)
        {
            $sql1 = $this->db->where('id_attraction_map',$id)
                                            ->get('tblpaattraction_map')
                                            ->row();
            if ($sql1->attraction_img_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/attraction_map/'.$sql1->attraction_img_map);
            }else{

            }

            $sql = "DELETE FROM tblpaattraction_map WHERE id_attraction_map = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function fetchfacilitymap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagefacility1($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/facility_map/'.$row->facility_map.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/facility_map/'.$row->facility_map.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_facilitymap" class="hidden" value="'.$row->id_facilitymap.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemapimagefacilities" data-id="'.$row->id_facilitymap.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimagefacility($id = null)
        {
            $sql1 = $this->db->where('id_facilitymap',$id)
                                            ->get('tblpafacility_map')
                                            ->row();
            if ($sql1->facility_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/facility_map/'.$sql1->facility_map);
            }else{

            }

            $sql = "DELETE FROM tblpafacility_map WHERE id_facilitymap = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function fetchactivitymap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageactivity($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/activity_map/'.$row->ecotourism_map.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/activity_map/'.$row->ecotourism_map.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_ecotourismmap" class="hidden" value="'.$row->id_ecotourismmap.'" />
           </div>
           ';
        }
        echo $output;
    }

    public function fetchmangrovemap(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagemangrove($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/mangrove_map/'.$row->mangrove_map.'" target="_blank"> <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/mangrove_map/'.$row->mangrove_map.'" id="" class="img-thumbnail img-gallery"  /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_mangrove_map" class="hidden" value="'.$row->id_mangrove_map.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemapimagemangrove" data-id="'.$row->id_mangrove_map.'" title="Remove">Remove</button>
           </div>
           ';
        }
        echo $output;
    }

    public function deletemapimagemangroves($id = null)
        {
            $sql1 = $this->db->where('id_mangrove_map',$id)
                                            ->get('tblpacoastalmangrovemap')
                                            ->row();
            if ($sql1->mangrove_map != "nophoto.jpg") {
                unlink('bmb_assets2/upload/mangrove_map/'.$sql1->mangrove_map);
            }else{

            }

            $sql = "DELETE FROM tblpacoastalmangrovemap WHERE id_mangrove_map = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchcavesDetails(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllcaves($codegens);
        $total = $this->pamain_model->getAllcavestotal($codegens);

        foreach($data as $row){
            $codegen = $row->cavegenerator;
                $dataimage = $this->pamain_model->getAllcavesimages($codegen);

                if ($row->cave_longitude_dms_direction == 1):
                    $long = "East";
                elseif($row->cave_longitude_dms_direction == 2):
                    $long = "West";
                else:
                    $long = "";
                endif;

                if ($row->cave_latitude_dms_direction == 1):
                    $lats = "North";
                elseif($row->cave_latitude_dms_direction == 2):
                    $lats = "South";
                else:
                    $lats = "";
                endif;
            ?>
             <tr id="<?php echo $row->id_caves; ?>" class="trow">
                <td><?php echo $row->caves_name; ?></td>
                <td><?php echo $row->caves_area; ?></td>
                <td><?php echo $row->provinceName.", ".$row->municipalName.", ".$row->barangayName; ?></td>
                <td><?php echo $row->cave_longitude_dms_degrees."° ".$row->cave_longitude_dms_minutes."' ".$row->cave_longitude_dms_seconds."'' ".$long."<br>(".$row->x_long.")"; ?></td>
                <td><?php echo $row->cave_latitude_dms_degrees."° ".$row->cave_latitude_dms_minutes."' ".$row->cave_latitude_dms_seconds."'' ".$lats."<br>(".$row->y_lat.")"; ?></td>
                <td><?php echo $row->class_no."<br>".$row->sub_class_desc; ?></td>

                <td class="hide"><?php echo $row->caves_area; ?></td>
                <td class="hide"><?php echo $row->provinceName ?></td>
                <td class="hide"><?php echo $row->municipalName ?></td>
                <td class="hide"><?php echo $row->barangayName ?></td>
                <td class="hide"><?php echo $row->cave_province ?></td>
                <td class="hide"><?php echo $row->cave_municipal ?></td>
                <td class="hide"><?php echo $row->cave_barangay ?></td>
                <td class="hide"><?php echo $row->class_desc ?></td>
                <td class="hide"><?php echo $row->date_created ?></td>
                <td class="hide"><?php echo $row->date_update ?></td>
                <td class="hide"><?php echo $row->cave_longitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->cave_longitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->cave_longitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->cave_longitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->cave_latitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->cave_latitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->cave_latitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->cave_latitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->x_long ?></td>
                <td class="hide"><?php echo $row->y_lat ?></td>
                <td class="hide"><?php echo $row->cave_class_sub ?></td>
                <td class="hide"><?php echo $row->cave_status ?></td>
                <td class=""><?php echo $row->cave_status_desc ?></td>
                <td class="hide"><?php echo $row->cavegenerator ?></td><!-- 29 -->
                <td class="hide"><!-- 30 -->
                   <?php
                    foreach($dataimage as $rows){
                        echo '<div class="col-md-3">
                       <button type="button" class="btn btn-danger btn-flat removecavesimages gal-btn" data-id="'.$rows->id_cave_image_multi.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/caves_image_upload/').$rows->cave_image_multi.'" class="img-responsive img-thumbnail img-gallery" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_map_shp/').$row->cave_map_shpfile ?>"><?php echo $row->cave_map_shpfile ?></a>
                </td>
                <td class="hide">
                    <?php echo $row->cave_map_shpfile ?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_caves;?>" id="btn-edit" class="btn btnbtn btn-info btn-xs" onclick="editcaves(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removecaves" data-id="<?php echo $row->id_caves ?>" title="Remove">Remove</button>
                    <input type="hidden" id="PR<?php echo $row->id_caves;?>" value="<?php echo $row->cave_province ?>" />
                    <input type="hidden" id="MRs<?php echo $row->id_caves;?>" value="<?php echo $row->cave_municipal ?>" />
                    <input type="hidden" id="BRs<?php echo $row->id_caves;?>" value="<?php echo $row->cave_barangay ?>" />
                    <input type="hidden" id="LSs<?php echo $row->id_caves;?>" value="<?php echo $row->land_status ?>" />
                    <input type="hidden" id="clongdms<?php echo $row->id_caves;?>" value="<?php echo $row->cave_longitude_dms_direction ?>" />
                    <input type="hidden" id="clatdms<?php echo $row->id_caves;?>" value="<?php echo $row->cave_latitude_dms_direction ?>" />
                    <input type="hidden" id="caveclasssub<?php echo $row->id_caves;?>" value="<?php echo $row->cave_class_sub ?>" />
                </td>
            </tr>
            <?php } ?>

            <?php

    }

    public function getCaveProvbyclick()
    {
        $provid = $this->input->post('provid');
        $data = $this->pamain_model->get_sub_prov($provid)->result();

        echo json_encode($data);
    }

    public function getCaveMunbyclick()
    {
        $munid = $this->input->post('munid');
        $datas = $this->pamain_model->get_sub_mun($munid)->result();

        echo json_encode($datas);
    }

    public function deletecaves($id = null)
        {
        $sql = "DELETE FROM tblpacaves WHERE id_caves = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }
    public function update_pasusinformations()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("apasuinfo-id");
            $details = array('apasu_fname' => $this->input->post('edit-apasu_fname'),
                             'apasu_mname' => $this->input->post('edit-apasu_mname'),
                             'apasu_lname' => $this->input->post('edit-apasu_lname'),
                             'apasu_office' => $this->input->post('edit-apasu_officeAddress'),
                             'apasu_sex' => $this->input->post('edit-apasu_sex'),
                             'apasu_position' => $this->input->post('edit-apasu_position'),
                             'apasu_mobile' => $this->input->post('edit-apasu_mobiles'),
                             'apasu_email' => $this->input->post('edit-apasu_email'),
                             'apasu_suffix' => $this->input->post('edit-apasu_suffix'),
                             'apasu_so' => (empty($this->input->post('apasusofile_span'))?$this->input->post('apasusofile_text'):$this->input->post('apasusofile_span')),
                            );
            $this->pamain_model->update_pasusinfor($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }
    public function update_caves()
    {
        $bar = $this->input->post('indep');
        if (empty($bar)) {
            $prov = $this->input->post("edit-provids");
        } else {
            $prov = $this->input->post("edit-caveprovid");
        }

        if (empty($bar)) {
            $mun = $this->input->post("edit-munids");
        } else {
            $mun = $this->input->post("edit-cavemunid");
        }

        if (empty($bar)) {
            $bar = $this->input->post("edit-munids");
        } else {
            $bar = $this->input->post("edit-cavemunid");
        }


        $gencode = $this->input->post("caves-gencode");
        $date_update = date("Y-m-d");

        if($this->session->userdata('email')){
            $id = $this->input->post("caves-id");
            $details = array('caves_area' => str_replace(',','',$this->input->post('edit-caves_area',true)),
                             'caves_name' => $this->input->post("edit-cave_name"),
                             'cave_province' => $prov,
                             'cave_municipal' => $mun,
                             'cave_barangay' => $bar,
                             'caves_long' => $this->input->post("edit-cave_long"),
                             'caves_lat' => $this->input->post("edit-cave_lat"),
                             'land_status' => $this->input->post("edit-caveclass"),
                             'date_update' => $date_update,
                             'cave_longitude_dms_direction' => $this->input->post("edit-clongdmsdir"),
                             'cave_longitude_dms_degrees' => $this->input->post("edit-clongdmsdegree"),
                             'cave_longitude_dms_minutes' => $this->input->post("edit-clongdmsminute"),
                             'cave_longitude_dms_seconds' => $this->input->post("edit-clongdmssecond"),
                             'cave_latitude_dms_direction' => $this->input->post("edit-clatdmsdir"),
                             'cave_latitude_dms_degrees' => $this->input->post("edit-clatdmsdegree"),
                             'cave_latitude_dms_minutes' => $this->input->post("edit-clatdmsminute"),
                             'cave_latitude_dms_seconds' => $this->input->post("edit-clatdmssecond"),
                             'x_long' => $this->input->post("edit-clongoutputdd"),
                             'y_lat' => $this->input->post("edit-clatoutputdd"),
                             'cave_class_sub' => $this->input->post("edit-cavesubclass"),
                             'cave_status' => $this->input->post("edit-cavestatus"),
                             'cave_map_shpfile' => (!empty($this->input->post('edit-new_shpfilecave'))?$this->input->post('edit-new_shpfilecave'):$this->input->post("edit-old_shpfilecave")),
                            );
            $this->pamain_model->update_Caves($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchImageiw(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $dataiw = $this->pamain_model->getAllImageiw($codegens);
        if (!empty($dataiw)) {
           foreach($dataiw as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/iwmap/'.$row->iw_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwmap/'.$row->iw_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="iw_id" class="hidden" value="'.$row->iw_id.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimageinlandwetland" data-id="'.$row->iw_id.'" title="Remove">Remove</button><br>
           </div>
           ';
            }
        } else {
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/iwmap/nophoto.jpg" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwmap/nophoto.jpg" id="" class="img-thumbnail img-gallery" /></a><br>
            <span class="span_img_notif"></span>
           </div>
           ';
        }


        echo $output;
    }

    public function fetchImagehiw(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $dataiw = $this->pamain_model->getAllImagehiw($codegens);
        if (!empty($dataiw)) {
           foreach($dataiw as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/iwhumanmade_map/'.$row->hiw_img.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwhumanmade_map/'.$row->hiw_img.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="hiw_id" class="hidden" value="'.$row->hiw_id.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeimagehumanwetland" data-id="'.$row->hiw_id.'" title="Remove">Remove</button><br>
           </div>
           ';
            }
        } else {
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/iwhumanmade_map/nophoto.jpg" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwhumanmade_map/nophoto.jpg" id="" class="img-thumbnail img-gallery" /></a><br>
            <span class="span_img_notif"></span>
           </div>
           ';
        }


        echo $output;
    }

    public function fetchImagepa(){
             $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagepa($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12">
            <a href="'.base_url().'bmb_assets2/upload/pa_profile_pic/'.$row->pa_image.'" target="_blank"><img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/pa_profile_pic/'.$row->pa_image.'" id="" class="img-thumbnail img-gallery" /></a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_pa_image" class="hidden" value="'.$row->id_pa_image.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removePAImageuploaded" data-id="'.$row->id_pa_image.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletepaimageupload($id = null)
        {
            $sql1 = $this->db->where('id_pa_image',$id)
                                            ->get('tblpamain_img')
                                            ->row();
            if ($sql1->pa_image != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pa_profile_pic/'.$sql1->pa_image);
            }else{

            }

            $sql = "DELETE FROM tblpamain_img WHERE id_pa_image = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }


    public function fetchiw(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAlliw($codegens);

        foreach($data as $row){
            if ($row->down_long_dms_direction == 1):
                    $longd = "East";
                elseif($row->down_long_dms_direction == 2):
                    $longd = "West";
                else:
                    $longd = "";
                endif;
            if ($row->down_lat_dms_direction == 1):
                    $latdd = "North";
                elseif($row->down_lat_dms_direction == 2):
                    $latdd = "South";
                else:
                    $latdd = "";
                endif;


            if ($row->mid_long_dms_direction == 1):
                    $longm = "East";
                elseif($row->mid_long_dms_direction == 2):
                    $longm = "West";
                else:
                    $longm = "";
                endif;
            if ($row->mid_lat_dms_direction == 1):
                    $latmm = "North";
                elseif($row->mid_lat_dms_direction == 2):
                    $latmm = "South";
                else:
                    $latmm = "";
                endif;


            if ($row->up_long_dms_direction == 1):
                    $longu = "East";
                elseif($row->up_long_dms_direction == 2):
                    $longu = "West";
                else:
                    $longu = "";
                endif;
            if ($row->up_lat_dms_direction == 1):
                    $latu = "North";
                elseif($row->up_lat_dms_direction == 2):
                    $latu = "South";
                else:
                    $latu = "";
                endif;


            if ($row->iw_longitude_dms_direction == 1):
                    $longs = "East";
                elseif($row->iw_longitude_dms_direction == 2):
                    $longs = "West";
                else:
                    $longs = "";
                endif;
            if ($row->iw_latitude_dms_direction == 1):
                    $lats = "North";
                elseif($row->iw_latitude_dms_direction == 2):
                    $lats = "South";
                else:
                    $lats = "";
                endif;
            ?>
             <tr id="<?php echo $row->iw_id; ?>" class="trow">
                <td class="hide"><?php echo ucwords($row->iw_name); ?></td>
                <td class="hide"><?php echo $row->iw_area; ?></td>
                <td class="hide"><?php echo $row->provinceName.", ".$row->municipalName; ?></td>
                <td class="hide"><?php echo $row->iw_long; ?></td>
                <td class="hide"><?php echo $row->iw_lat; ?></td>
                <td class="hide"><?php echo $row->wetland_desc; ?></td>
                <td class="hide"><?php echo $row->iw_year_assessed; ?></td>
                <td class="hide"><?php echo $row->provinceName ?></td>
                <td class="hide"><?php echo $row->municipalName ?></td>
                <td class="hide"><?php echo $row->wetland_type ?></td>
                <td class="hide"><?php echo $row->iw_description ?></td>
                <td class="hide"><?php echo $row->iw_province ?></td>
                <td class="hide"><?php echo $row->iw_municipal ?></td>
                <td class="hide"><?php echo $row->up_long_dms_direction ?></td>
                <td class="hide"><?php echo $row->up_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->up_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->up_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->up_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->up_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->up_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->up_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->mid_long_dms_direction ?></td>
                <td class="hide"><?php echo $row->mid_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->mid_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->mid_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->mid_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->mid_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->mid_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->mid_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->down_long_dms_direction ?></td> <!-- 29 -->
                <td class="hide"><?php echo $row->down_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->down_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->down_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->down_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->down_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->down_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->down_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->iw_longitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->iw_longitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->iw_longitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->iw_longitude_dms_seconds ?></td> <!-- 40 -->
                <td class="hide"><?php echo $row->iw_latitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->iw_latitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->iw_latitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->iw_latitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->inland_map_img ?></td>
                <td class="hide"><?php echo $row->inland_shp_file ?></td>
                <td class="hide"><?php echo base_url().'bmb_assets2/upload/iwimg/'.$row->inland_map_img ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/iwshp/'.$row->inland_shp_file ?></td>
                <?php if (!empty($row->inland_shp_file)): ?>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/iwshp/').$row->inland_shp_file ?>"><?php echo $row->inland_shp_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->inland_shp_file; ?></td>
                <?php else: ?>
                    <td class="hide"></td>
                    <td class="hide"><?php echo $row->inland_shp_file; ?></td>
                <?php endif ?>
                <td style="text-align: left">
                    <?php echo '<br><hr><img src="../../../bmb_assets2/upload/iwimg/'.(!empty($row->inland_map_img)?$row->inland_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>'.
                    '<br><b>Shapefile : </b>'.'<a href="'.base_url().'bmb_assets2/upload/iwshp/'.$row->inland_shp_file.'">'.$row->inland_shp_file.'</a>'.
                    '<br><b>Wetland site name :</b>'.ucwords($row->iw_name).
                    '<br><b>Location :</b>'.$row->provinceName.", ".$row->municipalName.
                    '<br><b>Approximate area (has) : </b>'.number_format($row->iw_area,2).
                    '<br><b>Wetland type : </b>'.$row->wetland_desc.
                    '<br><b>Waterbody Classification : </b>'.$row->id_waterClassDesc." (".$row->waterClass.")".
                    '<br><b>Centroid for Geographic Location : </b>'.
                    $longs.' '.$row->iw_longitude_dms_degrees."° ".
                    $row->iw_longitude_dms_minutes."' ".
                    $row->iw_longitude_dms_seconds.'", '.
                    $lats.' '.$row->iw_latitude_dms_degrees."° ".
                    $row->iw_latitude_dms_minutes."' ".
                    $row->iw_latitude_dms_seconds.'", '.


                    '</br><b>Upstream Coordinates : </b>'.
                    $longu.' '.$row->up_long_dms_degrees."° ".
                    $row->up_long_dms_minutes."' ".
                    $row->up_long_dms_seconds.'", '.
                    $latu.' '.$row->up_lat_dms_degrees."° ".
                    $row->up_lat_dms_minutes."' ".
                    $row->up_lat_dms_seconds.'", '.


                    '</br><b>Midstream Coordinates : </b>'.
                    $longm.' '.$row->mid_long_dms_degrees."° ".
                    $row->mid_long_dms_minutes."' ".
                    $row->mid_long_dms_seconds.'", '.
                    $latmm.' '.$row->mid_lat_dms_degrees."° ".
                    $row->mid_lat_dms_minutes."' ".
                    $row->mid_lat_dms_seconds.'", '.


                    '</br><b>Downstream Coordinates : </b>'.
                    $longd.' '.$row->down_long_dms_degrees."° ".
                    $row->down_long_dms_minutes."' ".
                    $row->down_long_dms_seconds.'", '.
                    $latdd.' '.$row->down_lat_dms_degrees."° ".
                    $row->down_lat_dms_minutes."' ".
                    $row->down_lat_dms_seconds.'", '; ?>
                    <br><button type="button" value="<?php echo $row->iw_id;?>" id="btn-edit" class="btn btnbtn btn-info btn-xs" onclick="editiw(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeiw" data-id="<?php echo $row->iw_id ?>" title="Remove">Remove</button><hr>
                </td>
                <td class="hide"><?php echo $row->iw_long ?></td>
                <td class="hide"><?php echo $row->iw_lat ?></td>
                <td class="hide"><?php echo $row->up_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->up_lat_dms_convert ?></td>
                <td class="hide"><?php echo $row->mid_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->mid_lat_dms_convert ?></td>
                <td class="hide"><?php echo $row->down_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->down_lat_dms_convert ?></td>

                    <input type="hidden" id="PR1s<?php echo $row->iw_id;?>" value="<?php echo $row->iw_province ?>" />
                    <input type="hidden" id="MRs1<?php echo $row->iw_id;?>" value="<?php echo $row->iw_municipal ?>" />
                    <input type="hidden" id="LSs1<?php echo $row->iw_id;?>" value="<?php echo $row->wetland_type ?>" />
                    <input type="hidden" id="wbclass<?php echo $row->iw_id;?>" value="<?php echo $row->waterbody_classID ?>" />
                    <input type="hidden" id="wbclassSub<?php echo $row->iw_id;?>" value="<?php echo $row->waterbodysub_classID ?>" />
            </tr>
            <?php
        }

    }

    public function fetchhiws(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllhiw($codegens);

        foreach($data as $row){
            if ($row->hdown_long_dms_direction == 1):
                    $longd = "East";
                elseif($row->hdown_long_dms_direction == 2):
                    $longd = "West";
                else:
                    $longd = "";
                endif;
            if ($row->hdown_lat_dms_direction == 1):
                    $latdd = "North";
                elseif($row->hdown_lat_dms_direction == 2):
                    $latdd = "South";
                else:
                    $latdd = "";
                endif;


            if ($row->hmid_long_dms_direction == 1):
                    $longm = "East";
                elseif($row->hmid_long_dms_direction == 2):
                    $longm = "West";
                else:
                    $longm = "";
                endif;
            if ($row->hmid_lat_dms_direction == 1):
                    $latmm = "North";
                elseif($row->hmid_lat_dms_direction == 2):
                    $latmm = "South";
                else:
                    $latmm = "";
                endif;


            if ($row->hup_long_dms_direction == 1):
                    $longu = "East";
                elseif($row->hup_long_dms_direction == 2):
                    $longu = "West";
                else:
                    $longu = "";
                endif;
            if ($row->hup_lat_dms_direction == 1):
                    $latu = "North";
                elseif($row->hup_lat_dms_direction == 2):
                    $latu = "South";
                else:
                    $latu = "";
                endif;


            if ($row->hiw_longitude_dms_direction == 1):
                    $longs = "East";
                elseif($row->hiw_longitude_dms_direction == 2):
                    $longs = "West";
                else:
                    $longs = "";
                endif;
            if ($row->hiw_latitude_dms_direction == 1):
                    $lats = "North";
                elseif($row->hiw_latitude_dms_direction == 2):
                    $lats = "South";
                else:
                    $lats = "";
                endif;
            ?>
             <tr id="<?php echo $row->hiw_id; ?>" class="trow">
                <td class="hide"><?php echo ucwords($row->hiw_name); ?></td>
                <td class="hide"><?php echo $row->hiw_area; ?></td>
                <td class="hide"><?php echo $row->provinceName.", ".$row->municipalName; ?></td>
                <td class="hide"><?php echo $row->hiw_long; ?></td>
                <td class="hide"><?php echo $row->hiw_lat; ?></td>
                <td class="hide"><?php echo $row->hwetland_desc; ?></td>
                <td class="hide"><?php echo $row->hiw_year_assessed; ?></td>
                <td class="hide"><?php echo $row->provinceName ?></td>
                <td class="hide"><?php echo $row->municipalName ?></td>
                <td class="hide"><?php echo $row->hwetland_type ?></td>
                <td class="hide"><?php echo $row->hiw_description ?></td>
                <td class="hide"><?php echo $row->hiw_province ?></td>
                <td class="hide"><?php echo $row->hiw_municipal ?></td>
                <td class="hide"><?php echo $row->hup_long_dms_direction ?></td>
                <td class="hide"><?php echo $row->hup_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hup_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hup_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hup_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->hup_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hup_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hup_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hmid_long_dms_direction ?></td>
                <td class="hide"><?php echo $row->hmid_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hmid_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hmid_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hmid_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->hmid_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hmid_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hmid_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hdown_long_dms_direction ?></td> <!-- 29 -->
                <td class="hide"><?php echo $row->hdown_long_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hdown_long_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hdown_long_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hdown_lat_dms_direction ?></td>
                <td class="hide"><?php echo $row->hdown_lat_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hdown_lat_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hdown_lat_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hiw_longitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->hiw_longitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hiw_longitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hiw_longitude_dms_seconds ?></td> <!-- 40 -->
                <td class="hide"><?php echo $row->hiw_latitude_dms_direction ?></td>
                <td class="hide"><?php echo $row->hiw_latitude_dms_degrees ?></td>
                <td class="hide"><?php echo $row->hiw_latitude_dms_minutes ?></td>
                <td class="hide"><?php echo $row->hiw_latitude_dms_seconds ?></td>
                <td class="hide"><?php echo $row->hinland_map_img ?></td>
                <td class="hide"><?php echo $row->hinland_shp_file ?></td>
                <td class="hide"><?php echo base_url().'bmb_assets2/upload/iwhumanmade_img/'.$row->hinland_map_img ?></td>
                <td class="hide"><?php echo '../../../bmb_assets2/upload/humanmade_shp/'.$row->hinland_shp_file ?></td>
                <?php if (!empty($row->hinland_shp_file)): ?>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/humanmade_shp/').$row->hinland_shp_file ?>"><?php echo $row->hinland_shp_file ?></a>
                    </td>
                    <td class="hide"><?php echo $row->hinland_shp_file; ?></td>
                <?php else: ?>
                    <td class="hide"></td>
                    <td class="hide"><?php echo $row->hinland_shp_file; ?></td>
                <?php endif ?>
                <td style="text-align: left">
                    <?php echo '<br><hr><img src="../../../bmb_assets2/upload/iwhumanmade_img/'.(!empty($row->hinland_map_img)?$row->hinland_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>Shapefile : </b>'.'<a href="'.base_url().'bmb_assets2/upload/humanmade_shp/'.$row->hinland_shp_file.'">'.$row->hinland_shp_file.'</a>'.
                    '<br><b>Wetland site name :</b>'.ucwords($row->hiw_name).
                    '<br><b>Location :</b>'.$row->provinceName.", ".$row->municipalName.
                    '<br><b>Approximate area (has) : </b>'.number_format($row->hiw_area,2).
                    '<br><b>Wetland type : </b>'.$row->wetland_desc.
                    '<br><b>Waterbody Classification : </b>'.$row->waterclass_desc.
                    '<br><b>Centroid for Geographic Location : </b>'.
                    $longs.' '.$row->hiw_longitude_dms_degrees."° ".
                    $row->hiw_longitude_dms_minutes."' ".
                    $row->hiw_longitude_dms_seconds.'", '.
                    $lats.' '.$row->hiw_latitude_dms_degrees."° ".
                    $row->hiw_latitude_dms_minutes."' ".
                    $row->hiw_latitude_dms_seconds.'", '.


                    '</br><b>Upstream Coordinates : </b>'.
                    $longu.' '.$row->hup_long_dms_degrees."° ".
                    $row->hup_long_dms_minutes."' ".
                    $row->hup_long_dms_seconds.'", '.
                    $latu.' '.$row->hup_lat_dms_degrees."° ".
                    $row->hup_lat_dms_minutes."' ".
                    $row->hup_lat_dms_seconds.'", '.


                    '</br><b>Midstream Coordinates : </b>'.
                    $longm.' '.$row->hmid_long_dms_degrees."° ".
                    $row->hmid_long_dms_minutes."' ".
                    $row->hmid_long_dms_seconds.'", '.
                    $latmm.' '.$row->hmid_lat_dms_degrees."° ".
                    $row->hmid_lat_dms_minutes."' ".
                    $row->hmid_lat_dms_seconds.'", '.


                    '</br><b>Downstream Coordinates : </b>'.
                    $longd.' '.$row->hdown_long_dms_degrees."° ".
                    $row->hdown_long_dms_minutes."' ".
                    $row->hdown_long_dms_seconds.'", '.
                    $latdd.' '.$row->hdown_lat_dms_degrees."° ".
                    $row->hdown_lat_dms_minutes."' ".
                    $row->hdown_lat_dms_seconds.'", '; ?>
                    <br><button type="button" value="<?php echo $row->hiw_id;?>" id="btn-edit" class="btn btnbtn btn-info btn-xs" onclick="edithiw(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removehiw" data-id="<?php echo $row->hiw_id ?>" title="Remove">Remove</button>
                </td>
                <td class="hide"><?php echo $row->hiw_long ?></td>
                <td class="hide"><?php echo $row->hiw_lat ?></td>
                <td class="hide"><?php echo $row->hup_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->hup_lat_dms_convert ?></td>
                <td class="hide"><?php echo $row->hmid_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->hmid_lat_dms_convert ?></td>
                <td class="hide"><?php echo $row->hdown_long_dms_convert ?></td>
                <td class="hide"><?php echo $row->hdown_lat_dms_convert ?></td>
                    <input type="hidden" id="PR11<?php echo $row->hiw_id;?>" value="<?php echo $row->hiw_province ?>" />
                    <input type="hidden" id="MRs11<?php echo $row->hiw_id;?>" value="<?php echo $row->hiw_municipal ?>" />
                    <input type="hidden" id="LSs11<?php echo $row->hiw_id;?>" value="<?php echo $row->hwetland_type ?>" />
                    <input type="hidden" id="wbclass1<?php echo $row->hiw_id;?>" value="<?php echo $row->hwaterbody_classID ?>" />
                    <input type="hidden" id="hwbclassSub<?php echo $row->hiw_id;?>" value="<?php echo $row->hwaterbodysub_classID ?>" />
            </tr>
            <?php
        }

    }

    public function deleteinlandwetlandmap($id = null)
        {
            $sql1 = $this->db->where('iw_id',$id)
                                            ->get('tblpainlandwetland_map')
                                            ->row();
            if ($sql1->iw_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/iwmap/'.$sql1->iw_img);
            }else{

            }

            $sql = "DELETE FROM tblpainlandwetland_map WHERE iw_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deletehumanwetlandmap($id = null)
        {
            $sql1 = $this->db->where('hiw_id',$id)
                                            ->get('tblpahumanwetland_map')
                                            ->row();
            if ($sql1->hiw_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/iwhumanmade_map/'.$sql1->hiw_img);
            }else{

            }

            $sql = "DELETE FROM tblpahumanwetland_map WHERE hiw_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function deleteiw($id = null)
        {
        $sql = "DELETE FROM tblpainlandwetland WHERE iw_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deletehiw($id = null)
        {
        $sql = "DELETE FROM tblpainlandhumanmade WHERE hiw_id = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_iw()
    {
        $bar = $this->input->post('indepiw');
        if (empty($bar)) {
            $prov = $this->input->post("edit-providsiw");
        } else {
            $prov = $this->input->post("edit-iwprovid");
        }

        if (empty($bar)) {
            $mun = $this->input->post("edit-munidsiw");
        } else {
            $mun = $this->input->post("edit-iwmunid");
        }

         if(!empty($_FILES['edit-pic_inlandimg']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/iwimg';
            $config['file_name'] = $_FILES['edit-pic_inlandimg']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            $config['quality'] = '60%';
            $config['width'] = 200;
            $config['height'] = 200;
            $this->load->library('image_lib', $config);
            $this->image_lib->resize();
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_inlandimg')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['edit-zip_shpfile_inland']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/iwshp';
            $config['file_name'] = $_FILES['edit-zip_shpfile_inland']['name'];
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-zip_shpfile_inland')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }


        $gencode = $this->input->post("iw-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("iw-id");
            $details = array('iw_area' => str_replace(',','',$this->input->post('edit-iwarea',true)),
                             'iw_name' => $this->input->post("edit-iwname"),
                             'iw_province' => $prov,
                             'iw_municipal' => $mun,
                             'iw_long' => $this->input->post("edit-iwddlongoutput"),
                             'iw_lat' => $this->input->post("edit-iwddlatoutput"),
                             'iw_year_assessed' => $this->input->post("edit-iwassessed"),
                             'iw_description' => $this->input->post("edit-iw_desc"),
                             'wetland_type' => $this->input->post("edit-iwtype"),
                             'waterbody_classID' => $this->input->post("edit-inlandwaterbodyclass"),
                             'inland_map_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_pictureinland')),
                             'inland_shp_file' => (!empty($filenames2)?$filenames2:$this->input->post('edit-shpzip_iwinput')),
                             'iw_longitude_dms_direction' => $this->input->post('edit-iw_longitude_dms_direction'),
                             'iw_longitude_dms_degrees' => $this->input->post('edit-iw_longitude_dms_degrees'),
                             'iw_longitude_dms_minutes' => $this->input->post('edit-iw_longitude_dms_minutes'),
                             'iw_longitude_dms_seconds' => $this->input->post('edit-iw_longitude_dms_seconds'),
                             'iw_latitude_dms_direction' => $this->input->post('edit-iw_latitude_dms_direction'),
                             'iw_latitude_dms_degrees' => $this->input->post('edit-iw_latitude_dms_degrees'),
                             'iw_latitude_dms_minutes' => $this->input->post('edit-iw_latitude_dms_minutes'),
                             'iw_latitude_dms_seconds' => $this->input->post('edit-iw_latitude_dms_seconds'),
                             'up_long_dms_direction' => $this->input->post('edit-upstream_longitude_dms_direction'),
                             'up_long_dms_degrees' => $this->input->post('edit-upstream_longitude_dms_degrees'),
                             'up_long_dms_minutes' => $this->input->post('edit-upstream_longitude_dms_minutes'),
                             'up_long_dms_seconds' => $this->input->post('edit-upstream_longitude_dms_seconds'),
                             'up_lat_dms_direction' => $this->input->post('edit-upstream_latitude_dms_direction'),
                             'up_lat_dms_degrees' => $this->input->post('edit-upstream_latitude_dms_degrees'),
                             'up_lat_dms_minutes' => $this->input->post('edit-upstream_latitude_dms_minutes'),
                             'up_lat_dms_seconds' => $this->input->post('edit-upstream_latitude_dms_seconds'),
                             'mid_long_dms_direction' => $this->input->post('edit-midstream_longitude_dms_direction'),
                             'mid_long_dms_degrees' => $this->input->post('edit-midstream_longitude_dms_degrees'),
                             'mid_long_dms_minutes' => $this->input->post('edit-midstream_longitude_dms_minutes'),
                             'mid_long_dms_seconds' => $this->input->post('edit-midstream_longitude_dms_seconds'),
                             'mid_lat_dms_direction' => $this->input->post('edit-midstream_latitude_dms_direction'),
                             'mid_lat_dms_degrees' => $this->input->post('edit-midstream_latitude_dms_degrees'),
                             'mid_lat_dms_minutes' => $this->input->post('edit-midstream_latitude_dms_minutes'),
                             'mid_lat_dms_seconds' => $this->input->post('edit-midstream_latitude_dms_seconds'),
                             'down_long_dms_direction' => $this->input->post('edit-downstream_longitude_dms_direction'),
                             'down_long_dms_degrees' => $this->input->post('edit-downstream_longitude_dms_degrees'),
                             'down_long_dms_minutes' => $this->input->post('edit-downstream_longitude_dms_minutes'),
                             'down_long_dms_seconds' => $this->input->post('edit-downstream_longitude_dms_seconds'),
                             'down_lat_dms_direction' => $this->input->post('edit-downstream_latitude_dms_direction'),
                             'down_lat_dms_degrees' => $this->input->post('edit-downstream_latitude_dms_degrees'),
                             'down_lat_dms_minutes' => $this->input->post('edit-downstream_latitude_dms_minutes'),
                             'down_lat_dms_seconds' => $this->input->post('edit-downstream_latitude_dms_seconds'),
                             'up_long_dms_convert' => $this->input->post('edit-upstreamddlongoutput'),
                             'up_lat_dms_convert' => $this->input->post('edit-upstreamddlatoutput'),
                             'mid_long_dms_convert' => $this->input->post('edit-midstreamddlongoutput'),
                             'mid_lat_dms_convert' => $this->input->post('edit-midstreamddlatoutput'),
                             'down_long_dms_convert' => $this->input->post('edit-downstreamddlongoutput'),
                             'down_lat_dms_convert' => $this->input->post('edit-downstreamddlatoutput'),
                             'waterbodysub_classID' => $this->input->post('edit-inlandwaterbodyclassSub'),
                        );

            $this->pamain_model->update_iw($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_hiw()
    {
        $bar = $this->input->post('hindepiw');
        if (empty($bar)) {
            $prov = $this->input->post("edit-hprovidsiw");
        } else {
            $prov = $this->input->post("edit-hiwprovid");
        }

        if (empty($bar)) {
            $mun = $this->input->post("edit-hmunidsiw");
        } else {
            $mun = $this->input->post("edit-hiwmunid");
        }

         if(!empty($_FILES['edit-pic_hinlandimg']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/humanmade_map';
            $config['file_name'] = $_FILES['edit-pic_hinlandimg']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg';
            $config['quality'] = '60%';
            $config['width'] = 200;
            $config['height'] = 200;
            $this->load->library('image_lib', $config);
            $this->image_lib->resize();
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-pic_hinlandimg')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['edit-zip_shp_file_hinland']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/humanmade_shp';
            $config['file_name'] = $_FILES['edit-zip_shp_file_hinland']['name'];
            $config['allowed_types'] = 'zip';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-zip_shp_file_hinland')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }


        $gencode = $this->input->post("hiw-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("hiw-id");
            $details = array('hiw_area' => str_replace(',','',$this->input->post('edit-hiwarea',true)),
                             'hiw_name' => $this->input->post("edit-hiwname"),
                             'hiw_province' => $prov,
                             'hiw_municipal' => $mun,
                             'hiw_long' => $this->input->post("edit-hiwddlongoutput"),
                             'hiw_lat' => $this->input->post("edit-hiwddlatoutput"),
                             'hiw_year_assessed' => $this->input->post("edit-hiwassessed"),
                             'hiw_description' => $this->input->post("edit-hiw_desc"),
                             'hwetland_type' => $this->input->post("edit-hiwtype"),
                             'hwaterbody_classID' => $this->input->post("edit-hinlandwaterbodyclass"),
                             'hwaterbodysub_classID' => $this->input->post("edit-hinlandwaterbodyclassSub"),
                             'hinland_map_img' => (!empty($filenames)?$filenames:$this->input->post('edit-old_picturehinland')),
                             'hinland_shp_file' => (!empty($filenames2)?$filenames2:$this->input->post('edit-shpzip_hiwinput')),
                             'hiw_longitude_dms_direction' => $this->input->post('edit-hiw_longitude_dms_direction'),
                             'hiw_longitude_dms_degrees' => $this->input->post('edit-hiw_longitude_dms_degrees'),
                             'hiw_longitude_dms_minutes' => $this->input->post('edit-hiw_longitude_dms_minutes'),
                             'hiw_longitude_dms_seconds' => $this->input->post('edit-hiw_longitude_dms_seconds'),
                             'hiw_latitude_dms_direction' => $this->input->post('edit-hiw_latitude_dms_direction'),
                             'hiw_latitude_dms_degrees' => $this->input->post('edit-hiw_latitude_dms_degrees'),
                             'hiw_latitude_dms_minutes' => $this->input->post('edit-hiw_latitude_dms_minutes'),
                             'hiw_latitude_dms_seconds' => $this->input->post('edit-hiw_latitude_dms_seconds'),
                             'hup_long_dms_direction' => $this->input->post('edit-hupstream_longitude_dms_direction'),
                             'hup_long_dms_degrees' => $this->input->post('edit-hupstream_longitude_dms_degrees'),
                             'hup_long_dms_minutes' => $this->input->post('edit-hupstream_longitude_dms_minutes'),
                             'hup_long_dms_seconds' => $this->input->post('edit-hupstream_longitude_dms_seconds'),
                             'hup_lat_dms_direction' => $this->input->post('edit-hupstream_latitude_dms_direction'),
                             'hup_lat_dms_degrees' => $this->input->post('edit-hupstream_latitude_dms_degrees'),
                             'hup_lat_dms_minutes' => $this->input->post('edit-hupstream_latitude_dms_minutes'),
                             'hup_lat_dms_seconds' => $this->input->post('edit-hupstream_latitude_dms_seconds'),
                             'hmid_long_dms_direction' => $this->input->post('edit-hmidstream_longitude_dms_direction'),
                             'hmid_long_dms_degrees' => $this->input->post('edit-hmidstream_longitude_dms_degrees'),
                             'hmid_long_dms_minutes' => $this->input->post('edit-hmidstream_longitude_dms_minutes'),
                             'hmid_long_dms_seconds' => $this->input->post('edit-hmidstream_longitude_dms_seconds'),
                             'hmid_lat_dms_direction' => $this->input->post('edit-hmidstream_latitude_dms_direction'),
                             'hmid_lat_dms_degrees' => $this->input->post('edit-hmidstream_latitude_dms_degrees'),
                             'hmid_lat_dms_minutes' => $this->input->post('edit-hmidstream_latitude_dms_minutes'),
                             'hmid_lat_dms_seconds' => $this->input->post('edit-hmidstream_latitude_dms_seconds'),
                             'hdown_long_dms_direction' => $this->input->post('edit-hdownstream_longitude_dms_direction'),
                             'hdown_long_dms_degrees' => $this->input->post('edit-hdownstream_longitude_dms_degrees'),
                             'hdown_long_dms_minutes' => $this->input->post('edit-hdownstream_longitude_dms_minutes'),
                             'hdown_long_dms_seconds' => $this->input->post('edit-hdownstream_longitude_dms_seconds'),
                             'hdown_lat_dms_direction' => $this->input->post('edit-hdownstream_latitude_dms_direction'),
                             'hdown_lat_dms_degrees' => $this->input->post('edit-hdownstream_latitude_dms_degrees'),
                             'hdown_lat_dms_minutes' => $this->input->post('edit-hdownstream_latitude_dms_minutes'),
                             'hdown_lat_dms_seconds' => $this->input->post('edit-hdownstream_latitude_dms_seconds'),
                             'hup_long_dms_convert' => $this->input->post('edit-hupstreamddlongoutput'),
                             'hup_lat_dms_convert' => $this->input->post('edit-hupstreamddlatoutput'),
                             'hmid_long_dms_convert' => $this->input->post('edit-hmidstreamddlongoutput'),
                             'hmid_lat_dms_convert' => $this->input->post('edit-hmidstreamddlatoutput'),
                             'hdown_long_dms_convert' => $this->input->post('edit-hdownstreamddlongoutput'),
                             'hdown_lat_dms_convert' => $this->input->post('edit-hdownstreamddlatoutput'),
                        );

            $this->pamain_model->update_hiw($details,$id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchiccip(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAlliccip($codegens);
        $data_total = $this->pamain_model->getAlliccipTotal($codegens);
        foreach($data as $row){

            $sumip = $row->male_iccip + $row->female_iccip;
            ?>
             <tr id="<?php echo $row->id_iccip; ?>" class="trow">
                <td><?php echo $row->tribe_name; ?></td>
                <td><?php echo $row->male_iccip; ?></td>
                <td><?php echo $row->female_iccip; ?></td>
                <td><?php echo $sumip; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_iccip;?>" class="btn btnbtn btn-info btn-xs" onclick="edittribe(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeiccip" data-id="<?php echo $row->id_iccip ?>" title="Remove">Remove</button>
                    <input type="hidden" id="cR<?php echo $row->id_iccip;?>" value="<?php echo $row->iccip ?>" />
                </td>
            </tr>
            <?php
        }

         foreach($data_total as $trow){ ?>

            <tr style="background-color: #ffcccc;font-weight: 700">
                <td colspan="3">GRAND TOTAL</td>
                <td colspan="2"><?php echo $trow->Total_iccip ?></td>
            </tr>
            <?php
            }
    }

    public function deleteiccip($id = null)
        {
        $sql = "DELETE FROM tbliccip WHERE id_iccip = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deleteseamsdemoinfo($id = null)
        {
        $sql = "DELETE FROM tblseamsdemographic WHERE id_seams_demo = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }


    public function update_iccip(){

        $gencode = $this->input->post("iccip-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("iccip-id");
            $servicedetails = array('male_iccip' => $this->input->post("edit-iccip_male"),
                                    'female_iccip' => $this->input->post("edit-iccip_female"),
                                    'iccip' => $this->input->post("edit-iccsipss"),
                                    );
            $this->pamain_model->update_iccips($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_demo(){

        $scraper = $this->input->post("edit-zipSHPdemo");
        $scraperdelete = $this->input->post("edit-old_zipSHPdemo");

        if(!empty($_FILES['edit-zipSHPdemo']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/demographic_shp';
            $config['file_name'] = $_FILES['edit-zipSHPdemo']['name'];
            $config['allowed_types'] = 'zip';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-zipSHPdemo')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("demo-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("demo-id");
             $servicedetails = array('name_household_head' => $this->input->post("edit_seams_name_head"),
                         'chkhomelot' => $this->input->post("edit_whf")==null ? 0 : 1,
                         'tenured_migrant' => $this->input->post('edit-tenure_migrantyns')==null ? 0 : 1,
                         'ip_recognize' => $this->input->post('edit-ip_recognize')==null ? 0 : 1,
                         'ip_inside_pa' => $this->input->post('edit-ip_inside_pa')==null ? 0 : 1,
                         'ip_outside_pa' => $this->input->post('edit-ip_outside_pa')==null ? 0 : 1,
                         'ip_titled_land' => $this->input->post('edit-ip_titled_land')==null?0:1,
                         'ip_andotl' => $this->input->post('edit-ip_titled_land')==null?0:1,
                         'ip_and' => $this->input->post('edit-ip_and')==null?0:1,
                         'ip_andwtl' => $this->input->post('edit-ip_andwititle')==null?0:1,
                         'ipsiccs' => $this->input->post("edit-select_iccsips"),
                         'seams_sex_head' => $this->input->post("edit_seams_sex"),
                         'seams_male' => str_replace(',','',$this->input->post("edit_seams_male")),
                         'seams_female' => str_replace(',','',$this->input->post("edit_seams_female")),
                         'area_farmlot' => str_replace(',','',$this->input->post("edit_seams_farmlot")),
                         'area_homelot' => str_replace(',','',$this->input->post("edit_seams_homelot")),
                         'other_uses' => str_replace(',','',$this->input->post("edit_seams_otheruses")),
                         'area_occupied' => str_replace(',','',$this->input->post("edit_seams_occupied")),
                         'date_occupy_month' => $this->input->post("edit_seams_date_month"),
                         'date_occupy_year' => $this->input->post("edit_seams_date_year"),
                         'seams_remarks' => $this->input->post("edit_seams_remarks"),
                         'longitude_dms_direction' => $this->input->post("edit-longitude_dms_direction"),
                         'longitude_dms_degrees' => $this->input->post("edit-longitude_dms_degrees"),
                         'longitude_dms_minutes' => $this->input->post("edit-longitude_dms_minutes"),
                         'longitude_dms_seconds' => $this->input->post("edit-longitude_dms_seconds"),
                         'latitude_dms_direction' => $this->input->post("edit-latitude_dms_direction"),
                         'latitude_dms_degrees' => $this->input->post("edit-latitude_dms_degrees"),
                         'latitude_dms_minutes' => $this->input->post("edit-latitude_dms_minutes"),
                         'latitude_dms_seconds' => $this->input->post("edit-latitude_dms_seconds"),
                         'x_long' => $this->input->post("edit-ddlongoutputdemo"),
                         'y_lat' => $this->input->post("edit-ddlatoutputdemo"),
                         'shp_zip' => (!empty($filenames)?$filenames:$this->input->post('edit-old_zipSHPdemo'))
                         );
            $this->pamain_model->update_demo($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchdemo(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllseamsdemo($codegens);
        $data2 = $this->pamain_model->getAllbarangayseams($codegens);
        foreach ($data2 as $barangay) { ?>
          <tr>
              <th colspan="11" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $barangay->provinceName.", ".$barangay->municipalName.", ".$barangay->barangayName ?></th>
          </tr>

       <?php

        foreach($data as $row){
            $sumip = $row->seams_male + $row->seams_female;
            if ($row->seams_barangay == $barangay->id_b) { ?>
                <tr id="<?php echo $row->id_seams_demo; ?>" class="trow">
                <td><?php echo $row->name_household_head; ?></td>
                <td><?php echo $row->sexdesc; ?></td>
                <td><?php echo $row->seams_male; ?></td>
                <td><?php echo $row->seams_female; ?></td>
                <td><?php echo $sumip; ?></td>
                <td><?php echo number_format($row->area_farmlot,3); ?></td>
                <td><?php echo number_format($row->area_homelot,3); ?></td>
                <td><?php echo number_format($row->other_uses,3); ?></td>
                <td><?php echo number_format($row->area_occupied,3); ?></td>
                <td><?php echo $row->month." ".$row->date_occupy_year; ?></td>
                <td class="hide"><?php echo $row->seams_remarks; ?></td>
                <td class="hide"><?php echo $row->date_occupy_month; ?></td>
                <td class="hide"><?php echo $row->date_occupy_year; ?></td>
                <td class="hide"><?php echo $row->longitude_dms_degrees; ?></td>
                <td class="hide"><?php echo $row->longitude_dms_minutes; ?></td>
                <td class="hide"><?php echo $row->longitude_dms_seconds; ?></td>
                <td class="hide"><?php echo $row->latitude_dms_degrees; ?></td>
                <td class="hide"><?php echo $row->latitude_dms_minutes; ?></td>
                <td class="hide"><?php echo $row->latitude_dms_seconds; ?></td>
                <td class="hide"><?php echo $row->x_long; ?></td>
                <td class="hide"><?php echo $row->y_lat; ?></td>
                <?php if (!empty($row->shp_zip)): ?>
                    <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/demographic_shp/').$row->shp_zip ?>"><?php echo $row->shp_zip ?></a></td>
                    <td class="hide"><?php echo $row->shp_zip; ?></td>
                <?php else: ?>
                    <td class="hide"></td>
                    <td class="hide"><?php echo $row->shp_zip; ?></td>
                <?php endif ?>
                <td>
                    <button type="button" value="<?php echo $row->id_seams_demo;?>" class="btn btnbtn btn-info btn-xs" onclick="editdemos(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removedemoss" data-id="<?php echo $row->id_seams_demo ?>" title="Remove">Remove</button>
                    <input type="hidden" id="cRs<?php echo $row->id_seams_demo;?>" value="<?php echo $row->seams_sex_head ?>" />
                    <input type="hidden" id="long_dms<?php echo $row->id_seams_demo;?>" value="<?php echo $row->longitude_dms_direction ?>" />
                    <input type="hidden" id="lat_dms<?php echo $row->id_seams_demo;?>" value="<?php echo $row->latitude_dms_direction ?>" />
                    <input type="hidden" id="seams_month<?php echo $row->id_seams_demo;?>" value="<?php echo $row->date_occupy_month ?>" />
                    <input type="hidden" id="seams_year<?php echo $row->id_seams_demo;?>" value="<?php echo $row->date_occupy_year ?>" />
                    <input type="hidden" id="seams_chkhf<?php echo $row->id_seams_demo;?>" value="<?php echo $row->chkhomelot ?>" />
                    <input type="hidden" id="seams_tm<?php echo $row->id_seams_demo;?>" value="<?php echo $row->tenured_migrant ?>" />
                    <input type="hidden" id="seams_ip<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ipsiccs ?>" />
                    <input type="hidden" id="seams_shp<?php echo $row->id_seams_demo;?>" value="<?php echo $row->shp_zip ?>" />
                    <input type="hidden" id="seams_chk1<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_recognize ?>" />
                    <input type="hidden" id="seams_chk2<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_inside_pa ?>" />
                    <input type="hidden" id="seams_chk3<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_outside_pa ?>" />
                    <input type="hidden" id="seams_chk4<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_titled_land ?>" />
                    <input type="hidden" id="seams_chk5<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_and ?>" />
                    <input type="hidden" id="seams_chk6<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_andwtl ?>" />
                    <input type="hidden" id="seams_chk7<?php echo $row->id_seams_demo;?>" value="<?php echo $row->ip_andotl ?>" />
                </td>
            </tr>


            ?>

            <?php
            } //if statement
            } //end of 1st foreach
       } //end of 2nd foreach




    }

     public function fetchSeamsIncome(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getseamsIncome($codegens);

        foreach($data as $row){
            ?>
             <tr id="<?php echo $row->id_seams_income; ?>" class="trow">
                <td class="hide"><?php echo $row->income_region; ?></td>
                <td class="hide"><?php echo $row->income_province; ?></td>
                <td class="hide"><?php echo $row->income_municipal; ?></td>
                <td class="hide"><?php echo $row->income_barangay; ?></td>
                <td><?php echo $row->ecotourism_name_head; ?></td>
                <td><?php echo $row->ecotourism_revenue; ?></td>
                <td><?php echo $row->ecotourism_source_location; ?></td>
                <td><?php echo $row->ecotourism_total_revenue; ?></td>
                <td><?php echo $row->ecotourism_total_cost; ?></td>
                <td><?php echo $row->ecotourism_net_revenue; ?></td>
                <td><?php echo $row->saltwater_species_caught; ?></td>
                <td><?php echo $row->saltwater_location; ?></td>
                <td><?php echo $row->saltwater_avarange_fishing; ?></td>
                <td><?php echo $row->saltwater_revenue; ?></td>
                <td><?php echo $row->saltwater_cost; ?></td>
                <td><?php echo $row->saltwater_net_revenue; ?></td>
                <td><?php echo $row->freshwater_species_caught; ?></td>
                <td><?php echo $row->freshwater_location; ?></td>
                <td><?php echo $row->freshwater_avarange_fishing; ?></td>
                <td><?php echo $row->freshwater_revenue; ?></td>
                <td><?php echo $row->freshwater_cost; ?></td>
                <td><?php echo $row->freshwater_net_revenue; ?></td>
                <td><?php echo $row->ptm_species; ?></td>
                <td><?php echo $row->ptm_source_location; ?></td>
                <td><?php echo $row->ptm_revenue; ?></td>
                <td><?php echo $row->ptm_cost; ?></td>
                <td><?php echo $row->ptm_net_revenue; ?></td>
                <td><?php echo $row->agriculture_crops; ?></td>
                <td><?php echo $row->agriculture_source_location; ?></td>
                <td><?php echo $row->agriculture_cultivated_area; ?></td>
                <td><?php echo $row->agriculture_revenue; ?></td>
                <td><?php echo $row->agriculture_cost; ?></td>
                <td><?php echo $row->agriculture_net_revenue; ?></td>
                <td><?php echo $row->livestock_species; ?></td>
                <td><?php echo $row->livestock_source_location; ?></td>
                <td><?php echo $row->livestock_grazing_area; ?></td>
                <td><?php echo $row->livestock_revenue; ?></td>
                <td><?php echo $row->livestock_cost; ?></td>
                <td><?php echo $row->livestock_net_revenue; ?></td>
                <td><?php echo $row->nontimber_species; ?></td>
                <td><?php echo $row->nontimber_source_location; ?></td>
                <td><?php echo $row->nontimber_revenue; ?></td>
                <td><?php echo $row->nontimber_cost; ?></td>
                <td><?php echo $row->nontimber_net_revenue; ?></td>
                <td><?php echo $row->timber_species; ?></td>
                <td><?php echo $row->timber_source_location; ?></td>
                <td><?php echo $row->timber_volume; ?></td>
                <td><?php echo $row->timber_revenue; ?></td>
                <td><?php echo $row->timber_cost; ?></td>
                <td><?php echo $row->timber_net_revenue; ?></td>
                <td><?php echo $row->wildlife_species; ?></td>
                <td><?php echo $row->wildlife_source_location; ?></td>
                <td><?php echo $row->wildlife_revenue; ?></td>
                <td><?php echo $row->wildlife_cost; ?></td>
                <td><?php echo $row->wildlife_net_revenue; ?></td>
                <td><?php echo $row->mining_revenue_source; ?></td>
                <td><?php echo $row->mining_source_location; ?></td>
                <td><?php echo $row->mining_revenue; ?></td>
                <td><?php echo $row->mining_cost; ?></td>
                <td><?php echo $row->mining_net_revenue; ?></td>
                <td><?php echo $row->industry_revenue; ?></td>
                <td><?php echo $row->industry_cost; ?></td>
                <td><?php echo $row->industry_net_revenue; ?></td>
                <td><?php echo $row->services_revenue; ?></td>
                <td><?php echo $row->services_cost; ?></td>
                <td><?php echo $row->services_net_revenue; ?></td>
                <td><?php echo $row->other_revenue_revenue; ?></td>
                <td><?php echo $row->other_revenue_cost; ?></td>
                <td><?php echo $row->other_revenue_net_revenue; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_seams_income;?>" class="btn btn-info btn-edit-visitors" onclick="editseamsincome(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removeseamsincome" data-id="<?php echo $row->id_seams_income ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function update_seamsincome(){

        $gencode = $this->input->post("seams-gencode");
        if($this->session->userdata('email')){
            $ser_id = $this->input->post("seams-id");
            $servicedetails = array(
                                    // 'seams_remarks' => $this->input->post("edit_seams_remarks"),
                                    'ecotourism_name_head' => $this->input->post("edit_ecotourism_name_head"),
                                    'ecotourism_revenue' => $this->input->post("edit_ecotourism_revenue"),
                                    'ecotourism_source_location' => $this->input->post("edit_ecotourism_source_location"),
                                    'ecotourism_total_revenue' => $this->input->post("edit_ecotourism_total_revenue"),
                                    'ecotourism_total_cost' => $this->input->post("edit_ecotourism_total_cost"),
                                    'ecotourism_net_revenue' => $this->input->post("edit_ecotourism_net_revenue"),
                                    'saltwater_species_caught' => $this->input->post("edit_saltwater_species_caught"),
                                    'saltwater_location' => $this->input->post("edit_saltwater_location"),
                                    'saltwater_avarange_fishing' => $this->input->post("edit_saltwater_average_fishing"),
                                    'saltwater_revenue' => $this->input->post("edit_saltwater_revenue"),
                                    'saltwater_cost' => $this->input->post("edit_saltwater_cost"),
                                    'saltwater_net_revenue' => $this->input->post("edit_saltwater_net_revenue"),
                                    'freshwater_species_caught' => $this->input->post("edit_freshwater_species_caught"),
                                    'freshwater_location' => $this->input->post("edit_freshwater_location"),
                                    'freshwater_avarange_fishing' => $this->input->post("edit_freshwater_average_fishing"),
                                    'freshwater_revenue' => $this->input->post("edit_freshwater_revenue"),
                                    'freshwater_cost' => $this->input->post("edit_freshwater_cost"),
                                    'freshwater_net_revenue' => $this->input->post("edit_freshwater_net_revenue"),
                                    'ptm_species' => $this->input->post("edit_ptm_species"),
                                    'ptm_source_location' => $this->input->post("edit_ptm_source_location"),
                                    'ptm_revenue' => $this->input->post("edit_ptm_revenue"),
                                    'ptm_cost' => $this->input->post("edit_ptm_cost"),
                                    'ptm_net_revenue' => $this->input->post("edit_ptm_net_revenue"),
                                    'agriculture_crops' => $this->input->post("edit_agriculture_crops"),
                                    'agriculture_source_location' => $this->input->post("edit_agriculture_source_location"),
                                    'agriculture_cultivated_area' => $this->input->post("edit_agriculture_cultivated_area"),
                                    'agriculture_revenue' => $this->input->post("edit_agriculture_revenue"),
                                    'agriculture_cost' => $this->input->post("edit_agriculture_cost"),
                                    'agriculture_net_revenue' => $this->input->post("edit_agriculture_net_revenue"),
                                    'livestock_species' => $this->input->post("edit_livestock_species"),
                                    'livestock_source_location' => $this->input->post("edit_livestock_source_location"),
                                    'livestock_grazing_area' => $this->input->post("edit_livestock_grazing_area"),
                                    'livestock_revenue' => $this->input->post("edit_livestock_revenue"),
                                    'livestock_cost' => $this->input->post("edit_livestock_cost"),
                                    'livestock_net_revenue' => $this->input->post("edit_livestock_net_revenue"),
                                    'nontimber_species' => $this->input->post("edit_nontimber_species"),
                                    'nontimber_source_location' => $this->input->post("edit_nontimber_source_location"),
                                    'nontimber_revenue' => $this->input->post("edit_nontimber_revenue"),
                                    'nontimber_cost' => $this->input->post("edit_nontimber_cost"),
                                    'nontimber_net_revenue' => $this->input->post("edit_nontimber_net_revenue"),
                                    'timber_species' => $this->input->post("edit_timber_species"),
                                    'timber_source_location' => $this->input->post("edit_timber_source_location"),
                                    'timber_volume' => $this->input->post("edit_timber_volume"),
                                    'timber_revenue' => $this->input->post("edit_timber_revenue"),
                                    'timber_cost' => $this->input->post("edit_timber_cost"),
                                    'timber_net_revenue' => $this->input->post("edit_timber_net_revenue"),
                                    'wildlife_species' => $this->input->post("edit_wildlife_species"),
                                    'wildlife_source_location' => $this->input->post("edit_wildlife_source_location"),
                                    'wildlife_revenue' => $this->input->post("edit_wildlife_revenue"),
                                    'wildlife_cost' => $this->input->post("edit_wildlife_cost"),
                                    'wildlife_net_revenue' => $this->input->post("edit_wildlife_net_revenue"),
                                    'mining_revenue_source' => $this->input->post("edit_mining_revenue_source"),
                                    'mining_source_location' => $this->input->post("edit_mining_source_location"),
                                    'mining_revenue' => $this->input->post("edit_mining_revenue"),
                                    'mining_cost' => $this->input->post("edit_mining_cost"),
                                    'mining_net_revenue' => $this->input->post("edit_mining_net_revenue"),
                                    'industry_revenue' => $this->input->post("edit_industry_revenue"),
                                    'industry_cost' => $this->input->post("edit_industry_cost"),
                                    'industry_net_revenue' => $this->input->post("edit_industry_net_revenue"),
                                    'services_revenue' => $this->input->post("edit_services_revenue"),
                                    'services_cost' => $this->input->post("edit_services_cost"),
                                    'services_net_revenue' => $this->input->post("edit_services_net_revenue"),
                                    'other_revenue_revenue' => $this->input->post("edit_other_revenue_revenue"),
                                    'other_revenue_cost' => $this->input->post("edit_other_revenue_cost"),
                                    'other_revenue_net_revenue' => $this->input->post("edit_other_revenue_net_revenue")
                                    );
            $this->pamain_model->update_seamsincome($servicedetails,$ser_id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function getinicit()
        {
       $crit = $this->input->post('crit');
            if (!empty($crit)) {
            $query = $this->db->select('*')
                ->from('tblinternationalrecognition_sub')
                ->where('id_recog',$crit)
                ->get();

            $option = "<option value=\"\">Select International Criteria</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $inicrit) {
                    $option .= "<option value=\"$inicrit->id_recog_sub\">$inicrit->int_crit $inicrit->crit_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "Selected item not available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getinitdesc()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblinternationalrecognition_sub')
                ->where('id_recog_sub',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->crit_desc;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected item";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getinicitEdit()
        {
       $crit = $this->input->post('crit');
            if (!empty($crit)) {
            $query = $this->db->select('*')
                ->from('tblinternationalrecognition_sub')
                ->where('id_recog',$crit)
                ->get();

            $option = "<option value=\"\">Select International Criteria</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $inicrit) {
                    $option .= "<option value=\"$inicrit->id_recog_sub\">$inicrit->int_crit) $inicrit->crit_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "Selected item not available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getProvs()
        {
       $regid = $this->input->post('regids');
            if (!empty($regid)) {
            $query = $this->db->select('*')
                ->from('tbllocprovince')
                ->where('regionid',$regid)
                ->get();

            $option = "<option value=\"\">Select Province</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_p\">$prov->provinceName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Provinces available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Region selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getexistlanduse()
        {
       $regid = $this->input->post('regids');
            if (!empty($regid)) {
            $query = $this->db->select('*')
                ->from('tblpaexisting_landuse_sub')
                ->where('id_landuses_fk',$regid)
                ->get();

            $option = "<option value=\"\">Select Sub Existing Landuse</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_landuse_sub\">$prov->landuses_sub_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">Not Data</option>";;
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getlegalSub()
        {
        $regid = $this->input->post('regids');
            if ($regid == 3) {
            $query = $this->db->select('*')
                ->from('tblpacategory')
                ->order_by('numbering')
                ->where('id_nips',$regid)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_cat\">$prov->categoryName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
        } elseif ($regid == 1 || $regid == 2) {
             $query = $this->db->select('*')
                ->from('tblpacategory')
                ->order_by('numbering')
                ->where_not_in('id_nips',3)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_cat\">$prov->categoryName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
            // $data['message'] = "Invalid item selected";
            // $data['status'] = null;
        }

       // $regid = $this->input->post('regids');
       //      if (!empty($regid)) {
       //      $query = $this->db->select('*')
       //          ->from('tblpacategory')
       //          // ->where('id_cat',$regid)
       //          ->get();

       //      $option = "<option value=\"\">Select</option>";
       //      if ($query->num_rows() > 0) {
       //          foreach ($query->result() as $prov) {
       //              $option .= "<option value=\"$prov->id_cat\">$prov->categoryName</option>";
       //          }
       //          $data['message'] = $option;
       //          $data['status'] = true;
       //      } else {
       //          $data['message'] = $option = "<option value=\"\">No Data</option>";
       //          $data['status'] = false;
       //      }
       //  } else {
       //      $data['message'] = "Invalid item selected";
       //      $data['status'] = null;
       //  }

        echo json_encode($data);
    }

    public function getpacategory()
        {
       $regid = $this->input->post('regids');
            if ($regid == 3) {
            $query = $this->db->select('*')
                ->from('tblpacategory')
                ->order_by('numbering')
                ->where('id_nips',$regid)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_cat\">$prov->categoryName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
        } elseif ($regid == 1 || $regid == 2) {
             $query = $this->db->select('*')
                ->from('tblpacategory')
                ->order_by('numbering')
                ->where_not_in('id_nips',3)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_cat\">$prov->categoryName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
            // $data['message'] = "Invalid item selected";
            // $data['status'] = null;
        } else{
            $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;

        }

        echo json_encode($data);
    }

    public function getleggalacs()
        {
       $regid = $this->input->post('regids');
            if ($regid == 3) {
            $query = $this->db->select('*')
                ->from('tbllegislation')
                // ->order_by('numbering')
                // ->where('id_nips',$regid)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_legis\">$prov->LegisDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
        } elseif ($regid == 1) {
             $query = $this->db->select('*')
                ->from('tbllegislation')
                ->where('id_nips',1)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_legis\">$prov->LegisDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
            // $data['message'] = "Invalid item selected";
            // $data['status'] = null;
        // }

    } elseif ($regid == 2) {
             $query = $this->db->select('*')
                ->from('tbllegislation')
                ->where('id_nips',2)
                ->get();

            $option = "<option value=\"\">Select</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_legis\">$prov->LegisDesc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;
            }
            // $data['message'] = "Invalid item selected";
            // $data['status'] = null;
        } else{
            $data['message'] = $option = "<option value=\"\">No Data</option>";
                $data['status'] = false;

        }

        echo json_encode($data);
    }

    public function getcavesubclass()
        {
       $caveclass = $this->input->post('caveclass');
            if (!empty($caveclass)) {
            $query = $this->db->select('*')
                ->from('tblcaveclassificationsub')
                ->where('id_cave_class',$caveclass)
                ->get();

            $option = "<option value=\"\">Select sub classification</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $sclass) {
                    $option .= "<option value=\"$sclass->id_sub_class\">$sclass->alpha_arrange) $sclass->sub_class_desc</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = $option = "<option value=\"\">Not Applicable</option>";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Classification selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getlhproducts()
        {
       $lhtype = $this->input->post('lhtype');
            if (!empty($lhtype)) {
            $query = $this->db->select('*')
                ->from('tblpalivelihood_type')
                ->where('prod_id',$lhtype)
                ->get();

            $option = "<option value=\"\">Select sub category</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $sclass) {
                    $option .= "<option value=\"$sclass->id_lh_type\">$sclass->lh_type</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No sub products available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid products selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMunicipals()
        {
       $regid = $this->input->post('regids');
       $provid = $this->input->post('provids');

            if (!empty($provid)) {
            $querys = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provid)
                ->get();

            $options = "<option value=\"\">Select City/Municipality</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $municipals) {
                    $options .= "<option value=\"$municipals->id_m\">$municipals->municipalName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Municipalities available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Province";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getWaterClassSub()
        {
       $ids = $this->input->post('ids');

            if (!empty($ids)) {
            $querys = $this->db->select('*')
                ->from('tblhydrology_waterclass_sub')
                ->where('id_waterClassB',$ids)
                ->get();

            $options = "<option value=\"\" selected='selected'>Select Class</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $wc) {
                    $options .= "<option value=\"$wc->id_waterClassSub\">$wc->waterClass ) $wc->waterDesc</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Class available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Class selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMonthbyquater()
        {
       $ids = $this->input->post('qtrid');

            if (!empty($ids)) {
            $querys = $this->db->select('*')
                ->from('tbldatemonth')
                ->where('QtrCode',$ids)
                ->get();

            $options = "<option value=\"\">Select Month</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $wc) {
                    $options .= "<option value=\"$wc->id_month\">$wc->month</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Month available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Month selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMonthbyquatersss()
    {
        $id = $this->input->post('qtrid');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tbldatemonth')
                ->where('QtrCode',$id)
                ->get();
            $option = "<option value=\"\">Select Month</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_month\">$apt->month</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No item available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getBarangays()
        {
       $munid = $this->input->post('munids');

            if (!empty($munid)) {
            $querys = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$munid)
                ->order_by('barangayName','ASC')
                ->get();

            $options = "<option value=\"\">Select Barangay</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $barangay) {
                    $options .= "<option value=\"$barangay->id_b\">$barangay->barangayName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangays available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipality";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getsexhousehold()
        {
       $hh_id = $this->input->post('hh_id');

            if (!empty($hh_id)) {
            $querys = $this->db->select('*')
                ->from('tblseamsdemographic')
                ->where('id_seams_demo',$hh_id)
                ->get();

            $options = "";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $barangay) {
                    $options .= "<option value=\"$barangay->id_b\">$barangay->barangayName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangays available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipality";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    // =================================================================== //

    public function getProvss()
        {
       $regid = $this->input->post('editregids');
            if (!empty($regid)) {
            $query = $this->db->select('*')
                ->from('tbllocprovince')
                ->where('regionid',$regid)
                ->get();

            $option = "<option value=\"\">Select Province</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $prov) {
                    $option .= "<option value=\"$prov->id_p\">$prov->provinceName</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No Provinces available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Region selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getMunicipalss()
        {
       $regid = $this->input->post('editregids');
       $provid = $this->input->post('editprovids');

            if (!empty($provid)) {
            $querys = $this->db->select('*')
                ->from('tbllocmunicipality')
                ->where('provinceid',$provid)
                ->get();

            $options = "<option value=\"\">Select/City</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $municipals) {
                    $options .= "<option value=\"$municipals->id_m\">$municipals->municipalName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Municipalities available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Province";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function getBarangayss()
        {
       $munid = $this->input->post('editmunids');

            if (!empty($munid)) {
            $querys = $this->db->select('*')
                ->from('tbllocbarangay')
                ->where('municipalid',$munid)
                ->order_by('barangayName','ASC')
                ->get();

            $options = "<option value=\"\">Select Barangay</option>";
            if ($querys->num_rows() > 0) {
                foreach ($querys->result() as $barangay) {
                    $options .= "<option value=\"$barangay->id_b\">$barangay->barangayName</option>";
                }
                $data['message'] = $options;
                $data['status'] = true;
            } else {
                $data['message'] = "No Barangays available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipality";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

     public function fetchDevelopment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAlldev($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_devfees; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td><?php echo $row->dev_month; ?></td>
                <td><?php echo $row->dev_year; ?></td>
                <td><?php echo $row->devfee_amount; ?></td>
                <td><?php echo $row->dev_remarks; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_devfees;?>" class="btn btn-info btn-edit-reference " onclick="edit_dev(this)">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removedev" data-id="<?php echo $row->id_devfees ?>" title="Remove">Remove</button></td>

            </tr>

            <?php
        }
    }

    public function deleteDev($id = null)
    {
            $sql1 = $this->db->where('id_devfees',$id)
                                            ->get('tblpaipafdevfee')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpaipafdevfee WHERE id_devfees = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_dev(){
        $gencode = $this->input->post("dev-gencode");
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("dev-id");
            $ipafdetails = array('devfee_amount' => $this->input->post("edit-developments"),
                                'dev_remarks' => $this->input->post("edit-dev_remarks"),
                                );
            $this->pamain_model->update_dev($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchtenuresapa(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallsapa($codegens);
        foreach($data as $row){
            $codes = $row->sapa_generatedcode;
            $monitoringreps = $this->pamain_model->getallmonitoring($codes);
            $countmonitoring = $this->pamain_model->getallmonitoringcount($codes);
            ?>
            <tr id="<?php echo $row->id_sapa; ?>" class="trow">
                <td><?php echo $row->sapa_no."<br>".$row->tenure_status_desc; ?></td>
                <td><?php echo $row->sapa_name_proponent; ?></td>
                <td><?php echo $row->sapa_devtlist.(!empty($row->sapa_development_others)?"(".$row->sapa_development_others.")":" "); ?></td>
                <td><?php echo $row->sapa_duration_from; ?></td>
                <td><?php echo $row->sapa_duration_to; ?></td>
                <td><?php echo $row->sapa_project_location; ?></td>
                <td><?php echo $row->sapa_area; ?></td>
                <td>
                    <!-- <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_docs_sapa/').$row->sapa_scanned_file ?>"><?php echo $row->sapa_scanned_file ?></a> -->
                    <?php echo "Approved documents : ".(!empty($row->sapa_scanned_file)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "SAPA Rehabilitation Plan : ".(!empty($row->sapa_mgm_plan)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "CDMP : ".(!empty($row->sapa_cdmp_file)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "PAMB Resolution : ".(!empty($row->sapa_pamb_reso)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "Shapefile : ".(!empty($row->sapa_shpfile)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "Monitoring Report : ".$countmonitoring; ?>


                </td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->sapa_no; ?></td>
                <td class="hide"><?php echo $row->sapa_name_proponent; ?></td>
                <td class="hide"><?php echo $row->sapa_nature_development; ?></td>
                <td class="hide"><?php echo $row->sapa_duration_from; ?></td>
                <td class="hide"><?php echo $row->sapa_duration_to; ?></td>
                <td class="hide"><?php echo $row->sapa_project_location; ?></td>
                <td class="hide"><?php echo number_format($row->sapa_area,3) ?></td>
                <td class="hide"><?php echo number_format($row->sapa_project_cost,2) ?></td>
                <td class="hide"><?php echo $row->sapa_remarks; ?></td>
                <td class="hide"><?php echo $row->sapa_status; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_docs_sapa/').$row->sapa_scanned_file ?></td>
                <td class="hide"><?php echo $row->sapa_scanned_file; ?></td>
                <td class="hide"><?php echo $row->sapa_development_others; ?></td>
                <td class="hide"><?php echo $row->sapa_generatedcode; ?></td>
                <td class="hide"><?php echo number_format($row->sapa_rehabbond_cost,2) ?></td>
                <td class="hide"><?php echo $row->sapa_mgm_plan; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_sapa_mgmtplan/').$row->sapa_mgm_plan ?></td>
                <td class="hide"><?php echo $row->sapa_cdmp_file; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_sapa_cdmp/').$row->sapa_cdmp_file ?></td>
                <td class="hide"><?php echo $row->sapa_pamb_reso; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_sapa_pambreso/').$row->sapa_pamb_reso ?></td>
                <td class="hide"><?php echo $row->sapa_monitoring_report; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_sapa_monitoringreport/').$row->sapa_monitoring_report ?></td>
                <td class="hidden">
                    <?php $rctr=0;foreach($monitoringreps as $ca):$rctr+=1;?>
                    <div id="bca<?php echo $ca->id_sapamonitoring ?>" class="showdata">
                        <fieldset>
                            <div class="col-xs-12">
                                <b>Monitoring Report</b>
                                <p><?php echo $ca->monitoring_details; ?></p>
                            </div>
                            <div class="col-xs-12">
                                <?php echo '<label>File Upload : </label><a href="'.base_url().'bmb_assets2/upload/tenure_sapa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?>
                            </div>
                            <button type="button" class="btn btn-danger btn-xs removesapamonitoringreport" id="<?php echo $ca->id_sapamonitoring  ?>" data-id="<?php echo $ca->id_sapamonitoring ?>">Remove</button>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><?php echo $row->sapa_pamb_clearance; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_sapa_pamb_clearance/').$row->sapa_pamb_clearance ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_sapa_shpfile/').$row->sapa_shpfile ?>"><?php echo $row->sapa_shpfile ?></a></td>
                <td class="hide"><?php echo $row->sapa_shpfile; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_sapa;?>" class="btn btn-info btn-xs " onclick="edit_sapa(this)">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removetenuresapa" data-id="<?php echo $row->id_sapa ?>" title="Remove">Remove</button>
                    <input class="hidden" id="cbca<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_duration_from ?>" />
                    <input class="hidden" id="cbcb<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_duration_to ?>" />
                    <input class="hidden" id="cbcc<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_status ?>" />
                    <input class="hidden" id="sapa_devts<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_nature_development ?>" />
                    <input class="hidden" id="sapa_month<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_date_month ?>" />
                    <input class="hidden" id="sapa_year<?php echo $row->id_sapa;?>" value="<?php echo $row->sapa_date_year ?>" />
                </td>


            </tr>

            <?php
        }
    }

    public function refreshsapamonitoringreport()
    {
        $codes = $this->input->post('codegens');
        $monitoringreps = $this->pamain_model->getallmonitoring($codes);
        foreach($monitoringreps as $ca):?>
            <fieldset>
                <div class="col-xs-12">
                    <b>Monitoring Report</b>
                    <p><?php echo $ca->monitoring_details; ?></p>
                </div>
                <div class="col-xs-12">
                    <?php echo '<label>File Upload : </label><a href="'.base_url().'bmb_assets2/upload/tenure_sapa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?>
                </div>
                <button type="button" class="btn btn-danger btn-xs removesapamonitoringreport" id="<?php echo $ca->id_sapamonitoring  ?>" data-id="<?php echo $ca->id_sapamonitoring ?>">Remove</button>
            </fieldset>
        <?php endforeach;
    }



    public function deletesapatenure($id = null)
    {
        $sql1 = $this->db->where('id_sapa',$id)
                                        ->get('tblpamaintenuresapa')
                                        ->row();

        if ($sql1->sapa_scanned_file == "" || empty($sql1->sapa_scanned_file)) {

        }elseif (!empty($sql1->sapa_scanned_file)) {
            unlink('bmb_assets2/upload/tenure_docs_sapa/'.$sql1->sapa_scanned_file);
        }

        if ($sql1->sapa_mgm_plan == "" || empty($sql1->sapa_mgm_plan)) {

        }elseif (!empty($sql1->sapa_mgm_plan)) {
            unlink('bmb_assets2/upload/tenure_sapa_mgmtplan/'.$sql1->sapa_mgm_plan);
        }

        if ($sql1->sapa_cdmp_file == "" || empty($sql1->sapa_cdmp_file)) {

        }elseif (!empty($sql1->sapa_cdmp_file)) {
            unlink('bmb_assets2/upload/tenure_sapa_cdmp/'.$sql1->sapa_cdmp_file);
        }

        if ($sql1->sapa_pamb_reso == "" || empty($sql1->sapa_pamb_reso)) {

        }elseif (!empty($sql1->sapa_pamb_reso)) {
            unlink('bmb_assets2/upload/tenure_sapa_pambreso/'.$sql1->sapa_pamb_reso);
        }

        $sql = "DELETE FROM tblpamaintenuresapa WHERE id_sapa = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchtenuremoa(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallmoa($codegens);
        foreach($data as $row){
            $codes = $row->moa_generatedcode;
            $monitoringreps = $this->pamain_model->getallmoamonitoring($codes);
            $monitoringrepsCount = $this->pamain_model->getcountallmoamonitoring($codes);
            ?>
            <tr id="<?php echo $row->id_moa; ?>" class="trow">
                <td><?php echo $row->moa_devt."<br>".$row->moa_holder; ?></td>
                <td><?php echo $row->moa_second_party; ?></td>
                <td><?php echo $row->moa_from_month." ".$row->moa_from_day.", ".$row->moa_from_year; ?></td>
                <td><?php echo $row->moa_to_month." ".$row->moa_to_day.", ".$row->moa_to_year; ?></td>
                <td><?php echo $row->moa_location; ?></td>
                <td><?php echo $row->moa_area; ?></td>
                <td>
                    <!-- <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_docs_moa/').$row->moa_doc_file ?>"><?php echo $row->moa_doc_file ?></a> -->
                    <?php echo "Approved documents : ".(!empty($row->moa_doc_file)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "Project Plan : ".(!empty($row->moa_mgm_plan)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "PAMB Approved : ".(!empty($row->moa_pamb_approve)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "PAMB Resolution : ".(!empty($row->moa_pamb_reso)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "Shapefile : ".(!empty($row->moa_shpfile)?"&#10003;":"&#9747")."<br>"; ?>
                    <?php echo "Monitoring Report : ".$monitoringrepsCount; ?>
                </td>
                <td><?php echo $row->tenure_status_desc; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->moa_holder; ?></td>
                <td class="hide"><?php echo $row->moa_second_party; ?></td>
                <td class="hide"><?php echo $row->moa_devt; ?></td>
                <td class="hide"><?php echo $row->moa_from_month; ?></td>
                <td class="hide"><?php echo $row->moa_from_day; ?></td>
                <td class="hide"><?php echo $row->moa_from_year; ?></td>
                <td class="hide"><?php echo $row->moa_to_month; ?></td>
                <td class="hide"><?php echo $row->moa_to_day; ?></td>
                <td class="hide"><?php echo $row->moa_to_year; ?></td>
                <td class="hide"><?php echo $row->moa_location; ?></td>
                <td class="hide"><?php echo number_format($row->moa_area,3); ?></td>
                <td class="hide"><?php echo number_format($row->moa_cost,2); ?></td>
                <td class="hide"><?php echo $row->moa_remarks; ?></td>
                <td class="hide"><?php echo $row->moa_status; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_docs_moa/').$row->moa_doc_file ?></td>
                <td class="hide"><?php echo $row->moa_doc_file; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_moa_proj/').$row->moa_mgm_plan ?></td>
                <td class="hide"><?php echo $row->moa_mgm_plan; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_moa_pambapprove/').$row->moa_pamb_approve ?></td>
                <td class="hide"><?php echo $row->moa_pamb_approve; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_moa_pambreso/').$row->moa_pamb_reso ?></td>
                <td class="hide"><?php echo $row->moa_pamb_reso; ?></td>
                <td class="hide"><?php echo $row->moa_generatedcode; ?></td>
                <td class="hide">
                    <?php $rctr=0;foreach($monitoringreps as $ca):$rctr+=1;?>
                    <div id="bca<?php echo $ca->id_moa_monitoring ?>" class="showdata">
                        <fieldset>
                            <div class="col-xs-12">
                                <?php echo '<label>Monitoring Report details : </label>'.$ca->monitoring_details; ?>
                            </div>
                            <div class="col-xs-12">
                                <?php echo '<label>File Upload : </label>'.'<a href="'.base_url().'bmb_assets2/upload/tenure_moa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?>
                            </div>
                            <button type="button" class="btn btn-danger btn-xs removemoamonitoringreport" id="<?php echo $ca->id_moa_monitoring  ?>" data-id="<?php echo $ca->id_moa_monitoring  ?>">Remove</button>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_moa_pamb_clearance/').$row->moa_pamb_clearance ?></td>
                <td class="hide"><?php echo $row->moa_pamb_clearance; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_moa_shpfile/').$row->moa_shpfile ?>"><?php echo $row->moa_shpfile ?></a></td>
                <td class="hide"><?php echo $row->moa_shpfile; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_moa;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_moa(this)">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removetenuremoa" data-id="<?php echo $row->id_moa ?>" title="Remove">Remove</button>
                </td>
            </tr>

            <?php
        }
    }

    public function refreshmoamonitoringreport()
    {
        $codes = $this->input->post('codegens');
        $monitoringreps = $this->pamain_model->getallmoamonitoring($codes);
        foreach($monitoringreps as $ca):?>
            <fieldset>
                <div class="col-xs-12">
                    <b>Monitoring Report</b>
                    <p><?php echo $ca->monitoring_details; ?></p>
                </div>
                <div class="col-xs-12">
                    <?php echo '<label>File Upload : </label><a href="'.base_url().'bmb_assets2/upload/tenure_moa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?>
                </div>
                <button type="button" class="btn btn-danger btn-xs removemoamonitoringreport" id="<?php echo $ca->id_moa_monitoring  ?>" data-id="<?php echo $ca->id_moa_monitoring ?>">Remove</button>
            </fieldset>
        <?php endforeach;
    }

    public function deletemoatenure($id = null)
    {
        $sql1 = $this->db->where('id_moa',$id)
                                        ->get('tblpamaintenuremoa')
                                        ->row();

        if ($sql1->moa_doc_file == "" || empty($sql1->moa_doc_file)) {

        }elseif (!empty($sql1->moa_doc_file)) {
            unlink('bmb_assets2/upload/tenure_docs_moa/'.$sql1->moa_doc_file);
        }

        if ($sql1->moa_mgm_plan == "" || empty($sql1->moa_mgm_plan)) {

        }elseif (!empty($sql1->moa_mgm_plan)) {
            unlink('bmb_assets2/upload/tenure_moa_proj/'.$sql1->moa_mgm_plan);
        }

        if ($sql1->moa_pamb_approve == "" || empty($sql1->moa_pamb_approve)) {

        }elseif (!empty($sql1->moa_pamb_approve)) {
            unlink('bmb_assets2/upload/tenure_moa_pambapprove/'.$sql1->moa_pamb_approve);
        }

        if ($sql1->moa_pamb_reso == "" || empty($sql1->moa_pamb_reso)) {

        }elseif (!empty($sql1->moa_pamb_reso)) {
            unlink('bmb_assets2/upload/tenure_moa_pambreso/'.$sql1->moa_pamb_reso);
        }

        $sql = "DELETE FROM tblpamaintenuremoa WHERE id_moa = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchtenurepacbrma(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallpacbrma($codegens);
        foreach($data as $row){
            $id = $row->id_pacbrma;
            $countcrmp = $this->pamain_model->countRowCRMP($codegens,$id);
            ?>
            <tr id="<?php echo $row->id_pacbrma ; ?>" class="trow">
                <td><?php echo $row->pacbrma_no; ?></td>
                <td><?php echo $row->pacbrma_holder."<br>".$row->pacbrma_po; ?></td>
                <td><?php echo $row->pacbrma_start; ?></td>
                <td><?php echo $row->pacbrma_end; ?></td>
                <td><?php echo $row->pacbrma_location; ?></td>
                <td><?php echo number_format($row->pacbrma_area,3); ?></td>
                <td>
                    <label>Approved document : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_docs_pacbrma/').$row->pacbrma_doc_file ?>"><?php echo $row->pacbrma_doc_file ?></a><br><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_pacbrma_shpfile/').$row->pacbrma_shpfile ?>"><?php echo $row->pacbrma_shpfile ?></a>
                </td>
                <td><?php echo $row->pacbrma_male; ?></td>
                <td><?php echo $row->pacbrma_female; ?></td>
                <td><?php echo $row->pacbrma_total; ?></td>
                <td>
                    <i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_docs_pcbrma_member/').$row->pacbrma_member_file ?>"><?php echo $row->pacbrma_member_file ?></a>
                </td>
                <td><?php echo $row->tenure_status_desc ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->pacbrma_no; ?></td>
                <td class="hide"><?php echo $row->pacbrma_holder; ?></td>
                <td class="hide"><?php echo $row->pacbrma_po; ?></td>
                <td class="hide"><?php echo $row->pacbrma_devt; ?></td>
                <td class="hide"><?php echo $row->pacbrma_location; ?></td>
                <td class="hide"><?php echo number_format($row->pacbrma_area,3); ?></td>
                <td class="hide"><?php echo $row->pacbrma_cost; ?></td>
                <td class="hide"><?php echo $row->pacbrma_start; ?></td>
                <td class="hide"><?php echo $row->pacbrma_end; ?></td>
                <td class="hide"><?php echo $row->pacbrma_male; ?></td>
                <td class="hide"><?php echo $row->pacbrma_female; ?></td>
                <td class="hide"><?php echo $row->pacbrma_total; ?></td>
                <td class="hide"><?php echo $row->pacbrma_remarks; ?></td>
                <td class="hide"><?php echo $row->pacbrma_status; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_docs_pacbrma/').$row->pacbrma_doc_file ?></td>
                <td class="hide"><?php echo $row->pacbrma_doc_file; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_docs_pcbrma_member/').$row->pacbrma_member_file ?></td>
                <td class="hide"><?php echo $row->pacbrma_member_file; ?></td>
                <td class="hide"><?php echo $row->id_pacbrma; ?></td>
                <td><?php echo "<center>Number of activity : ".$countcrmp."</center>" ?><button type="button" value="<?php echo $row->id_pacbrma ;?>"  class="btn btn-success btn-add-sapa btn-xs" onclick="add_crmp(this)" title="Community Resource Management Plan (CRMP)">
                    Add/View Activity</button>
                </td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/tenure_pacbrma_pamb_clearance/').$row->pacbrma_pamb_clearance ?></td>
                <td class="hide"><?php echo $row->pacbrma_pamb_clearance; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/tenure_pacbrma_shpfile/').$row->pacbrma_shpfile ?>"><?php echo $row->pacbrma_shpfile ?></a></td>
                <td class="hide"><?php echo $row->pacbrma_shpfile; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_pacbrma ;?>" class="btn btn-info btn-xs" onclick="edit_pcbrma(this)">Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removetenurepacbrma" data-id="<?php echo $row->id_pacbrma ?>" title="Remove">Remove</button>
                </td>
                <input id="crmp_id<?php echo $row->id_pacbrma;?>" value="<?php echo $row->id_pacbrma ?>" />
                <input id="crmp_code<?php echo $row->id_pacbrma;?>" value="<?php echo $row->generatedcode ?>" />
            </tr>

            <?php
        }
    }

    public function fetchcrmpactivity(){
        $codegens = $this->input->post('codegens');
        $ids = $this->input->post('ids');
        $data = $this->pamain_model->getallcrmpactivity($ids);
            foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_crmp ; ?>" class="trow">
                    <td class="hide"><?php echo $row->id_pacbrma; ?></td>
                    <td class="hide"><?php echo $row->generatedcode; ?></td>
                    <td><?php echo $row->crmp_activity; ?></td>
                    <td class="hide"><?php echo number_format($row->crmp_area_devt,3) ?></td>
                    <td class="hide"><?php echo number_format($row->crmp_cost,2) ?></td>
                    <td class="hide"><?php echo $row->crmp_x_coordinates ?></td>
                    <td class="hide"><?php echo $row->crmp_y_coordinates ?></td>
                    <td ><?php echo $row->crmp_outputs ?></td>
                    <td><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/crmp_file/').$row->crmp_file ?>"><?php echo $row->crmp_file ?></a></td>
                    <td class="hide"><?php echo $row->crmp_file; ?></td>
                    <td class="hide"><?php echo base_url('bmb_assets2/upload/crmp_file/').$row->crmp_file ?></td>


                    <td>
                        <button type="button" value="<?php echo $row->id_crmp ;?>" class="btn btn-info btn-xs " onclick="edit_crmp_activity(this)">
                        View/Edit</button>
                        <button type="button" class="btn btn-danger btn-flat btn-xs removetenurecrmpactivity" data-id="<?php echo $row->id_crmp  ?>" title="Remove">Remove</button>
                    </td>
                </tr>
            <?php
            }
        }

    public function deletepacbrmatenure($id = null)
    {
            $this->db->delete('tblpamaintenurepacbrma', array('id_pacbrma' => $id));
            $this->db->delete('tblpamaintenurepacbrma_crmp', array('id_pacbrma' => $id));

            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';


            $sql1 = $this->pamain_model->removepacbrma($id);
            foreach ($sql1 as $sql) {
                unlink('bmb_assets2/upload/tenure_docs_pacbrma/'.$sql->pacbrma_doc_file);
                unlink('bmb_assets2/upload/tenure_docs_pcbrma_member/'.$sql->pacbrma_member_file);
            }

            echo json_encode($output);
    }

    public function deletecrmpactivity($id = null)
    {

        $sql = "DELETE FROM tblpamaintenurepacbrma_crmp WHERE id_crmp = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_crmpactivity(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');


        if($this->session->userdata('email')){
            $id = $this->input->post("crmpactivity-id");
            $details = array('crmp_activity' => $this->input->post("edit-crmp_activity"),
                             'crmp_area_devt' => str_replace(',','',$this->input->post("edit-crmp_areadevt")),
                             'crmp_x_coordinates' => $this->input->post("edit-crmp_x_coor"),
                             'crmp_y_coordinates' => $this->input->post("edit-crmp_y_coor"),
                             'crmp_cost' => str_replace(',','',$this->input->post("edit-crmp_cost")),
                             'crmp_outputs' => $this->input->post("edit-crmp_output"),
                             'crmp_file' => (empty($this->input->post('edit-newcrmpfileupload'))?$this->input->post('edit-old_crmpfile'):$this->input->post('edit-newcrmpfileupload')));
            $this->pamain_model->update_crmpactivity($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_programctivity(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        if($this->session->userdata('email')){
            $id = $this->input->post("progactivitye-id");
            $details = array('program_activity' => $this->input->post("edit-programactivity"),
                             'program_activity_devt' => str_replace(',','',$this->input->post("edit-programactivitydevt")),
                             'program_activity_cost' => str_replace(',','',$this->input->post("edit-programactivitycost")),
                             'program_activity_month' => $this->input->post("edit-programactivitymonth"),
                             'program_activity_year' => $this->input->post("edit-programactivityyear"),
                             'program_activity_output' => $this->input->post("edit-programactivityoutput"),
                            );
            $this->pamain_model->update_programactivity($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchPenalty(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllpenalty($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_penalty; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td><?php echo $row->penalty_month; ?></td>
                <td><?php echo $row->penalty_year; ?></td>
                <td><?php echo $row->penalty_amount; ?></td>
                <td><?php echo $row->penalty_remarks; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_penalty;?>" class="btn btn-info btn-edit-reference" onclick="edit_penalty(this)">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removepenalty" data-id="<?php echo $row->id_penalty ?>" title="Remove">Remove</button></td>

            </tr>

            <?php
        }
    }

    public function fetchSeamsFishSalt(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsFishSalt($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishSaltGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fish): ?>
                <tr id="<?php echo $row->id_fishery_salt; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishery_salt.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of fishing method : ".$row->fishing_type.
                                                            "<br>Species : ".$row->species.
                                                            "<br>Unit of measure : ".$row->unit_measure.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year.
                                                            "<br>Volume consumed per year : ".$row->volume_consume_year.
                                                            "<br>Price per unit : ".$row->price_unit.
                                                            "<br>Value : ".$row->fishsalt_value.
                                                            "<br>Type of gears used per fishing method : ".$row->type_gear.
                                                            "<br>Total number of fishing hours per year : ".$row->no_fishing_year.
                                                            "<br>Number of season or period in a year : ".$row->no_season_year.
                                                            "<br>Season or period of fishing (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_fishing.
                                                            "<br>No of people & household members : ".$row->no_member_activity  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_fish ?></td>
                    <td class="hide"><?php echo $row->fishing_type ?></td>
                    <td class="hide"><?php echo $row->species ?></td>
                    <td class="hide"><?php echo $row->unit_measure ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year ?></td>
                    <td class="hide"><?php echo $row->volume_consume_year ?></td>
                    <td class="hide"><?php echo $row->price_unit ?></td>
                    <td class="hide"><?php echo $row->fishsalt_value ?></td>
                    <td class="hide"><?php echo $row->type_gear ?></td>
                    <td class="hide"><?php echo $row->no_fishing_year ?></td>
                    <td class="hide"><?php echo $row->no_season_year ?></td>
                    <td class="hide"><?php echo $row->season_of_fishing ?></td>
                    <td class="hide"><?php echo $row->location_fishing ?></td>
                    <td class="hide"><?php echo $row->no_member_activity ?></td>
                    <td class="hide"><?php echo $row->marketing_agent ?></td>
                    <td class="hide"><?php echo $row->marketing_location ?></td>
                    <td class="hide"><?php echo $row->type_payment ?></td>
                    <td class="hide"><?php echo $row->fishing_salt_remarks ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_fishery_salt;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsfishsalt(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsFishSalt" data-id="<?php echo $row->id_fishery_salt ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cssd<?php echo $row->id_fishery_salt;?>" value="<?php echo $row->id_demographic_fish ?>" />
                    <input type="" id="csse<?php echo $row->id_fishery_salt;?>" value="<?php echo $row->season_of_fishing ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsFishSalt($id = null)
    {
            $sql1 = $this->db->where('id_fishery_salt',$id)
                                            ->get('tblseams_sourceincome_fishery_salt')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishery_salt WHERE id_fishery_salt = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletePenalty($id = null)
    {
            $sql1 = $this->db->where('id_penalty',$id)
                                            ->get('tblpaipafpenalty')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpaipafpenalty WHERE id_penalty = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteProjReport($id = null)
    {
            $sql1 = $this->db->where('idproject_file',$id)
                                            ->get('tblmainprojects_files')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/project_report/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblmainprojects_files WHERE idproject_file = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteResearchReport($id = null)
    {
            $sql1 = $this->db->where('idresearch_file',$id)
                                            ->get('tblmainresearch_files')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/research_file_report/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblmainresearch_files WHERE idresearch_file = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteResearchPAMBResolutionReport($id = null)
    {
        //     $sql1 = $this->db->where('idresearch_pambreso',$id)
        //                                     ->get('tblmainresearch_pambreso')
        //                                     ->row();
        // if ($sql1->file_nameReso != "nophoto.jpg") {
        //         unlink('bmb_assets2/upload/pdf_file_resolution/'.$sql1->file_nameReso);
        //     }else{

        //     }

        $output = array();
         $sql = "DELETE FROM tblmainresearch_pambreso WHERE idresearch_pambreso = '$id'";
         $sql2 = "DELETE FROM tblpambreso WHERE id_researchPamBFile = '$id'";

        if($this->db->query($sql) && $this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletePAMBTrasmitalEdit($id = null)
    {
            $sql1 = $this->db->where('id_pamb_transmital',$id)
                                            ->get('tblpambreso_transmittal')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pamb_transmittal_file/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblpambreso_transmittal WHERE id_pamb_transmital = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletePAMBMinutes($id = null)
    {
            $sql1 = $this->db->where('id_reso_minutes',$id)
                                            ->get('tblpambreso_minutes')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pamb_reso_minutes_file/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblpambreso_minutes WHERE id_reso_minutes = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteResearchModalPAMBResoAdd($id = null)
    {
            $sql1 = $this->db->where('idresearch_pambreso',$id)
                                            ->get('tblmainresearch_pambreso')
                                            ->row();
        if ($sql1->file_nameReso != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pdf_file_resolution/'.$sql1->file_nameReso);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblmainresearch_pambreso WHERE idresearch_pambreso = '$id'";
         $sql2 = "DELETE FROM tblpambreso WHERE id_researchPamBFile = '$id'";

        if($this->db->query($sql) && $this->db->query($sql2)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteResearchModalPAMBResoEdit($id = null)
    {
            $sql1 = $this->db->where('idresearch_pambreso',$id)
                                            ->get('tblmainresearch_pambreso')
                                            ->row();
        if ($sql1->file_nameReso != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pdf_file_resolution/'.$sql1->file_nameReso);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblmainresearch_pambreso WHERE idresearch_pambreso = '$id'";
         $sql2 = "DELETE FROM tblpambreso WHERE id_researchPamBFile = '$id'";

        if($this->db->query($sql) && $this->db->query($sql2)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_penalty(){
        $gencode = $this->input->post("penalty-gencode");
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("penalty-id");
            $ipafdetails = array('penalty_amount' => $this->input->post("edit-finespenalty"),
                                'penalty_remarks' => $this->input->post("edit-penalty_remarks"),
                                );
            $this->pamain_model->update_penalty($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchincomedate(){
        $codegens = $this->input->post('code');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');
        $day = $this->input->post('idDay');

        $data = $this->pamain_model->getAllincomedate($codegens,$month,$day,$year);

        if (!empty($month) || !empty($year) || !empty($day)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchtrustdate(){
        $codegens = $this->input->post('code');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');
        $day = $this->input->post('idDay');

        $data = $this->pamain_model->getAlltrustdate($codegens,$month,$year,$day);

        if (!empty($month) || !empty($year) || !empty($day)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchsearchbydate(){
        $codegens = $this->input->post('code');
        $year = $this->input->post('yearselect');
        $month = $this->input->post('monthselect');
        $data = $this->pamain_model->searcdateincome($codegens,$month,$year);
        $datagrandtotal = $this->pamain_model->searchGrandtotalIPAF($codegens,$month,$year);
        $searchGrandtotalIpafother = $this->pamain_model->searchGrandtotalIpafother($codegens,$month,$year);
        $searchGrandtotalIpafdisburse = $this->pamain_model->searchGrandtotalIpafdisburse($codegens,$month,$year);
        $searchGrandtotalIpafdevelopment = $this->pamain_model->searchGrandtotalIpafdevelopment($codegens,$month,$year);
        $data1 = $this->pamain_model->getallIpafGrandtotals($codegens,$month,$year);
        $data2 = $this->pamain_model->getallGrandtotalIpafothers($codegens,$month,$year);
        $data3 = $this->pamain_model->getallGrandtotalIpafdisbursementss($codegens,$month,$year);
        $data4 = $this->pamain_model->getallGrandtotalIpafdevelopments($codegens,$month,$year);
            foreach($data as $row):
            $id = $row->id_income;
            $datadisbursement = $this->pamain_model->searchgetallIpafdisbursement($codegens,$month,$year,$id);
            $dataother = $this->pamain_model->searchgetallIpafother($codegens,$month,$year,$id);
            $datas = $this->pamain_model->search_income_other($id,$month,$year);
            $datacontri = $this->pamain_model->getsearch_subcontri($id,$year,$month);
            $numrowscontri = $this->pamain_model->numrows_subcontri($id,$year,$month);
            $datadevelopment = $this->pamain_model->getsearch_devtfee($id,$year,$month);
            $datafines = $this->pamain_model->getsearch_fines($id,$year,$month);
            $datadisburse = $this->pamain_model->getsearch_disbursement($id,$year,$month);
            $contriedit = $this->pamain_model->getsearch_contriedit($id,$year,$month);
            $datadevelopmentedit = $this->pamain_model->getsearch_devfeeedit($id,$year,$month);
            $datafinesedit = $this->pamain_model->getsearch_finesedit($id,$year,$month);
            ?>
            <tr id="<?php echo $row->id_income; ?>" class="trow">
                <td class="hide"><?php echo base_url('bmb_assets2/upload/certificateofreceiptipaf/').$row->certificate_receipt ?></td>
                <td class="hide"><?php echo $row->certificate_receipt; ?></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/ipaf_bank_certificate/').$row->bank_deposit_file ?></td>
                <td class="hide"><?php echo $row->bank_deposit_file; ?></td>
                <td class="hide"><?php echo $row->generatedcode; ?></td>

                <td><?php echo $row->date_month_income; ?></td>
                <td><?php echo $row->date_day_income; ?></td>
                <td><?php echo $row->date_year_income; ?></td>
                <td><?php echo number_format($row->entrancefee,2); ?></td>
                <td><?php echo number_format($row->facilities,2); ?></td>
                <td><?php echo number_format($row->resource,2); ?></td>
                <td><?php echo number_format($row->concession,2); ?></td>
                <?php foreach ($datadevelopment as $row4): ?>
                    <td><?php echo (!empty($row4->dconamount)?$row4->dconamount:0); ?></td>
                <?php endforeach ?>
                <?php foreach ($dataother as $row2): ?>
                    <td><?php echo !empty($row2->try2)?$row2->try2:0  ?>  </td>
                <?php endforeach ?>
                <?php
                    $d1 = $row->Grand_total_income;
                    $d2 = $row2->sumOther;
                    $d3 = $row4->sumdevamount;

                    $a = array($d1, $d2, $d3);
                    $sum_income = array_sum($a);
                ?>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income*0.75,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income*0.25,2); ?></td>
                <td style="color:red; font-weight: 700"><?php echo number_format($sum_income,2); ?></td>
                <?php foreach ($datacontri as $row3): ?>
                    <?php if (!empty($row3)): ?>
                        <td><?php echo (!empty($row3->finance)?$row3->finance:0); ?></td>
                        <td><?php echo $row3->mode; ?></td>
                        <td><?php echo number_format($row3->amounts,2); ?></td>
                    <?php endif ?>
                <?php endforeach ?>
                <?php foreach ($datafines as $row5): ?>
                    <td><?php echo !empty($row5->pconamount)?$row5->pconamount:0; ?></td>
                <?php endforeach ?>
                <td class="hidden">
                    <?php $rctr=0;foreach($datas as $ca):$rctr+=1;?>
                    <?php if ($row->id_income == $ca->id_fromincome): ?>
                    <div id="bca<?php echo $ca->id_incomeOthers?>" class="showdata">
                        <button type="button" class="btn btn-danger removeeditcontriothers" id="<?php echo $ca->id_incomeOthers ?>" data-id="<?php echo $ca->id_incomeOthers ?>" style="position: absolute;right: 25px">
                            Remove
                        </button>
                            <fieldset>
                                <div class="col-xs-12">
                                    <div class="col-xs-4 col-lg-4">Others (specify) : </div>
                                    <div class="col-xs-4 col-lg-4"><?php echo $ca->other_title; ?></div>
                                </div>
                                <div class="col-xs-12">
                                    <div class="col-xs-4 col-lg-4">Amount : </div>
                                    <div class="col-xs-4 col-lg-4"><?php echo $ca->other_amount; ?></div>
                                </div>
                            </fieldset>
                    </div>
                    <?php endif; ?>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php $octr=0;foreach($contriedit as $cb):$octr+=1;
                    if($row->id_income == $cb->id_fromincome):
                    ?>
                    <div id="divcontriedit<?php echo $cb->id_contrisub?>" class="showdata">
                    <input type="hidden" name="caid26<?php echo $octr;?>" value="<?php echo $cb->id_contrisub; ?>"/>
                    <button type="button" class="btn btn-danger removeeditcontri" id="<?php echo $cb->id_contrisub ?>" data-id="<?php echo $cb->id_contrisub ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <?php $financialList['Trust Fund'] =[
                        '0'  => 'Select',
                        '1' => 'Donation',
                        '2' => 'Grants',
                        '3' => 'Endowment'

                    ];     ?>
                    <?php $modepayment['Mode of Payment'] =[
                        '0'  => 'Select',
                        '1' => 'In-kind',
                        '2' => 'Cash'
                    ];
                        ?>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Trust Fund : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->finance_desc; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Mode of Payment : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->description; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Estimated Monitary Value : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cb->contri_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php else: ?>

                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datadevelopmentedit as $cc):$pctr+=1;
                    if($row->id_income == $cc->id_fromincome):
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_devfees?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditdevelopment" id="<?php echo $cc->id_devfees ?>" data-id="<?php echo $cc->id_devfees ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Devt Fee/ Royalty : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->devfee_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $cc->dev_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($datafinesedit as $dd):$pctr+=1;
                    if($row->id_income == $dd->id_fromincome):
                    ?>
                    <div id="divpenaltyedit<?php echo $dd->id_penalty?>" class="showdata">
                    <button type="button" class="btn btn-danger removeeditpenalty" id="<?php echo $dd->id_penalty ?>" data-id="<?php echo $dd->id_penalty ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <fieldset>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Fines and Penalties : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_amount; ?></div>
                        </div>
                        <div class="col-xs-12">
                            <div class="col-xs-4 col-lg-4">Remarks : </div>
                            <div class="col-xs-4 col-lg-4"><?php echo $dd->penalty_remarks; ?></div>
                        </div>
                    </fieldset>
                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $rctrs=0;foreach($datadisburseedit as $rowdis):$rctrs+=1;?>
                    <?php if ($row->id_income == $rowdis->id_fromincome): ?>
                    <div id="bca1<?php echo $rowdis->id_ipafdisburse ?>" class="showdata">
                    <input type="hidden" name="caaa<?php echo $rctrs;?>" value="<?php echo $rowdis->id_ipafdisburse; ?>"/>
                    <button type="button" class="btn btn-danger removeeditdisbursement" id="<?php echo $rowdis->id_ipafdisburse ?>" data-id="<?php echo $rowdis->id_ipafdisburse ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <div class="col-xs-12">
                                <div class="col-xs-4 col-lg-4">Amount : </div>
                                <div class="col-xs-4 col-lg-4"><?php echo $rowdis->disbursement_amount; ?></div>
                            </div>
                            <div class="col-xs-12">
                                <div class="col-xs-4 col-lg-4">Remarks : </div>
                                <div class="col-xs-4 col-lg-4"><?php echo $rowdis->disbursement_remarks; ?></div>
                            </div>
                        </fieldset>
                    </div>
                    <?php endif; ?>
                    <?php endforeach;?>
                </td>
                 <td>
                    <button type="button" value="<?php echo $row->id_income;?>" class="btn btn-info btn-xs btn-edit-income" onclick="editincome(this);">Edit</button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeipaf" data-id="<?php echo $row->id_income ?>" title="Remove">Remove</button>
                    <!-- <input type="" id="c1<?php echo $row->id_ipaf;?>" value="<?php echo $row->id_ipaf ?>" /> -->
                </td>
            </tr>
                <?php
                endforeach;
                foreach ($data1 as $gtotal1 ):
                foreach ($data2 as $gtotal2 ):
                    foreach ($data4 as $gtotal3 ):
                ?>
                    <tr style="background-color: #ff8000; color: #fff; font-size: 24px; font-weight: 700;">
                        <?php $Gsum_income = $gtotal1->Grand_totals + $gtotal2->GsumOther + $gtotal3->Gsumdevelopment; ?>
                        <td colspan="9" style="text-align: left">GRAND TOTAL</td>
                        <td colspan="" style="text-align: right"><?php echo number_format($Gsum_income,2); ?></td>
                        <td colspan="11"></td>
                    </tr>
                    <?php
                    endforeach;
                endforeach;
            endforeach;
    }

    public function fetchvisitorsdate(){
        $codegens = $this->input->post('code');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');

        $data = $this->pamain_model->getAllvisitordate($codegens,$month,$year);

        if (!empty($month) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }


    public function fetchfftype(){
        $codegens = $this->input->post('code');
        $type = $this->input->post('idType');

        $data = $this->pamain_model->getAllfftype($codegens,$type);

        if (!empty($type)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchcontridate(){
        $codegens = $this->input->post('code');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');

        $data = $this->pamain_model->getAllcontridate($codegens,$month,$year);

        if (!empty($month) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchdevdate(){
        $codegens = $this->input->post('code');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');

        $data = $this->pamain_model->getAlldevdate($codegens,$month,$year);

        if (!empty($month) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select period covered!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchpenaltydate(){
            $codegens = $this->input->post('code');
            $month = $this->input->post('idMonth');
            $year = $this->input->post('idYear');

            $data = $this->pamain_model->getAllpenaltydate($codegens,$month,$year);

            if (!empty($month) || !empty($year)) {
                if (!empty($data)) {
                   $message = 'Not Empty';
                   $message2 = 'Not Empty';
                }else if (empty($data)) {
                    $message = 'Empty';
                    $message2 = 'Empty';
                }
            } else {
                $message = 'no';
                $message2 = "Select period covered!";
            }

            $output['status'] = $message;
            $output['message'] = $message2;
            echo json_encode($output);
        }

    public function fetchlocations(){
        $codegens = $this->input->post('code');
        $region = $this->input->post('region');
        $province = $this->input->post('province');
        $municipal = $this->input->post('municipal');
        $barangay = $this->input->post('barangay');


        $data = $this->pamain_model->getAlllocationdata($codegens,$region,$province,$municipal,$barangay);

        if (!empty($region) || !empty($province) || !empty($municipal) || !empty($barangay)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Protected Area location!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchbiologicalsearch(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');


        $data = $this->pamain_model->getAllbiologicaldata($search,$codegens);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select species!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function checkDisbursementYear(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('iDyear');


        $data = $this->pamain_model->searchifyearallreadyexist($search,$codegens);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select species!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchbiologicalsearch2(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');


        $data = $this->pamain_model->getAllbiologicaldata($search,$codegens);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select species!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchiccsips(){
        $codegens = $this->input->post('code');
        $idICCIP = $this->input->post('idICCIP');


        $data = $this->pamain_model->getalliccips($codegens,$idICCIP);

        if (!empty($idICCIP)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select ICCs/IPs!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchSpeciesseagrass(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');


        $data = $this->pamain_model->getAllseagrassspeciesdata($codegens,$search);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select ICCs/IPs!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchSpeciescoral(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');


        $data = $this->pamain_model->getAllcoralspeciesdata($codegens,$search);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select ICCs/IPs!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchSpeciesseagrassNew(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');


        $data = $this->pamain_model->getAllseagrassspeciesNew($codegens,$search);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select ICCs/IPs!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchMangroveSpecies(){
        $codegens = $this->input->post('code');
        $search = $this->input->post('search');

        $data = $this->pamain_model->getAllMangroveSpecies($codegens,$search);

        if (!empty($search)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select ICCs/IPs!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    // public function fetchiccsips(){
    //     $codegens = $this->input->post('code');
    //     $idICCIP = $this->input->post('idICCIP');

    //     $data = $this->pamain_model->getAllcontridate($codegens,$idICCIP);

    //     if (!empty($month))) {
    //         if (!empty($data)) {
    //            $message = 'Not Empty';
    //            $message2 = 'Not Empty';
    //         }else if (empty($data)) {
    //             $message = 'Empty';
    //             $message2 = 'Empty';
    //         }
    //     } else {
    //         $message = 'no';
    //         $message2 = "Select ICCs/IPs!";
    //     }

    //     $output['status'] = $message;
    //     $output['message'] = $message2;
    //     echo json_encode($output);
    // }

public function insertEcoProfile()
{
        $output = array();
        $this->form_validation->set_rules('hh_id','Household member name','required|is_unique[tblseams_sourceincome_ecourism.id_demographic]');
        $data['Ecotourism'] = (object)$postData = [
            'id_demographic' => $this->input->post('hh_id',true),
            'tour__income' => $this->input->post('tour_income',true),
            'tour_location' => $this->input->post('tour_location',true),
            'ecolodge_income' => $this->input->post('ecolodge_income',true),
            'ecolodge_location' => $this->input->post('ecolodge_location',true),
            'kiosk_income' => $this->input->post('kiosk_income',true),
            'kiosk_location' => $this->input->post('kiosk_location',true),
            'boat_income' => $this->input->post('boat_income',true),
            'boat_location' => $this->input->post('boat_location',true),
            'porterage_income' => $this->input->post('porterage_income',true),
            'porterage_location' => $this->input->post('porterage_location',true),
            'catering_income' => $this->input->post('catering_income',true),
            'catering_location' => $this->input->post('catering_location',true),
            'trekking_income' => $this->input->post('trekking_income',true),
            'trekking_location' => $this->input->post('trekking_location',true),
            'caving_income' => $this->input->post('caving_income',true),
            'caving_location' => $this->input->post('caving_location',true),
            'generatedcode' => $this->input->post('gencode',true),
        ];
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['statusError'] = validation_errors();
        }else{
            if(!empty($postData['id_demographic'])){
                $query = $this->pamain_model->createEcotourism($postData);
                if($this->input->post('hh_id'))
                {
                    if(!empty($this->input->post('sts')) || !empty($this->input->post('aai')) || !empty($this->input->post('lac'))){
                        foreach($this->input->post('sts') as $ccnt => $ctr)
                        {
                            $aal = array(
                                        'id_si_ecotour' => $this->input->post('hh_id',true),
                                        'transport_service' => $this->input->post("sts")[$ccnt],
                                        'transport_income' => $this->input->post('aai')[$ccnt],
                                        'transport_location' => $this->input->post('lac')[$ccnt]
                                    );
                            $this->pamain_model->add_subEconTrans($aal);
                        }
                    }
                    if(!empty($this->input->post('others_ecotourism')) || !empty($this->input->post('other_aai')) || !empty($this->input->post('other_lac'))){
                        foreach($this->input->post('others_ecotourism') as $ccnt => $ctr)
                        {
                            $aal = array(
                                        'id_si_ecotour' => $this->input->post('hh_id',true),
                                        'ecotourism_other' => $this->input->post("others_ecotourism")[$ccnt],
                                        'ecotourism_income' => $this->input->post('other_aai')[$ccnt],
                                        'ecotourism_location' => $this->input->post('other_lac')[$ccnt]
                                    );
                            $this->pamain_model->add_subEconOthers($aal);
                        }
                    }

                }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'New household member registered successfully';
                }else{

                }
            }
        }
        echo json_encode($output);
}

public function fetchEcotourism(){

        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllEcotourism($codegens);
        // $rctr=0;
        foreach($data as $row){
        // $rctr+=1;
            $id = $row->id_si_ecotour;
            $dataTrans = $this->pamain_model->get_ecotourism_transportation_info($id);
            $dataotherRevEco = $this->pamain_model->get_ecotourism_otherRev($id);
            ?>
            <tr>
                <td><?php echo '<p>'.$row->name_household_head.'</p>'; ?></td>
                <td><?php echo '<p>'.$row->sexdesc.'</p>'; ?></td>
                <td class="hidden"><?php echo '<p>'.$row->id_si_ecotour.'</p>'; ?></td>
                <td class="hidden"><?php echo '</p>'; ?></td>
                <td>
                    <button type="button" class="btn btn-info btn-flat" value="<?php echo $row->id_si_ecotourism;?>" onclick="edit_ecotourism(this)">View/Edit</button>
                    <button type="button" class="btn btn-danger btn-flat removeEcotourim" data-id="<?php echo $row->id_si_ecotourism ?>" title="Remove">Remove</button>
                </td>
                <td class="hidden">
                    <?php $rctr=0;foreach($dataTrans as $ca):$rctr+=1;
                    ?>
                    <div id="bca<?php echo $ca->id_transportation?>" class="showdata">
                    <button type="button" class="btn btn-danger removeedittranspo" id="<?php echo $ca->id_transportation ?>" data-id="<?php echo $ca->id_transportation ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <ul><li>
                        <input type="hidden" name="caid1<?php echo $rctr;?>" value="<?php echo $ca->id_transportation; ?>"/>
                        <input type="hidden" name="ideco" value="<?php echo $row->id_si_ecotourism; ?>"/>
                        <?= form_label('Specific transport service','','for="ca"').form_input("ca$rctr",$ca->transport_service,'placeholder="" id="ca$rctr"')?><br>
                        <?= form_label('Avarage Annual Income','','for="da"').form_input("da$rctr",$ca->transport_income,'placeholder="" id="da$rctr"')?><br>
                        <?= form_label('Location where activity is conducted','','for="ea"').form_input("ea$rctr",$ca->transport_location,'placeholder="" id="ea$rctr"')?>
                    </li></ul>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden"><?php echo $row->tour__income; ?></td>
                <td class="hidden"><?php echo $row->tour_location; ?></td>
                <td class="hidden"><?php echo $row->ecolodge_income; ?></td>
                <td class="hidden"><?php echo $row->ecolodge_location; ?></td>
                <td class="hidden"><?php echo $row->kiosk_income; ?></td>
                <td class="hidden"><?php echo $row->kiosk_location; ?></td>
                <td class="hidden"><?php echo $row->boat_income; ?></td>
                <td class="hidden"><?php echo $row->boat_location; ?></td>
                <td class="hidden"><?php echo $row->porterage_income; ?></td>
                <td class="hidden"><?php echo $row->porterage_location; ?></td>
                <td class="hidden"><?php echo $row->catering_income; ?></td>
                <td class="hidden"><?php echo $row->catering_location; ?></td>
                <td class="hidden"><?php echo $row->trekking_income; ?></td>
                <td class="hidden"><?php echo $row->trekking_location; ?></td>
                <td class="hidden"><?php echo $row->caving_income; ?></td>
                <td class="hidden"><?php echo $row->caving_location; ?></td>
                <td class="hidden">
                    <?php $octr=0;foreach($dataotherRevEco as $cb):$octr+=1;
                    ?>
                    <div id="bcb<?php echo $cb->id_transport_others?>" class="showdata">
                    <button type="button" class="btn btn-danger removeedittranspoOthers" id="<?php echo $cb->id_transport_others ?>" data-id="<?php echo $cb->id_transport_others ?>" style="position: absolute;right: 3px">
                        Remove
                    </button>
                    <ul><li>
                        <input type="hidden" name="caid2<?php echo $octr;?>" value="<?php echo $cb->id_transport_others; ?>"/>
                        <?= form_label('Others (specify)','','for="eca"').form_input("eca$octr",$cb->ecotourism_other,'placeholder="" id="eca$octr"')?><br>
                        <?= form_label('Avarage Annual Income','','for="eda"').form_input("eda$octr",$cb->ecotourism_income,'placeholder="" id="eda$octr"')?><br>
                        <?= form_label('Location where activity is conducted','','for="eea"').form_input("eea$octr",$cb->ecotourism_location,'placeholder="" id="eea$octr"')?>
                    </li></ul>
                    </div>
                    <?php endforeach;?>
                </td>
                <input type="hidden" id="cpe<?php echo $row->id_si_ecotourism;?>" value="<?php echo $row->id_si_ecotour; ?>" />
                <input type="hidden" id="dpe<?php echo $row->id_si_ecotourism;?>" value="<?php echo $row->id_demographic; ?>" />
                <td class="hidden">
                    <input type="hidden" name="rctr" value="<?php echo $rctr; ?>"/>
                </td>
                <td class="hidden">
                    <input type="hidden" name="octr" value="<?php echo $octr; ?>"/>
                </td>
            </tr>
            <?php
        }
    }

public function deleteEcotourismSeamS($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblseams_sourceincome_ecourism WHERE id_si_ecotourism = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deleteEcotourismTransportation($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblseams_sourceincome_ecourism_sub_transportation WHERE id_transportation = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deleteipafother($id = null)
{
    $sql = "DELETE FROM tblpaipafincomeothers WHERE id_incomeOthers = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletesapamonitorreport($id = null)
{
    $sql = "DELETE FROM tblpamaintenuresapamonitoring WHERE id_sapamonitoring = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletepaeventparticipants($id = null)
{
    $sql = "DELETE FROM tblpamainevent_participant WHERE id_eventparticipant = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletemoamonitorreport($id = null)
{
    $sql = "DELETE FROM tblpamaintenuremoamonitoring WHERE id_moa_monitoring = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deleteipafdisbursement($id = null)
{
    $sql = "DELETE FROM tblpaipafdisbursement WHERE id_ipafdisburse = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deleteEcotourismOther($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblseams_sourceincome_ecourism_sub_transportation_others WHERE id_transport_others = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function update_SeamsEcotourismS(){
        $gencode = $this->input->post("seamseco-gencode");
        $rctr = $this->input->post("rctr");
        $octr = $this->input->post("octr");

        if($this->session->userdata('email')){
            $id = $this->input->post("seamseco-id");
            $details = array('id_demographic' => $this->input->post("edit-hh_id"),
                             'tour__income' => $this->input->post("edit-tour_income"),
                             'tour_location' => $this->input->post("edit-tour_location"),
                             'ecolodge_income' => $this->input->post("edit-ecolodge_income"),
                             'ecolodge_location' => $this->input->post("edit-ecolodge_location"),
                             'kiosk_income' => $this->input->post("edit-kiosk_income"),
                             'kiosk_location' => $this->input->post("edit-kiosk_location"),
                             'boat_income' => $this->input->post("edit-boat_income"),
                             'boat_location' => $this->input->post("edit-boat_location"),
                             'porterage_income' => $this->input->post("edit-porterage_income"),
                             'porterage_location' => $this->input->post("edit-porterage_location"),
                             'catering_income' => $this->input->post("edit-catering_income"),
                             'catering_location' => $this->input->post("edit-catering_location"),
                             'trekking_income' => $this->input->post("edit-trekking_income"),
                             'trekking_location' => $this->input->post("edit-trekking_location"),
                             'caving_income' => $this->input->post("edit-caving_income"),
                             'caving_location' => $this->input->post("edit-caving_location"),
                                );
            $this->pamain_model->update_seamsecotourism($details,$id);

            for($i=1;$i<=$rctr;$i++){
                $aid = $this->input->post("caid1".$i);
                if($this->input->post("ca".$i)!="" || $this->input->post("da".$i)!="" || $this->input->post("ea".$i)!=""){
                    $al = array('transport_service' => $this->input->post("ca".$i),
                                'transport_income' => $this->input->post("da".$i),
                                'transport_location' => $this->input->post("ea".$i),
                            );
                    $this->pamain_model->update_ecotourismtransportation($al,$aid);

                }else
                    $this->pamain_model->remove_ecotourismtransportation($aid);
            }

            for($i=1;$i<=$octr;$i++){
                $aid = $this->input->post("caid2".$i);
                if($this->input->post("eca".$i)!="" || $this->input->post("eda".$i)!="" || $this->input->post("eea".$i)!=""){
                    $al = array('ecotourism_other' => $this->input->post("eca".$i),
                                'ecotourism_income' => $this->input->post("eda".$i),
                                'ecotourism_location' => $this->input->post("eea".$i),
                            );
                    $this->pamain_model->update_ecotourismtransportationOthers($al,$aid);
                }else
                    $this->pamain_model->remove_ecotourismtransportationOthers($aid);
            }

            for($i=1;$i<=$octr;$i++){
                $aid = $this->input->post("caid2".$i);
                if($this->input->post("eca".$i)!="" || $this->input->post("eda".$i)!="" || $this->input->post("eea".$i)!=""){
                    $al = array('ecotourism_other' => $this->input->post("eca".$i),
                                'ecotourism_income' => $this->input->post("eda".$i),
                                'ecotourism_location' => $this->input->post("eea".$i),
                            );
                    $this->pamain_model->update_ecotourismtransportationOthers($al,$aid);
                }else
                    $this->pamain_model->remove_ecotourismtransportationOthers($aid);
            }

            if(!empty($this->input->post('ests')) || !empty($this->input->post('eaai')) || !empty($this->input->post('elac'))){
                foreach($this->input->post('ests') as $ccnt => $ctr)
                {
                    $aal = array(
                                'id_si_ecotour' => $this->input->post('ideco'),
                                'transport_service' => $this->input->post("ests")[$ccnt],
                                'transport_income' => $this->input->post('eaai')[$ccnt],
                                'transport_location' => $this->input->post('elac')[$ccnt]
                            );
                    $this->pamain_model->add_subEconTrans($aal);
                }
            }

            if(!empty($this->input->post('eothers_ecotourism')) || !empty($this->input->post('eother_aai')) || !empty($this->input->post('eother_lac'))){
                foreach($this->input->post('eothers_ecotourism') as $ccnt => $ctr)
                {
                    $abl = array(
                                'id_si_ecotour' => $this->input->post('ideco'),
                                'ecotourism_other' => $this->input->post("eothers_ecotourism")[$ccnt],
                                'ecotourism_income' => $this->input->post('eother_aai')[$ccnt],
                                'ecotourism_location' => $this->input->post('eother_lac')[$ccnt]
                            );
                    $this->pamain_model->add_subEconOthers($abl);
                }
            }

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_SeamsFishSalt(){
        $gencode = $this->input->post("fishsalt-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("fishsalt-id");
            $details = array('id_demographic_fish' =>    $this->input->post('edit-fs_id'),
                             'fishing_type' =>    $this->input->post('edit-fs1'),
                             'species' =>      $this->input->post('edit-fs2'),
                             'unit_measure' =>     $this->input->post('edit-fs3'),
                             'volume_sold_year' =>   $this->input->post('edit-fs4'),
                             'volume_consume_year' => $this->input->post('edit-fs5'),
                             'price_unit' =>      $this->input->post('edit-fs6'),
                             'fishsalt_value' =>    $this->input->post('edit-fs7'),
                             'type_gear' =>       $this->input->post('edit-fs8'),
                             'no_fishing_year' =>     $this->input->post('edit-fs9'),
                             'no_season_year' =>  $this->input->post('edit-fs10'),
                             'season_of_fishing' =>$this->input->post('edit-fs11'),
                             'location_fishing' =>   $this->input->post('edit-fs12'),
                             'no_member_activity' => $this->input->post('edit-fs13'),
                             'marketing_agent' =>   $this->input->post('edit-fs14'),
                             'marketing_location' => $this->input->post('edit-fs15'),
                             'type_payment' =>     $this->input->post('edit-fs16'),
                             'fishing_salt_remarks' =>     $this->input->post('edit-fs17'));
            $this->pamain_model->update_seamsfishsalt($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsFishFresh(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsFishFresh($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fish_fresh): ?>
                <tr id="<?php echo $row->id_fishery_fresh; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishery_fresh.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of fishing method : ".$row->fishing_type_fresh.
                                                            "<br>Species : ".$row->species_fresh.
                                                            "<br>Unit of measure : ".$row->unit_measure_fresh.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_fresh.
                                                            "<br>Volume consumed per year : ".$row->volume_consume_year_fresh.
                                                            "<br>Price per unit : ".$row->price_unit_fresh.
                                                            "<br>Value : ".$row->fishsalt_value_fresh.
                                                            "<br>Type of gears used per fishing method : ".$row->type_gear_fresh.
                                                            "<br>Total number of fishing hours per year : ".$row->no_fishing_year_fresh.
                                                            "<br>Number of season or period in a year : ".$row->no_season_year_fresh.
                                                            "<br>Season or period of fishing (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_fishing_fresh.
                                                            "<br>No of people & household members : ".$row->no_member_activity_fresh  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_fish_fresh ?></td>
                    <td class="hide"><?php echo $row->fishing_type_fresh ?></td>
                    <td class="hide"><?php echo $row->species_fresh ?></td>
                    <td class="hide"><?php echo $row->unit_measure_fresh ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_fresh ?></td>
                    <td class="hide"><?php echo $row->volume_consume_year_fresh ?></td>
                    <td class="hide"><?php echo $row->price_unit_fresh ?></td>
                    <td class="hide"><?php echo $row->fishsalt_value_fresh ?></td>
                    <td class="hide"><?php echo $row->type_gear_fresh ?></td>
                    <td class="hide"><?php echo $row->no_fishing_year_fresh ?></td>
                    <td class="hide"><?php echo $row->no_season_year_fresh ?></td>
                    <td class="hide"><?php echo $row->season_of_fishing_fresh ?></td>
                    <td class="hide"><?php echo $row->location_fishing_fresh ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_fresh ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_fresh ?></td>
                    <td class="hide"><?php echo $row->marketing_location_fresh ?></td>
                    <td class="hide"><?php echo $row->type_payment_fresh ?></td>
                    <td class="hide"><?php echo $row->fishing_fresh_remarks ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_fishery_fresh;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsfishfresh(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsFishFresh" data-id="<?php echo $row->id_fishery_fresh ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="ccsd<?php echo $row->id_fishery_fresh;?>" value="<?php echo $row->id_demographic_fish_fresh ?>" />
                    <input type="" id="ccse<?php echo $row->id_fishery_fresh;?>" value="<?php echo $row->season_of_fishing_fresh ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsFishFresh($id = null)
    {
            $sql1 = $this->db->where('id_fishery_fresh',$id)
                                            ->get('tblseams_sourceincome_fishery_fresh')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishery_fresh WHERE id_fishery_fresh = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_SeamsFishFresh(){
        $gencode = $this->input->post("fishfresh-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("fishfresh-id");
            $details = array('id_demographic_fish_fresh' =>    $this->input->post('edit-ffs_id'),
                             'fishing_type_fresh' =>    $this->input->post('edit-ffs1'),
                             'species_fresh' =>      $this->input->post('edit-ffs2'),
                             'unit_measure_fresh' =>     $this->input->post('edit-ffs3'),
                             'volume_sold_year_fresh' =>   $this->input->post('edit-ffs4'),
                             'volume_consume_year_fresh' => $this->input->post('edit-ffs5'),
                             'price_unit_fresh' =>      $this->input->post('edit-ffs6'),
                             'fishsalt_value_fresh' =>    $this->input->post('edit-ffs7'),
                             'type_gear_fresh' =>       $this->input->post('edit-ffs8'),
                             'no_fishing_year_fresh' =>     $this->input->post('edit-ffs9'),
                             'no_season_year_fresh' =>  $this->input->post('edit-ffs10'),
                             'season_of_fishing_fresh' =>$this->input->post('edit-ffs11'),
                             'location_fishing_fresh' =>   $this->input->post('edit-ffs12'),
                             'no_member_activity_fresh' => $this->input->post('edit-ffs13'),
                             'marketing_agent_fresh' =>   $this->input->post('edit-ffs14'),
                             'marketing_location_fresh' => $this->input->post('edit-ffs15'),
                             'type_payment_fresh' =>     $this->input->post('edit-ffs16'),
                             'fishing_fresh_remarks' =>     $this->input->post('edit-ffs17'));
            $this->pamain_model->update_seamsfishfresh($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamstpm(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstpm($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_tpm): ?>
                <tr id="<?php echo $row->id_tpm; ?>" class="trow">
                    <td><?php echo "(".$row->id_tpm.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of trading method : ".$row->type_trading.
                                                            "<br>Species : ".$row->species_tpm.
                                                            "<br>Unit of measure : ".$row->unit_measurement.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_tpm.
                                                            "<br>Volume consumed per year : ".$row->volume_consumed_year_tpm.
                                                            "<br>Price per unit : ".$row->price_unit_tpm.
                                                            "<br>Value : ".$row->value_tpm.
                                                            "<br>Season or period of trading (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_activity_tpm.
                                                            "<br>No of people & household members : ".$row->no_member_activity_tpm  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_tpm ?></td>
                    <td class="hide"><?php echo $row->type_trading ?></td>
                    <td class="hide"><?php echo $row->species_tpm ?></td>
                    <td class="hide"><?php echo $row->unit_measurement ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_tpm ?></td>
                    <td class="hide"><?php echo $row->volume_consumed_year_tpm ?></td>
                    <td class="hide"><?php echo $row->price_unit_tpm ?></td>
                    <td class="hide"><?php echo $row->value_tpm ?></td>
                    <td class="hide"><?php echo $row->season_trading_tpm ?></td>
                    <td class="hide"><?php echo $row->location_activity_tpm ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_tpm ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_tpm ?></td>
                    <td class="hide"><?php echo $row->marketing_location_tpm ?></td>
                    <td class="hide"><?php echo $row->type_payment_tpm ?></td>
                    <td class="hide"><?php echo $row->remarks_tpm ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_tpm;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamstpm(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamstpm" data-id="<?php echo $row->id_tpm ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cdsd<?php echo $row->id_tpm;?>" value="<?php echo $row->id_demographic_tpm ?>" />
                    <input type="" id="cdse<?php echo $row->id_tpm;?>" value="<?php echo $row->season_trading_tpm ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstpm($id = null)
    {
            $sql1 = $this->db->where('id_tpm',$id)
                                            ->get('tblseams_sourceincome_tpm')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_tpm WHERE id_tpm = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamstpm(){
        $gencode = $this->input->post("tpm-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("tpm-id");
            $details = array('id_demographic_tpm'           =>      $this->input->post('edit-tpm_id'),
                             'type_trading'                 =>      $this->input->post('edit-tpm1'),
                             'species_tpm'                  =>      $this->input->post('edit-tpm2'),
                             'unit_measurement'             =>      $this->input->post('edit-tpm3'),
                             'volume_sold_year_tpm'         =>      $this->input->post('edit-tpm4'),
                             'volume_consumed_year_tpm'     =>      $this->input->post('edit-tpm5'),
                             'price_unit_tpm'               =>      $this->input->post('edit-tpm6'),
                             'value_tpm'                    =>      $this->input->post('edit-tpm7'),
                             'location_activity_tpm'        =>      $this->input->post('edit-tpm8'),
                             'season_trading_tpm'           =>      $this->input->post('edit-tpm9'),
                             'no_member_activity_tpm'       =>      $this->input->post('edit-tpm10'),
                             'marketing_agent_tpm'          =>      $this->input->post('edit-tpm11'),
                             'marketing_location_tpm'       =>      $this->input->post('edit-tpm12'),
                             'type_payment_tpm'             =>      $this->input->post('edit-tpm13'),
                             'remarks_tpm'                  =>      $this->input->post('edit-tpm14'));
            $this->pamain_model->update_seamstpm($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsagri(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsagri($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_agricultural): ?>
                <tr id="<?php echo $row->id_agricultural; ?>" class="trow">
                    <td><?php echo "(".$row->id_agricultural.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of agricultural method : ".$row->agricultural_type.
                                                            "<br>Species : ".$row->species_agricultural.
                                                            "<br>Unit of measure : ".$row->unit_measure_agricultural.
                                                            "<br>Area : ".$row->area_agricultural.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_agricultural.
                                                            "<br>Volume consumed per year : ".$row->volume_consume_year_agricultural.
                                                            "<br>Price per unit : ".$row->price_unit_agricultural.
                                                            "<br>Value : ".$row->agricultural_value.
                                                            "<br>Season or period of agricultural (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_agricultural.
                                                            "<br>No of people & household members : ".$row->no_member_activity_agricultural  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_agricultural ?></td>
                    <td class="hide"><?php echo $row->agricultural_type ?></td>
                    <td class="hide"><?php echo $row->species_agricultural ?></td>
                    <td class="hide"><?php echo $row->area_agricultural ?></td>
                    <td class="hide"><?php echo $row->unit_measure_agricultural ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_agricultural ?></td>
                    <td class="hide"><?php echo $row->volume_consume_year_agricultural ?></td>
                    <td class="hide"><?php echo $row->price_unit_agricultural ?></td>
                    <td class="hide"><?php echo $row->agricultural_value ?></td>
                    <td class="hide"><?php echo $row->described_agricultural ?></td>
                    <td class="hide"><?php echo $row->location_agricultural ?></td>
                    <td class="hide"><?php echo $row->season_of_agricultural ?></td>
                    <td class="hide"><?php echo $row->no_production_year_agricultural ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_agricultural ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_agricultural ?></td>
                    <td class="hide"><?php echo $row->marketing_location_agricultural ?></td>
                    <td class="hide"><?php echo $row->type_payment_agricultural ?></td>
                    <td class="hide"><?php echo $row->agricultural_remarks ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_agricultural;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsagri(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsagri" data-id="<?php echo $row->id_agricultural ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cesd<?php echo $row->id_agricultural;?>" value="<?php echo $row->id_demographic_agricultural ?>" />
                    <input type="" id="cese<?php echo $row->id_agricultural;?>" value="<?php echo $row->season_of_agricultural ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsagri($id = null)
    {
            $sql1 = $this->db->where('id_agricultural',$id)
                                            ->get('tblseams_sourceincome_agriculture')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_agriculture WHERE id_agricultural = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function update_Seamsagri(){
        $gencode = $this->input->post("agri-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("agri-id");
            $details = array('id_demographic_agricultural'           =>      $this->input->post('edit-agri_id'),
                             'agricultural_type'                 =>      $this->input->post('edit-agri1'),
                             'species_agricultural'                  =>      $this->input->post('edit-agri2'),
                             'area_agricultural'             =>      $this->input->post('edit-agri3'),
                             'unit_measure_agricultural'         =>      $this->input->post('edit-agri4'),
                             'volume_sold_year_agricultural'     =>      $this->input->post('edit-agri5'),
                             'volume_consume_year_agricultural'               =>      $this->input->post('edit-agri6'),
                             'price_unit_agricultural'                    =>      $this->input->post('edit-agri7'),
                             'agricultural_value'        =>      $this->input->post('edit-agri8'),
                             'described_agricultural'           =>      $this->input->post('edit-agri9'),
                             'location_agricultural'       =>      $this->input->post('edit-agri10'),
                             'season_of_agricultural'          =>      $this->input->post('edit-agri11'),
                             'no_production_year_agricultural'       =>      $this->input->post('edit-agri12'),
                             'no_member_activity_agricultural'             =>      $this->input->post('edit-agri13'),
                             'marketing_agent_agricultural'                  =>      $this->input->post('edit-agri14'),
                             'marketing_location_agricultural'                  =>      $this->input->post('edit-agri15'),
                             'type_payment_agricultural'                  =>      $this->input->post('edit-agri16'),
                             'agricultural_remarks'                  =>      $this->input->post('edit-agri17'),

                         );
            $this->pamain_model->update_seamsagri($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsgrazing(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsgrazing($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_livestock): ?>
                <tr id="<?php echo $row->id_livestock; ?>" class="trow">
                    <td><?php echo "(".$row->id_livestock.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of agricultural method : ".$row->type_livestock.
                                                            "<br>Unit of measure : ".$row->unit_measure_livestock.
                                                            "<br>Grazing Area : ".$row->grazing_area.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_livestock.
                                                            "<br>Volume consumed per year : ".$row->volume_consumed_year_livestock.
                                                            "<br>Price per unit : ".$row->price_unit_livestock.
                                                            "<br>Value : ".$row->value_livestock.
                                                            "<br>Season or period of agricultural (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_livestock.
                                                            "<br>No of people & household members : ".$row->no_household_livestock  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_livestock ?></td>
                    <td class="hide"><?php echo $row->type_livestock ?></td>
                    <td class="hide"><?php echo $row->grazing_area ?></td>
                    <td class="hide"><?php echo $row->unit_measure_livestock ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_livestock ?></td>
                    <td class="hide"><?php echo $row->volume_consumed_year_livestock ?></td>
                    <td class="hide"><?php echo $row->price_unit_livestock ?></td>
                    <td class="hide"><?php echo $row->value_livestock ?></td>
                    <td class="hide"><?php echo $row->specific_activities_livestock ?></td>
                    <td class="hide"><?php echo $row->location_livestock ?></td>
                    <td class="hide"><?php echo $row->season_livestock ?></td>
                    <td class="hide"><?php echo $row->no_household_livestock ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_livestock ?></td>
                    <td class="hide"><?php echo $row->marketing_location_livestock ?></td>
                    <td class="hide"><?php echo $row->type_payment_livestock ?></td>
                    <td class="hide"><?php echo $row->remarks_livestock ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_livestock;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsgrazing(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsgrazing" data-id="<?php echo $row->id_livestock ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cfsd<?php echo $row->id_livestock;?>" value="<?php echo $row->id_demographic_livestock ?>" />
                    <input type="" id="cfse<?php echo $row->id_livestock;?>" value="<?php echo $row->season_livestock ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsgrazing($id = null)
    {
            $sql1 = $this->db->where('id_livestock',$id)
                                            ->get('tblseams_sourceincome_livestock')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_livestock WHERE id_livestock = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsgrazing(){
        $gencode = $this->input->post("ls-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("ls-id");
            $details = array('id_demographic_livestock'           =>      $this->input->post('edit-ls_id'),
                             'type_livestock'                 =>      $this->input->post('edit-ls-1'),
                             'grazing_area'                  =>      $this->input->post('edit-ls-2'),
                             'unit_measure_livestock'             =>      $this->input->post('edit-ls-3'),
                             'volume_sold_year_livestock'         =>      $this->input->post('edit-ls-4'),
                             'volume_consumed_year_livestock'     =>      $this->input->post('edit-ls-5'),
                             'price_unit_livestock'               =>      $this->input->post('edit-ls-6'),
                             'value_livestock'                    =>      $this->input->post('edit-ls-7'),
                             'location_livestock'        =>      $this->input->post('edit-ls-8'),
                             'specific_activities_livestock'           =>      $this->input->post('edit-ls-9'),
                             'season_livestock'       =>      $this->input->post('edit-ls-10'),
                             'no_household_livestock'          =>      $this->input->post('edit-ls-11'),
                             'marketing_agent_livestock'       =>      $this->input->post('edit-ls-12'),
                             'marketing_location_livestock'             =>      $this->input->post('edit-ls-13'),
                             'type_payment_livestock'                  =>      $this->input->post('edit-ls-14'),
                             'remarks_livestock'                  =>      $this->input->post('edit-ls-15'),
                         );
            $this->pamain_model->update_seamsgrazing($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsnontimber(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsnontimber($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_nontimber): ?>
                <tr id="<?php echo $row->id_nontimber; ?>" class="trow">
                    <td><?php echo "(".$row->id_nontimber.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of non-timber products : ".$row->type_nontimber.
                                                            "<br>Species : ".$row->species_nontimber.
                                                            "<br>Unit of measure : ".$row->unit_measure_nontimber.
                                                            "<br>Area (has) : ".$row->area_nontimber.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_nontimber.
                                                            "<br>Volume consumed per year : ".$row->volume_consumed_year_nontimber.
                                                            "<br>Price per unit : ".$row->unit_price_nontimber.
                                                            "<br>Value : ".$row->value_nontimber.
                                                            "<br>Season or period of agricultural (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_nontimber.
                                                            "<br>No of people & household members : ".$row->no_member_activity_nontimber  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_nontimber ?></td>
                    <td class="hide"><?php echo $row->type_nontimber ?></td>
                    <td class="hide"><?php echo $row->species_nontimber ?></td>
                    <td class="hide"><?php echo $row->area_nontimber ?></td>
                    <td class="hide"><?php echo $row->unit_measure_nontimber ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_nontimber ?></td>
                    <td class="hide"><?php echo $row->volume_consumed_year_nontimber ?></td>
                    <td class="hide"><?php echo $row->unit_price_nontimber ?></td>
                    <td class="hide"><?php echo $row->value_nontimber ?></td>
                    <td class="hide"><?php echo $row->nontimber_activity ?></td>
                    <td class="hide"><?php echo $row->location_nontimber ?></td>
                    <td class="hide"><?php echo $row->season_nontimber ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_nontimber ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_nontimber ?></td>
                    <td class="hide"><?php echo $row->marketing_location_nontimber ?></td>
                    <td class="hide"><?php echo $row->type_payment_nontimber ?></td>
                    <td class="hide"><?php echo $row->remarks_nontimber ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_nontimber;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsnontimber(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsgrazing" data-id="<?php echo $row->id_nontimber ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cgsd<?php echo $row->id_nontimber;?>" value="<?php echo $row->id_demographic_nontimber ?>" />
                    <input type="" id="cgse<?php echo $row->id_nontimber;?>" value="<?php echo $row->season_nontimber ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsnontimber($id = null)
    {
            $sql1 = $this->db->where('id_nontimber',$id)
                                            ->get('tblseams_sourceincome_nontimber')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_nontimber WHERE id_nontimber = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsnontimber(){
        $gencode = $this->input->post("nntim-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("nntim-id");
            $details = array('id_demographic_nontimber'           =>      $this->input->post('edit-nntim_id'),
                             'type_nontimber'                 =>      $this->input->post('edit-nntim-1'),
                             'species_nontimber'                  =>      $this->input->post('edit-nntim-2'),
                             'area_nontimber'             =>      $this->input->post('edit-nntim-3'),
                             'unit_measure_nontimber'         =>      $this->input->post('edit-nntim-4'),
                             'volume_sold_year_nontimber'     =>      $this->input->post('edit-nntim-5'),
                             'volume_consumed_year_nontimber'               =>      $this->input->post('edit-nntim-6'),
                             'unit_price_nontimber'                    =>      $this->input->post('edit-nntim-7'),
                             'value_nontimber'        =>      $this->input->post('edit-nntim-8'),
                             'location_nontimber'           =>      $this->input->post('edit-nntim-9'),
                             'nontimber_activity'       =>      $this->input->post('edit-nntim-10'),
                             'season_nontimber'          =>      $this->input->post('edit-nntim-11'),
                             'no_member_activity_nontimber'       =>      $this->input->post('edit-nntim-12'),
                             'marketing_agent_nontimber'             =>      $this->input->post('edit-nntim-13'),
                             'marketing_location_nontimber'                  =>      $this->input->post('edit-nntim-14'),
                             'type_payment_nontimber'                  =>      $this->input->post('edit-nntim-15'),
                             'remarks_nontimber'                  =>      $this->input->post('edit-nntim-16'),
                         );
            $this->pamain_model->update_seamsnontimbers($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamstimber(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstimber($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_timber): ?>
                <tr id="<?php echo $row->id_timber; ?>" class="trow">
                    <td><?php echo "(".$row->id_timber.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of timber products : ".$row->type_timber.
                                                            "<br>Species : ".$row->species_timber.
                                                            "<br>Unit of measure : ".$row->unit_measure_timber.
                                                            "<br>Area (has) : ".$row->area_timber.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_timber.
                                                            "<br>Volume consumed per year : ".$row->volume_consumed_year_timber.
                                                            "<br>Price per unit : ".$row->unit_price_timber.
                                                            "<br>Value : ".$row->value_timber.
                                                            "<br>Season or period of agricultural (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_timber.
                                                            "<br>No of people & household members : ".$row->no_member_activity_timber  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_timber ?></td>
                    <td class="hide"><?php echo $row->type_timber ?></td>
                    <td class="hide"><?php echo $row->species_timber ?></td>
                    <td class="hide"><?php echo $row->area_timber ?></td>
                    <td class="hide"><?php echo $row->unit_measure_timber ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_timber ?></td>
                    <td class="hide"><?php echo $row->volume_consumed_year_timber ?></td>
                    <td class="hide"><?php echo $row->unit_price_timber ?></td>
                    <td class="hide"><?php echo $row->value_timber ?></td>
                    <td class="hide"><?php echo $row->timber_activity ?></td>
                    <td class="hide"><?php echo $row->location_timber ?></td>
                    <td class="hide"><?php echo $row->season_timber ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_timber ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_timber ?></td>
                    <td class="hide"><?php echo $row->marketing_location_timber ?></td>
                    <td class="hide"><?php echo $row->type_payment_timber ?></td>
                    <td class="hide"><?php echo $row->remarks_timber ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_timber;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamstimber(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsgrazing" data-id="<?php echo $row->id_timber ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="chsd<?php echo $row->id_timber;?>" value="<?php echo $row->id_demographic_timber ?>" />
                    <input type="" id="chse<?php echo $row->id_timber;?>" value="<?php echo $row->season_timber ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstimber($id = null)
    {
            $sql1 = $this->db->where('id_timber',$id)
                                            ->get('tblseams_sourceincome_timber')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_timber WHERE id_timber = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamstimber(){
        $gencode = $this->input->post("tim-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("tim-id");
            $details = array('id_demographic_timber'           =>      $this->input->post('edit-tim_id'),
                             'type_timber'                 =>      $this->input->post('edit-tim-1'),
                             'species_timber'                  =>      $this->input->post('edit-tim-2'),
                             'area_timber'             =>      $this->input->post('edit-tim-3'),
                             'unit_measure_timber'         =>      $this->input->post('edit-tim-4'),
                             'volume_sold_year_timber'     =>      $this->input->post('edit-tim-5'),
                             'volume_consumed_year_timber'               =>      $this->input->post('edit-tim-6'),
                             'unit_price_timber'                    =>      $this->input->post('edit-tim-7'),
                             'value_timber'        =>      $this->input->post('edit-tim-8'),
                             'location_timber'           =>      $this->input->post('edit-tim-9'),
                             'timber_activity'       =>      $this->input->post('edit-tim-10'),
                             'season_timber'          =>      $this->input->post('edit-tim-11'),
                             'no_member_activity_timber'       =>      $this->input->post('edit-tim-12'),
                             'marketing_agent_timber'             =>      $this->input->post('edit-tim-13'),
                             'marketing_location_timber'                  =>      $this->input->post('edit-tim-14'),
                             'type_payment_timber'                  =>      $this->input->post('edit-tim-15'),
                             'remarks_timber'                  =>      $this->input->post('edit-tim-16'),
                         );
            $this->pamain_model->update_seamstimbers($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsrwc(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsrwc($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_rwc): ?>
                <tr id="<?php echo $row->id_rwc; ?>" class="trow">
                    <td><?php echo "(".$row->id_rwc.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of revenue source from resource use and wildlife collection : ".$row->type_rwc.
                                                            "<br>Species : ".$row->species_rwc.
                                                            "<br>Unit of measure : ".$row->unit_measure_rwc.
                                                            "<br>Area (has) : ".$row->area_rwc.
                                                            "<br>Volume sold per year : ".$row->volume_sold_year_rwc.
                                                            "<br>Volume consumed per year : ".$row->volume_consumed_year_rwc.
                                                            "<br>Price per unit : ".$row->unit_price_rwc.
                                                            "<br>Value : ".$row->value_rwc.
                                                            "<br>Season or period of agricultural (month) : ".$row->month.
                                                            "<br>Location or landmarks : ".$row->location_rwc.
                                                            "<br>No of people & household members : ".$row->no_member_activity_rwc  ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_rwc ?></td>
                    <td class="hide"><?php echo $row->type_rwc ?></td>
                    <td class="hide"><?php echo $row->species_rwc ?></td>
                    <td class="hide"><?php echo $row->area_rwc ?></td>
                    <td class="hide"><?php echo $row->unit_measure_rwc ?></td>
                    <td class="hide"><?php echo $row->volume_sold_year_rwc ?></td>
                    <td class="hide"><?php echo $row->volume_consumed_year_rwc ?></td>
                    <td class="hide"><?php echo $row->unit_price_rwc ?></td>
                    <td class="hide"><?php echo $row->value_rwc ?></td>
                    <td class="hide"><?php echo $row->rwc_activity ?></td>
                    <td class="hide"><?php echo $row->location_rwc ?></td>
                    <td class="hide"><?php echo $row->season_rwc ?></td>
                    <td class="hide"><?php echo $row->no_member_activity_rwc ?></td>
                    <td class="hide"><?php echo $row->marketing_agent_rwc ?></td>
                    <td class="hide"><?php echo $row->marketing_location_rwc ?></td>
                    <td class="hide"><?php echo $row->type_payment_rwc ?></td>
                    <td class="hide"><?php echo $row->remarks_rwc ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_rwc;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsrwc(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsrwc" data-id="<?php echo $row->id_rwc ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cisd<?php echo $row->id_rwc;?>" value="<?php echo $row->id_demographic_rwc ?>" />
                    <input type="" id="cise<?php echo $row->id_rwc;?>" value="<?php echo $row->season_rwc ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsrwc($id = null)
    {
            $sql1 = $this->db->where('id_rwc',$id)
                                            ->get('tblseams_sourceincome_rwc')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_rwc WHERE id_rwc = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsrwc(){
        $gencode = $this->input->post("rwc-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("rwc-id");
            $details = array('id_demographic_rwc'           =>      $this->input->post('edit-rwc_id'),
                             'type_rwc'                 =>      $this->input->post('edit-rwc-1'),
                             'species_rwc'                  =>      $this->input->post('edit-rwc-2'),
                             'area_rwc'             =>      $this->input->post('edit-rwc-3'),
                             'unit_measure_rwc'         =>      $this->input->post('edit-rwc-4'),
                             'volume_sold_year_rwc'     =>      $this->input->post('edit-rwc-5'),
                             'volume_consumed_year_rwc'               =>      $this->input->post('edit-rwc-6'),
                             'unit_price_rwc'                    =>      $this->input->post('edit-rwc-7'),
                             'value_rwc'        =>      $this->input->post('edit-rwc-8'),
                             'location_rwc'           =>      $this->input->post('edit-rwc-9'),
                             'rwc_activity'       =>      $this->input->post('edit-rwc-10'),
                             'season_rwc'          =>      $this->input->post('edit-rwc-11'),
                             'no_member_activity_rwc'       =>      $this->input->post('edit-rwc-12'),
                             'marketing_agent_rwc'             =>      $this->input->post('edit-rwc-13'),
                             'marketing_location_rwc'                  =>      $this->input->post('edit-rwc-14'),
                             'type_payment_rwc'                  =>      $this->input->post('edit-rwc-15'),
                             'remarks_rwc'                  =>      $this->input->post('edit-rwc-16'),
                         );
            $this->pamain_model->update_seamsrwc($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }


    public function fetchSeamsmining(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsmining($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_mining): ?>
                <tr id="<?php echo $row->id_mining; ?>" class="trow">
                    <td><?php echo "(".$row->id_mining.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of revenue source from mining and quarrying industry : ".$row->type_mining.
                                                            "<br>Revenue in a month : ".$row->revenue_month_mining.
                                                            "<br>Number of times in a year : ".$row->source_extraction_mining.
                                                            "<br>Source of extraction : ".$row->no_time_year_mining ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_mining ?></td>
                    <td class="hide"><?php echo $row->type_mining ?></td>
                    <td class="hide"><?php echo $row->revenue_month_mining ?></td>
                    <td class="hide"><?php echo $row->no_time_year_mining ?></td>
                    <td class="hide"><?php echo $row->source_extraction_mining ?></td>
                    <td class="hide"><?php echo $row->remarks_mining ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_mining;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsmining(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsmining" data-id="<?php echo $row->id_mining ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cjsd<?php echo $row->id_mining;?>" value="<?php echo $row->id_demographic_mining ?>" />
                    <input type="" id="cjse<?php echo $row->id_mining;?>" value="<?php echo $row->season_mining ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsmining($id = null)
    {
            $sql1 = $this->db->where('id_mining',$id)
                                            ->get('tblseams_sourceincome_mining')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_mining WHERE id_mining = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsmining(){
        $gencode = $this->input->post("mining-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("mining-id");
            $details = array('id_demographic_mining'           =>      $this->input->post('edit-mining_id'),
                             'type_mining'                 =>      $this->input->post('edit-mining-1'),
                             'revenue_month_mining'                  =>      $this->input->post('edit-mining-2'),
                             'no_time_year_mining'             =>      $this->input->post('edit-mining-3'),
                             'source_extraction_mining'         =>      $this->input->post('edit-mining-4'),
                             'remarks_mining'     =>      $this->input->post('edit-mining-5')
                         );
            $this->pamain_model->update_seamsmining($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsindustry(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsindustry($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_industry): ?>
                <tr id="<?php echo $row->id_industry; ?>" class="trow">
                    <td><?php echo "(".$row->id_industry.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of industries : ".$row->type_industry.
                                                            "<br>Revenue in a month : ".$row->revenue_month_industry.
                                                            "<br>Number of times in a year : ".$row->no_times_year_industry ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_industry ?></td>
                    <td class="hide"><?php echo $row->type_industry ?></td>
                    <td class="hide"><?php echo $row->revenue_month_industry ?></td>
                    <td class="hide"><?php echo $row->no_times_year_industry ?></td>
                    <td class="hide"><?php echo $row->remarks_industry ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_industry;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsindustry(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsindustry" data-id="<?php echo $row->id_industry ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cksd<?php echo $row->id_industry;?>" value="<?php echo $row->id_demographic_industry ?>" />
                    <input type="" id="ckse<?php echo $row->id_industry;?>" value="<?php echo $row->season_industry ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsindustry($id = null)
    {
            $sql1 = $this->db->where('id_industry',$id)
                                            ->get('tblseams_sourceincome_industry')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_industry WHERE id_industry = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsindustry(){
        $gencode = $this->input->post("industry-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("industry-id");
            $details = array('id_demographic_industry'           =>      $this->input->post('edit-industry_id'),
                             'type_industry'                 =>      $this->input->post('edit-industry-1'),
                             'revenue_month_industry'                  =>      $this->input->post('edit-industry-2'),
                             'no_times_year_industry'             =>      $this->input->post('edit-industry-3'),
                             'remarks_industry'     =>      $this->input->post('edit-industry-4')
                         );
            $this->pamain_model->update_seamsindustry($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsservice(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsservice($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_service): ?>
                <tr id="<?php echo $row->id_service; ?>" class="trow">
                    <td><?php echo "(".$row->id_service.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Type of service-based industry : ".$row->type_service.
                                                            "<br>Revenue in a month : ".$row->revenue_month_service.
                                                            "<br>Number of times in a year : ".$row->no_times_year_service ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_service ?></td>
                    <td class="hide"><?php echo $row->type_service ?></td>
                    <td class="hide"><?php echo $row->revenue_month_service ?></td>
                    <td class="hide"><?php echo $row->no_times_year_service ?></td>
                    <td class="hide"><?php echo $row->remarks_service ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_service;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamsservice(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamsservice" data-id="<?php echo $row->id_service ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="clsd<?php echo $row->id_service;?>" value="<?php echo $row->id_demographic_service ?>" />
                    <input type="" id="clse<?php echo $row->id_service;?>" value="<?php echo $row->season_service ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsservice($id = null)
    {
            $sql1 = $this->db->where('id_service',$id)
                                            ->get('tblseams_sourceincome_service')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_service WHERE id_service = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamsservice(){
        $gencode = $this->input->post("service-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("service-id");
            $details = array('id_demographic_service'           =>      $this->input->post('edit-service_id'),
                             'type_service'                 =>      $this->input->post('edit-service-1'),
                             'revenue_month_service'                  =>      $this->input->post('edit-service-2'),
                             'no_times_year_service'             =>      $this->input->post('edit-service-3'),
                             'remarks_service'     =>      $this->input->post('edit-service-4')
                         );
            $this->pamain_model->update_seamsservice($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }


    public function fetchSeamssource(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamssource($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="2" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_source): ?>
                <tr id="<?php echo $row->id_source; ?>" class="trow">
                    <td><?php echo "(".$row->id_source.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td style="text-align: left"><?php echo "Other revenue source : ".$row->type_source.
                                                            "<br>Revenue in a month : ".$row->revenue_month_source.
                                                            "<br>Number of times in a year : ".$row->no_times_year_source ?>
                    </td>
                    <td class="hide"><?php echo $row->id_demographic_source ?></td>
                    <td class="hide"><?php echo $row->type_source ?></td>
                    <td class="hide"><?php echo $row->revenue_month_source ?></td>
                    <td class="hide"><?php echo $row->no_times_year_source ?></td>
                    <td class="hide"><?php echo $row->remarks_source ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_source;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeSeamssource" data-id="<?php echo $row->id_source ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_source;?>" value="<?php echo $row->id_demographic_source ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamssource($id = null)
    {
            $sql1 = $this->db->where('id_source',$id)
                                            ->get('tblseams_sourceincome_source')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_source WHERE id_source = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function update_Seamssource(){
        $gencode = $this->input->post("source-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("source-id");
            $details = array('id_demographic_source'           =>      $this->input->post('edit-source_id'),
                             'type_source'                 =>      $this->input->post('edit-source-1'),
                             'revenue_month_source'                  =>      $this->input->post('edit-source-2'),
                             'no_times_year_source'             =>      $this->input->post('edit-source-3'),
                             'remarks_source'     =>      $this->input->post('edit-source-4')
                         );
            $this->pamain_model->update_seamssource($details,$id);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function fetchSeamsEcoMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsEcoMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_ecocostmaterial): ?>
                <tr id="<?php echo $row->id_ecocostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_ecocostmaterial.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_ecocostmaterial ?></td>
                    <td ><?php echo $row->item_ecocostmaterial ?></td>
                    <td ><?php echo $row->annualcost_ecocostmaterial ?></td>
                    <td ><?php echo $row->unit_ecocostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_ecocostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_ecocostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_ecocostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_ecocostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsEcoMaterial" data-id="<?php echo $row->id_ecocostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_ecocostmaterial;?>" value="<?php echo $row->id_demographic_ecocostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsEcoMaterial($id = null)
    {
            $sql1 = $this->db->where('id_ecocostmaterial',$id)
                                            ->get('tblseams_sourceincome_economic_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_economic_material WHERE id_ecocostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteimagegalleryothers($id = null)
    {
            $sql1 = $this->db->where('id',$id)
                                            ->get('gallery')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM gallery WHERE id = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsEcoEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsEcoEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_ecocostequipment): ?>
                <tr id="<?php echo $row->id_ecocostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_ecocostequipment.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_ecocostequipment ?></td>
                    <td ><?php echo $row->item_ecocostequipment ?></td>
                    <td ><?php echo $row->annualcost_ecocostequipment ?></td>
                    <td ><?php echo $row->unit_ecocostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_ecocostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_ecocostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_ecocostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_ecocostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsEcoEquipment" data-id="<?php echo $row->id_ecocostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_ecocostequipment;?>" value="<?php echo $row->id_demographic_ecocostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsEcoEquipment($id = null)
    {
            $sql1 = $this->db->where('id_ecocostequipment',$id)
                                            ->get('tblseams_sourceincome_economic_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_economic_equipment WHERE id_ecocostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsEcoLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsEcoLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_ecocostlabor): ?>
                <tr id="<?php echo $row->id_ecocostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_ecocostlabor.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_ecocostlabor ?></td>
                    <td ><?php echo $row->item_ecocostlabor ?></td>
                    <td ><?php echo $row->annualcost_ecocostlabor ?></td>
                    <td ><?php echo $row->unit_ecocostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_ecocostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_ecocostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_ecocostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_ecocostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsEcoLabor" data-id="<?php echo $row->id_ecocostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_ecocostlabor;?>" value="<?php echo $row->id_demographic_ecocostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsEcoLabor($id = null)
    {
            $sql1 = $this->db->where('id_ecocostlabor',$id)
                                            ->get('tblseams_sourceincome_economic_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_economic_labor WHERE id_ecocostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsEcoOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsEcoOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_ecocostother): ?>
                <tr id="<?php echo $row->id_ecocostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_ecocostother.") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_ecocostother ?></td>
                    <td ><?php echo $row->item_ecocostother ?></td>
                    <td ><?php echo $row->annualcost_ecocostother ?></td>
                    <td ><?php echo $row->unit_ecocostother ?></td>
                    <td ><?php echo $row->avgpriceunit_ecocostother ?></td>
                    <td ><?php echo $row->noincurredyear_ecocostother ?></td>
                    <td ><?php echo $row->costincurredstage_ecocostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_ecocostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsEcoOther" data-id="<?php echo $row->id_ecocostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_ecocostother;?>" value="<?php echo $row->id_demographic_ecocostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsEcoOther($id = null)
    {
            $sql1 = $this->db->where('id_ecocostother',$id)
                                            ->get('tblseams_sourceincome_economic_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_economic_other WHERE id_ecocostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsfsMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsfsMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishsaltcostmaterial): ?>
                <tr id="<?php echo $row->id_fishsaltcostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishsaltcostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->item_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->annualcost_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->unit_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_fishsaltcostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_fishsaltcostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishsaltcostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsfsMaterial" data-id="<?php echo $row->id_fishsaltcostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishsaltcostmaterial;?>" value="<?php echo $row->id_demographic_fishsaltcostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsfsMaterial($id = null)
    {
            $sql1 = $this->db->where('id_fishsaltcostmaterial',$id)
                                            ->get('tblseams_sourceincome_fishsalt_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishsalt_material WHERE id_fishsaltcostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsfsEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsfsEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishsaltcostequipment): ?>
                <tr id="<?php echo $row->id_fishsaltcostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishsaltcostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->item_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->annualcost_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->unit_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_fishsaltcostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_fishsaltcostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishsaltcostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsfsEquipment" data-id="<?php echo $row->id_fishsaltcostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishsaltcostequipment;?>" value="<?php echo $row->id_demographic_fishsaltcostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }



    public function deleteSeamsfsEquipment($id = null)
    {
            $sql1 = $this->db->where('id_fishsaltcostequipment',$id)
                                            ->get('tblseams_sourceincome_fishsalt_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishsalt_equipment WHERE id_fishsaltcostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsfsLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsfsLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishsaltcostlabor): ?>
                <tr id="<?php echo $row->id_fishsaltcostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishsaltcostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->item_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->annualcost_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->unit_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_fishsaltcostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_fishsaltcostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishsaltcostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsfsLabor" data-id="<?php echo $row->id_fishsaltcostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishsaltcostlabor;?>" value="<?php echo $row->id_demographic_fishsaltcostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsfsLabor($id = null)
    {
            $sql1 = $this->db->where('id_fishsaltcostlabor',$id)
                                            ->get('tblseams_sourceincome_fishsalt_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishsalt_labor WHERE id_fishsaltcostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsfsOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsfsOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishsaltcostother): ?>
                <tr id="<?php echo $row->id_fishsaltcostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishsaltcostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishsaltcostother ?></td>
                    <td ><?php echo $row->item_fishsaltcostother ?></td>
                    <td ><?php echo $row->annualcost_fishsaltcostother ?></td>
                    <td ><?php echo $row->unit_fishsaltcostother ?></td>
                    <td ><?php echo $row->avgpriceunit_fishsaltcostother ?></td>
                    <td ><?php echo $row->noincurredyear_fishsaltcostother ?></td>
                    <td ><?php echo $row->costincurredstage_fishsaltcostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishsaltcostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsfsOther" data-id="<?php echo $row->id_fishsaltcostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishsaltcostother;?>" value="<?php echo $row->id_demographic_fishsaltcostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsfsOther($id = null)
    {
            $sql1 = $this->db->where('id_fishsaltcostother',$id)
                                            ->get('tblseams_sourceincome_fishsalt_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishsalt_other WHERE id_fishsaltcostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsffMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsffMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishfreshcostmaterial): ?>
                <tr id="<?php echo $row->id_fishfreshcostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishfreshcostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->item_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->annualcost_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->unit_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_fishfreshcostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_fishfreshcostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishfreshcostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsffMaterial" data-id="<?php echo $row->id_fishfreshcostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishfreshcostmaterial;?>" value="<?php echo $row->id_demographic_fishfreshcostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsffMaterial($id = null)
    {
            $sql1 = $this->db->where('id_fishfreshcostmaterial',$id)
                                            ->get('tblseams_sourceincome_fishfresh_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishfresh_material WHERE id_fishfreshcostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsffEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsffEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishfreshcostequipment): ?>
                <tr id="<?php echo $row->id_fishfreshcostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishfreshcostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->item_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->annualcost_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->unit_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_fishfreshcostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_fishfreshcostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishfreshcostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsffEquipment" data-id="<?php echo $row->id_fishfreshcostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishfreshcostequipment;?>" value="<?php echo $row->id_demographic_fishfreshcostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsffEquipment($id = null)
    {
            $sql1 = $this->db->where('id_fishfreshcostequipment',$id)
                                            ->get('tblseams_sourceincome_fishfresh_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishfresh_equipment WHERE id_fishfreshcostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsffLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsffLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishfreshcostlabor): ?>
                <tr id="<?php echo $row->id_fishfreshcostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishfreshcostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->item_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->annualcost_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->unit_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_fishfreshcostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_fishfreshcostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishfreshcostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsffLabor" data-id="<?php echo $row->id_fishfreshcostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishfreshcostlabor;?>" value="<?php echo $row->id_demographic_fishfreshcostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsffLabor($id = null)
    {
            $sql1 = $this->db->where('id_fishfreshcostlabor',$id)
                                            ->get('tblseams_sourceincome_fishfresh_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishfresh_labor WHERE id_fishfreshcostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsffOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsffOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_fishfreshcostother): ?>
                <tr id="<?php echo $row->id_fishfreshcostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_fishfreshcostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_fishfreshcostother ?></td>
                    <td ><?php echo $row->item_fishfreshcostother ?></td>
                    <td ><?php echo $row->annualcost_fishfreshcostother ?></td>
                    <td ><?php echo $row->unit_fishfreshcostother ?></td>
                    <td ><?php echo $row->avgpriceunit_fishfreshcostother ?></td>
                    <td ><?php echo $row->noincurredyear_fishfreshcostother ?></td>
                    <td ><?php echo $row->costincurredstage_fishfreshcostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_fishfreshcostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsffOther" data-id="<?php echo $row->id_fishfreshcostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_fishfreshcostother;?>" value="<?php echo $row->id_demographic_fishfreshcostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsffOther($id = null)
    {
            $sql1 = $this->db->where('id_fishfreshcostother',$id)
                                            ->get('tblseams_sourceincome_fishfresh_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_fishfresh_other WHERE id_fishfreshcostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstpmMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstpmMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_tpmcostmaterial): ?>
                <tr id="<?php echo $row->id_tpmcostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_tpmcostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_tpmcostmaterial ?></td>
                    <td ><?php echo $row->item_tpmcostmaterial ?></td>
                    <td ><?php echo $row->annualcost_tpmcostmaterial ?></td>
                    <td ><?php echo $row->unit_tpmcostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_tpmcostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_tpmcostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_tpmcostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_tpmcostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstpmMaterial" data-id="<?php echo $row->id_tpmcostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_tpmcostmaterial;?>" value="<?php echo $row->id_demographic_tpmcostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstpmMaterial($id = null)
    {
            $sql1 = $this->db->where('id_tpmcostmaterial',$id)
                                            ->get('tblseams_sourceincome_tpm_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_tpm_material WHERE id_tpmcostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstpmEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstpmEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_tpmcostequipment): ?>
                <tr id="<?php echo $row->id_tpmcostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_tpmcostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_tpmcostequipment ?></td>
                    <td ><?php echo $row->item_tpmcostequipment ?></td>
                    <td ><?php echo $row->annualcost_tpmcostequipment ?></td>
                    <td ><?php echo $row->unit_tpmcostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_tpmcostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_tpmcostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_tpmcostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_tpmcostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstpmEquipment" data-id="<?php echo $row->id_tpmcostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_tpmcostequipment;?>" value="<?php echo $row->id_demographic_tpmcostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstpmEquipment($id = null)
    {
            $sql1 = $this->db->where('id_tpmcostequipment',$id)
                                            ->get('tblseams_sourceincome_tpm_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_tpm_equipment WHERE id_tpmcostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstpmLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstpmLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_tpmcostlabor): ?>
                <tr id="<?php echo $row->id_tpmcostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_tpmcostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_tpmcostlabor ?></td>
                    <td ><?php echo $row->item_tpmcostlabor ?></td>
                    <td ><?php echo $row->annualcost_tpmcostlabor ?></td>
                    <td ><?php echo $row->unit_tpmcostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_tpmcostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_tpmcostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_tpmcostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_tpmcostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstpmLabor" data-id="<?php echo $row->id_tpmcostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_tpmcostlabor;?>" value="<?php echo $row->id_demographic_tpmcostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstpmLabor($id = null)
    {
            $sql1 = $this->db->where('id_tpmcostlabor',$id)
                                            ->get('tblseams_sourceincome_tpm_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_tpm_labor WHERE id_tpmcostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstpmOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstpmOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_tpmcostother): ?>
                <tr id="<?php echo $row->id_tpmcostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_tpmcostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_tpmcostother ?></td>
                    <td ><?php echo $row->item_tpmcostother ?></td>
                    <td ><?php echo $row->annualcost_tpmcostother ?></td>
                    <td ><?php echo $row->unit_tpmcostother ?></td>
                    <td ><?php echo $row->avgpriceunit_tpmcostother ?></td>
                    <td ><?php echo $row->noincurredyear_tpmcostother ?></td>
                    <td ><?php echo $row->costincurredstage_tpmcostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_tpmcostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstpmOther" data-id="<?php echo $row->id_tpmcostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_tpmcostother;?>" value="<?php echo $row->id_demographic_tpmcostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstpmOther($id = null)
    {
            $sql1 = $this->db->where('id_tpmcostother',$id)
                                            ->get('tblseams_sourceincome_tpm_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_tpm_other WHERE id_tpmcostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function projreportFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallProjectreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeprojreport" data-id="'.$row->idproject_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/project_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function projreportFileQueryEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallProjectreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeprojreportedit" data-id="'.$row->idproject_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/project_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function QueryEditModalResearchPAMBReso()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchModalPAMBResoEditEdit($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalsEditPAMBReso" data-id="'.$row->idresearch_pambreso.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/pdf_file_resolution/'.$row->file_nameReso.'">'.$row->file_nameReso.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function QueryEditModalResearchFileEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalresearchreportEdit" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function projreportFileQueryEdit2()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallProjectreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeprojreportedit2" data-id="'.$row->idproject_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/project_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function researchReportFileQueryEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeresearchreportEdit" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function researchPamBTransmitalFileQueryEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getalltransmitalFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removerepambtransmitalreport" data-id="'.$row->id_pamb_transmital.'">-</button>'.'Dated : '.$row->month.' '.$row->year.'<br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamb_transmittal_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function pambResoMinutesFileEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResoMinutesFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removerepambminutesreportEdit" data-id="'.$row->id_reso_minutes.'">-</button>'.'Dated : '.$row->month.' '.$row->day_minutes.' '.$row->year.'<br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamb_reso_minutes_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function pambResoMinutesFile()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResoMinutesFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removerepambminutesreport" data-id="'.$row->id_reso_minutes.'">-</button>'.'Dated : '.$row->month.' '.$row->year.'<br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamb_reso_minutes_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function researchreportFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeresearchreport" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function pambTransmitalFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getalltransmitalFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removerepambtransmitalreport" data-id="'.$row->id_pamb_transmital.'">-</button>'.'Dated : '.$row->month.' '.$row->year.'<br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamb_transmittal_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function researchreportPAMBResoFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportPAMBResoFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeresearchPAMBResoFilereport" data-id="'.$row->idresearch_pambreso.'">-</button>
           <label>Resolution No.: </label>'.$row->pambreso_no.'<br>
           <label>Resolution Title : </label>'.$row->pambreso_title.'<br>
           <a href="'.base_url().'bmb_assets2/upload/pdf_file_resolution/'.$row->file_nameReso.'">'.$row->file_nameReso.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function ModalresearchreportFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalresearchreport" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function ModalresearchreportFileQueryEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalresearchreportEdit" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function ModalresearchPAMBResoAdd()
    {

        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchModalPAMBResoAdd($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalresearchPAMBResoAdd" data-id="'.$row->idresearch_pambreso.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/pdf_file_resolution/'.$row->file_nameReso.'">'.$row->file_nameReso.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function ModalresearchPAMBResoEdited()
    {

        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchModalPAMBResoAdd($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeModalresearchPAMBResoEdit" data-id="'.$row->idresearch_pambreso.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/pdf_file_resolution/'.$row->file_nameReso.'">'.$row->file_nameReso.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function ModalresearchreportFileQuerys()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallResearchreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeresearchreport" data-id="'.$row->idresearch_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/research_file_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function projreportFileQueryAddProg()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallProjectreportFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeprojreportaddProg" data-id="'.$row->idproject_file.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/project_report/'.$row->file_name.'">'.$row->file_name.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function fetchSeamsagriMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsagriMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_agricostmaterial): ?>
                <tr id="<?php echo $row->id_agricostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_agricostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_agricostmaterial ?></td>
                    <td ><?php echo $row->item_agricostmaterial ?></td>
                    <td ><?php echo $row->annualcost_agricostmaterial ?></td>
                    <td ><?php echo $row->unit_agricostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_agricostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_agricostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_agricostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_agricostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsagriMaterial" data-id="<?php echo $row->id_agricostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_agricostmaterial;?>" value="<?php echo $row->id_demographic_agricostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsagriMaterial($id = null)
    {
            $sql1 = $this->db->where('id_agricostmaterial',$id)
                                            ->get('tblseams_sourceincome_agri_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_agri_material WHERE id_agricostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsagriEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsagriEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_agricostequipment): ?>
                <tr id="<?php echo $row->id_agricostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_agricostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_agricostequipment ?></td>
                    <td ><?php echo $row->item_agricostequipment ?></td>
                    <td ><?php echo $row->annualcost_agricostequipment ?></td>
                    <td ><?php echo $row->unit_agricostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_agricostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_agricostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_agricostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_agricostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsagriEquipment" data-id="<?php echo $row->id_agricostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_agricostequipment;?>" value="<?php echo $row->id_demographic_agricostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsagriEquipment($id = null)
    {
            $sql1 = $this->db->where('id_agricostequipment',$id)
                                            ->get('tblseams_sourceincome_agri_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_agri_equipment WHERE id_agricostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsagriLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsagriLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_agricostlabor): ?>
                <tr id="<?php echo $row->id_agricostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_agricostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_agricostlabor ?></td>
                    <td ><?php echo $row->item_agricostlabor ?></td>
                    <td ><?php echo $row->annualcost_agricostlabor ?></td>
                    <td ><?php echo $row->unit_agricostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_agricostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_agricostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_agricostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_agricostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsagriLabor" data-id="<?php echo $row->id_agricostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_agricostlabor;?>" value="<?php echo $row->id_demographic_agricostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsagriLabor($id = null)
    {
            $sql1 = $this->db->where('id_agricostlabor',$id)
                                            ->get('tblseams_sourceincome_agri_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_agri_labor WHERE id_agricostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsagriOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsagriOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_agricostother): ?>
                <tr id="<?php echo $row->id_agricostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_agricostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_agricostother ?></td>
                    <td ><?php echo $row->item_agricostother ?></td>
                    <td ><?php echo $row->annualcost_agricostother ?></td>
                    <td ><?php echo $row->unit_agricostother ?></td>
                    <td ><?php echo $row->avgpriceunit_agricostother ?></td>
                    <td ><?php echo $row->noincurredyear_agricostother ?></td>
                    <td ><?php echo $row->costincurredstage_agricostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_agricostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsagriOther" data-id="<?php echo $row->id_agricostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_agricostother;?>" value="<?php echo $row->id_demographic_agricostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsagriOther($id = null)
    {
            $sql1 = $this->db->where('id_agricostother',$id)
                                            ->get('tblseams_sourceincome_agri_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_agri_other WHERE id_agricostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamslivestockMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamslivestockMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_livestockcostmaterial): ?>
                <tr id="<?php echo $row->id_livestockcostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_livestockcostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_livestockcostmaterial ?></td>
                    <td ><?php echo $row->item_livestockcostmaterial ?></td>
                    <td ><?php echo $row->annualcost_livestockcostmaterial ?></td>
                    <td ><?php echo $row->unit_livestockcostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_livestockcostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_livestockcostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_livestockcostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_livestockcostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamslivestockMaterial" data-id="<?php echo $row->id_livestockcostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_livestockcostmaterial;?>" value="<?php echo $row->id_demographic_livestockcostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamslivestockMaterial($id = null)
    {
            $sql1 = $this->db->where('id_livestockcostmaterial',$id)
                                            ->get('tblseams_sourceincome_livestock_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_livestock_material WHERE id_livestockcostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamslivestockEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamslivestockEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_livestockcostequipment): ?>
                <tr id="<?php echo $row->id_livestockcostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_livestockcostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_livestockcostequipment ?></td>
                    <td ><?php echo $row->item_livestockcostequipment ?></td>
                    <td ><?php echo $row->annualcost_livestockcostequipment ?></td>
                    <td ><?php echo $row->unit_livestockcostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_livestockcostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_livestockcostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_livestockcostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_livestockcostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamslivestockEquipment" data-id="<?php echo $row->id_livestockcostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_livestockcostequipment;?>" value="<?php echo $row->id_demographic_livestockcostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamslivestockEquipment($id = null)
    {
            $sql1 = $this->db->where('id_livestockcostequipment',$id)
                                            ->get('tblseams_sourceincome_livestock_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_livestock_equipment WHERE id_livestockcostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamslivestockLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamslivestockLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_livestockcostlabor): ?>
                <tr id="<?php echo $row->id_livestockcostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_livestockcostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_livestockcostlabor ?></td>
                    <td ><?php echo $row->item_livestockcostlabor ?></td>
                    <td ><?php echo $row->annualcost_livestockcostlabor ?></td>
                    <td ><?php echo $row->unit_livestockcostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_livestockcostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_livestockcostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_livestockcostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_livestockcostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamslivestockLabor" data-id="<?php echo $row->id_livestockcostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_livestockcostlabor;?>" value="<?php echo $row->id_demographic_livestockcostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamslivestockLabor($id = null)
    {
            $sql1 = $this->db->where('id_livestockcostlabor',$id)
                                            ->get('tblseams_sourceincome_livestock_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_livestock_labor WHERE id_livestockcostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamslivestockOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamslivestockOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_livestockcostother): ?>
                <tr id="<?php echo $row->id_livestockcostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_livestockcostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_livestockcostother ?></td>
                    <td ><?php echo $row->item_livestockcostother ?></td>
                    <td ><?php echo $row->annualcost_livestockcostother ?></td>
                    <td ><?php echo $row->unit_livestockcostother ?></td>
                    <td ><?php echo $row->avgpriceunit_livestockcostother ?></td>
                    <td ><?php echo $row->noincurredyear_livestockcostother ?></td>
                    <td ><?php echo $row->costincurredstage_livestockcostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_livestockcostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamslivestockOther" data-id="<?php echo $row->id_livestockcostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_livestockcostother;?>" value="<?php echo $row->id_demographic_livestockcostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamslivestockOther($id = null)
    {
            $sql1 = $this->db->where('id_livestockcostother',$id)
                                            ->get('tblseams_sourceincome_livestock_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_livestock_other WHERE id_livestockcostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsnontimberMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsnontimberMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_nontimbercostmaterial): ?>
                <tr id="<?php echo $row->id_nontimbercostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_nontimbercostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->item_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->annualcost_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->unit_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_nontimbercostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_nontimbercostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_nontimbercostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsnontimberMaterial" data-id="<?php echo $row->id_nontimbercostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_nontimbercostmaterial;?>" value="<?php echo $row->id_demographic_nontimbercostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsnontimberMaterial($id = null)
    {
            $sql1 = $this->db->where('id_nontimbercostmaterial',$id)
                                            ->get('tblseams_sourceincome_nontimber_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_nontimber_material WHERE id_nontimbercostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsnontimberEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsnontimberEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_nontimbercostequipment): ?>
                <tr id="<?php echo $row->id_nontimbercostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_nontimbercostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_nontimbercostequipment ?></td>
                    <td ><?php echo $row->item_nontimbercostequipment ?></td>
                    <td ><?php echo $row->annualcost_nontimbercostequipment ?></td>
                    <td ><?php echo $row->unit_nontimbercostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_nontimbercostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_nontimbercostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_nontimbercostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_nontimbercostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsnontimberEquipment" data-id="<?php echo $row->id_nontimbercostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_nontimbercostequipment;?>" value="<?php echo $row->id_demographic_nontimbercostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsnontimberEquipment($id = null)
    {
            $sql1 = $this->db->where('id_nontimbercostequipment',$id)
                                            ->get('tblseams_sourceincome_nontimber_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_nontimber_equipment WHERE id_nontimbercostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsnontimberLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsnontimberLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_nontimbercostlabor): ?>
                <tr id="<?php echo $row->id_nontimbercostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_nontimbercostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_nontimbercostlabor ?></td>
                    <td ><?php echo $row->item_nontimbercostlabor ?></td>
                    <td ><?php echo $row->annualcost_nontimbercostlabor ?></td>
                    <td ><?php echo $row->unit_nontimbercostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_nontimbercostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_nontimbercostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_nontimbercostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_nontimbercostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsnontimberLabor" data-id="<?php echo $row->id_nontimbercostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_nontimbercostlabor;?>" value="<?php echo $row->id_demographic_nontimbercostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsnontimberLabor($id = null)
    {
            $sql1 = $this->db->where('id_nontimbercostlabor',$id)
                                            ->get('tblseams_sourceincome_nontimber_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_nontimber_labor WHERE id_nontimbercostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsnontimberOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsnontimberOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_nontimbercostother): ?>
                <tr id="<?php echo $row->id_nontimbercostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_nontimbercostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_nontimbercostother ?></td>
                    <td ><?php echo $row->item_nontimbercostother ?></td>
                    <td ><?php echo $row->annualcost_nontimbercostother ?></td>
                    <td ><?php echo $row->unit_nontimbercostother ?></td>
                    <td ><?php echo $row->avgpriceunit_nontimbercostother ?></td>
                    <td ><?php echo $row->noincurredyear_nontimbercostother ?></td>
                    <td ><?php echo $row->costincurredstage_nontimbercostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_nontimbercostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsnontimberOther" data-id="<?php echo $row->id_nontimbercostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_nontimbercostother;?>" value="<?php echo $row->id_demographic_nontimbercostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsnontimberOther($id = null)
    {
            $sql1 = $this->db->where('id_nontimbercostother',$id)
                                            ->get('tblseams_sourceincome_nontimber_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_nontimber_other WHERE id_nontimbercostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstimberMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstimberMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_timbercostmaterial): ?>
                <tr id="<?php echo $row->id_timbercostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_timbercostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_timbercostmaterial ?></td>
                    <td ><?php echo $row->item_timbercostmaterial ?></td>
                    <td ><?php echo $row->annualcost_timbercostmaterial ?></td>
                    <td ><?php echo $row->unit_timbercostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_timbercostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_timbercostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_timbercostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_timbercostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstimberMaterial" data-id="<?php echo $row->id_timbercostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_timbercostmaterial;?>" value="<?php echo $row->id_demographic_timbercostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstimberMaterial($id = null)
    {
            $sql1 = $this->db->where('id_timbercostmaterial',$id)
                                            ->get('tblseams_sourceincome_timber_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_timber_material WHERE id_timbercostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstimberEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstimberEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_timbercostequipment): ?>
                <tr id="<?php echo $row->id_timbercostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_timbercostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_timbercostequipment ?></td>
                    <td ><?php echo $row->item_timbercostequipment ?></td>
                    <td ><?php echo $row->annualcost_timbercostequipment ?></td>
                    <td ><?php echo $row->unit_timbercostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_timbercostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_timbercostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_timbercostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_timbercostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstimberEquipment" data-id="<?php echo $row->id_timbercostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_timbercostequipment;?>" value="<?php echo $row->id_demographic_timbercostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstimberEquipment($id = null)
    {
            $sql1 = $this->db->where('id_timbercostequipment',$id)
                                            ->get('tblseams_sourceincome_timber_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_timber_equipment WHERE id_timbercostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstimberLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstimberLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_timbercostlabor): ?>
                <tr id="<?php echo $row->id_timbercostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_timbercostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_timbercostlabor ?></td>
                    <td ><?php echo $row->item_timbercostlabor ?></td>
                    <td ><?php echo $row->annualcost_timbercostlabor ?></td>
                    <td ><?php echo $row->unit_timbercostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_timbercostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_timbercostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_timbercostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_timbercostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstimberLabor" data-id="<?php echo $row->id_timbercostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_timbercostlabor;?>" value="<?php echo $row->id_demographic_timbercostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstimberLabor($id = null)
    {
            $sql1 = $this->db->where('id_timbercostlabor',$id)
                                            ->get('tblseams_sourceincome_timber_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_timber_labor WHERE id_timbercostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamstimberOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamstimberOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_timbercostother): ?>
                <tr id="<?php echo $row->id_timbercostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_timbercostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_timbercostother ?></td>
                    <td ><?php echo $row->item_timbercostother ?></td>
                    <td ><?php echo $row->annualcost_timbercostother ?></td>
                    <td ><?php echo $row->unit_timbercostother ?></td>
                    <td ><?php echo $row->avgpriceunit_timbercostother ?></td>
                    <td ><?php echo $row->noincurredyear_timbercostother ?></td>
                    <td ><?php echo $row->costincurredstage_timbercostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_timbercostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamstimberOther" data-id="<?php echo $row->id_timbercostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_timbercostother;?>" value="<?php echo $row->id_demographic_timbercostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamstimberOther($id = null)
    {
            $sql1 = $this->db->where('id_timbercostother',$id)
                                            ->get('tblseams_sourceincome_timber_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_timber_other WHERE id_timbercostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function fetchSeamswildlifeMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamswildlifeMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_wildlifecostmaterial): ?>
                <tr id="<?php echo $row->id_wildlifecostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_wildlifecostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->item_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->annualcost_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->unit_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_wildlifecostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_wildlifecostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_wildlifecostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamswildlifeMaterial" data-id="<?php echo $row->id_wildlifecostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_wildlifecostmaterial;?>" value="<?php echo $row->id_demographic_wildlifecostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamswildlifeMaterial($id = null)
    {
            $sql1 = $this->db->where('id_wildlifecostmaterial',$id)
                                            ->get('tblseams_sourceincome_wildlife_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_wildlife_material WHERE id_wildlifecostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamswildlifeEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamswildlifeEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_wildlifecostequipment): ?>
                <tr id="<?php echo $row->id_wildlifecostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_wildlifecostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_wildlifecostequipment ?></td>
                    <td ><?php echo $row->item_wildlifecostequipment ?></td>
                    <td ><?php echo $row->annualcost_wildlifecostequipment ?></td>
                    <td ><?php echo $row->unit_wildlifecostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_wildlifecostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_wildlifecostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_wildlifecostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_wildlifecostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamswildlifeEquipment" data-id="<?php echo $row->id_wildlifecostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_wildlifecostequipment;?>" value="<?php echo $row->id_demographic_wildlifecostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamswildlifeEquipment($id = null)
    {
            $sql1 = $this->db->where('id_wildlifecostequipment',$id)
                                            ->get('tblseams_sourceincome_wildlife_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_wildlife_equipment WHERE id_wildlifecostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamswildlifeLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamswildlifeLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_wildlifecostlabor): ?>
                <tr id="<?php echo $row->id_wildlifecostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_wildlifecostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_wildlifecostlabor ?></td>
                    <td ><?php echo $row->item_wildlifecostlabor ?></td>
                    <td ><?php echo $row->annualcost_wildlifecostlabor ?></td>
                    <td ><?php echo $row->unit_wildlifecostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_wildlifecostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_wildlifecostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_wildlifecostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_wildlifecostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamswildlifeLabor" data-id="<?php echo $row->id_wildlifecostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_wildlifecostlabor;?>" value="<?php echo $row->id_demographic_wildlifecostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamswildlifeLabor($id = null)
    {
            $sql1 = $this->db->where('id_wildlifecostlabor',$id)
                                            ->get('tblseams_sourceincome_wildlife_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_wildlife_labor WHERE id_wildlifecostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamswildlifeOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamswildlifeOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_wildlifecostother): ?>
                <tr id="<?php echo $row->id_wildlifecostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_wildlifecostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_wildlifecostother ?></td>
                    <td ><?php echo $row->item_wildlifecostother ?></td>
                    <td ><?php echo $row->annualcost_wildlifecostother ?></td>
                    <td ><?php echo $row->unit_wildlifecostother ?></td>
                    <td ><?php echo $row->avgpriceunit_wildlifecostother ?></td>
                    <td ><?php echo $row->noincurredyear_wildlifecostother ?></td>
                    <td ><?php echo $row->costincurredstage_wildlifecostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_wildlifecostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamswildlifeOther" data-id="<?php echo $row->id_wildlifecostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_wildlifecostother;?>" value="<?php echo $row->id_demographic_wildlifecostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamswildlifeOther($id = null)
    {
            $sql1 = $this->db->where('id_wildlifecostother',$id)
                                            ->get('tblseams_sourceincome_wildlife_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_wildlife_other WHERE id_wildlifecostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsminingMaterial(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsminingMaterial($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_miningcostmaterial): ?>
                <tr id="<?php echo $row->id_miningcostmaterial; ?>" class="trow">
                    <td><?php echo "(".$row->id_miningcostmaterial    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_miningcostmaterial ?></td>
                    <td ><?php echo $row->item_miningcostmaterial ?></td>
                    <td ><?php echo $row->annualcost_miningcostmaterial ?></td>
                    <td ><?php echo $row->unit_miningcostmaterial ?></td>
                    <td ><?php echo $row->avgpriceunit_miningcostmaterial ?></td>
                    <td ><?php echo $row->noincurredyear_miningcostmaterial ?></td>
                    <td ><?php echo $row->costincurredstage_miningcostmaterial ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_miningcostmaterial;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsminingMaterial" data-id="<?php echo $row->id_miningcostmaterial ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_miningcostmaterial;?>" value="<?php echo $row->id_demographic_miningcostmaterial ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsminingMaterial($id = null)
    {
            $sql1 = $this->db->where('id_miningcostmaterial',$id)
                                            ->get('tblseams_sourceincome_mining_material')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_mining_material WHERE id_miningcostmaterial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsminingEquipment(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsminingEquipment($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_miningcostequipment): ?>
                <tr id="<?php echo $row->id_miningcostequipment; ?>" class="trow">
                    <td><?php echo "(".$row->id_miningcostequipment    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_miningcostequipment ?></td>
                    <td ><?php echo $row->item_miningcostequipment ?></td>
                    <td ><?php echo $row->annualcost_miningcostequipment ?></td>
                    <td ><?php echo $row->unit_miningcostequipment ?></td>
                    <td ><?php echo $row->avgpriceunit_miningcostequipment ?></td>
                    <td ><?php echo $row->noincurredyear_miningcostequipment ?></td>
                    <td ><?php echo $row->costincurredstage_miningcostequipment ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_miningcostequipment;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsminingEquipment" data-id="<?php echo $row->id_miningcostequipment ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_miningcostequipment;?>" value="<?php echo $row->id_demographic_miningcostequipment ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsminingEquipment($id = null)
    {
            $sql1 = $this->db->where('id_miningcostequipment',$id)
                                            ->get('tblseams_sourceincome_mining_equipment')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_mining_equipment WHERE id_miningcostequipment = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsminingLabor(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsminingLabor($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_miningcostlabor): ?>
                <tr id="<?php echo $row->id_miningcostlabor; ?>" class="trow">
                    <td><?php echo "(".$row->id_miningcostlabor    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_miningcostlabor ?></td>
                    <td ><?php echo $row->item_miningcostlabor ?></td>
                    <td ><?php echo $row->annualcost_miningcostlabor ?></td>
                    <td ><?php echo $row->unit_miningcostlabor ?></td>
                    <td ><?php echo $row->avgpriceunit_miningcostlabor ?></td>
                    <td ><?php echo $row->noincurredyear_miningcostlabor ?></td>
                    <td ><?php echo $row->costincurredstage_miningcostlabor ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_miningcostlabor;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsminingLabor" data-id="<?php echo $row->id_miningcostlabor ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_miningcostlabor;?>" value="<?php echo $row->id_demographic_miningcostlabor ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsminingLabor($id = null)
    {
            $sql1 = $this->db->where('id_miningcostlabor',$id)
                                            ->get('tblseams_sourceincome_mining_labor')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_mining_labor WHERE id_miningcostlabor = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsminingOther(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsminingOther($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="7" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_miningcostother): ?>
                <tr id="<?php echo $row->id_miningcostother; ?>" class="trow">
                    <td><?php echo "(".$row->id_miningcostother    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_miningcostother ?></td>
                    <td ><?php echo $row->item_miningcostother ?></td>
                    <td ><?php echo $row->annualcost_miningcostother ?></td>
                    <td ><?php echo $row->unit_miningcostother ?></td>
                    <td ><?php echo $row->avgpriceunit_miningcostother ?></td>
                    <td ><?php echo $row->noincurredyear_miningcostother ?></td>
                    <td ><?php echo $row->costincurredstage_miningcostother ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_miningcostother;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsminingOther" data-id="<?php echo $row->id_miningcostother ?>" title="Remove">Remove</button>
                    </td>
                    <input type="" id="cmsd<?php echo $row->id_miningcostother;?>" value="<?php echo $row->id_demographic_miningcostother ?>" />

                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsminingOther($id = null)
    {
            $sql1 = $this->db->where('id_miningcostother',$id)
                                            ->get('tblseams_sourceincome_mining_other')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_mining_other WHERE id_miningcostother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamsindustrycost(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsindustrycost($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="4" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_industry): ?>
                <tr id="<?php echo $row->id_costindustry; ?>" class="trow">
                    <td><?php echo "(".$row->id_costindustry    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_industry ?></td>
                    <td ><?php echo $row->total_amount_industry ?></td>
                    <td ><?php echo $row->no_time_industry ?></td>
                    <td ><?php echo $row->remarks_industry ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_costindustry;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsindustrycost" data-id="<?php echo $row->id_costindustry ?>" title="Remove">Remove</button>
                    </td>
                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsIndustrycost($id = null)
    {
            $sql1 = $this->db->where('id_costindustry',$id)
                                            ->get('tblseams_sourceincome_industry_cost')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_industry_cost WHERE id_costindustry = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchSeamssbindustrycost(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamssbindustrycost($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="4" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_servicebased): ?>
                <tr id="<?php echo $row->id_costservicebased; ?>" class="trow">
                    <td><?php echo "(".$row->id_costservicebased    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_servicebased ?></td>
                    <td ><?php echo $row->total_amount_servicebased ?></td>
                    <td ><?php echo $row->no_time_servicebased ?></td>
                    <td ><?php echo $row->remarks_servicebased ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_costservicebased;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamssbindustrycost" data-id="<?php echo $row->id_costservicebased ?>" title="Remove">Remove</button>
                    </td>
                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamssbindustrycost($id = null)
    {
            $sql1 = $this->db->where('id_costservicebased',$id)
                                            ->get('tblseams_sourceincome_servicebased_cost')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_servicebased_cost WHERE id_costservicebased = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletedisbursements($id = null)
    {
            $sql1 = $this->db->where('id_disburementsec',$id)
                                            ->get('tblpaipafdisbursementfiles')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpaipafdisbursementfiles WHERE id_disburementsec = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }
    public function fetchSeamsothersourcecost(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllSeamsothersourcecost($codegens);
        $dataGroup = $this->pamain_model->getAllSeamsFishFreshGroup($codegens);
        foreach($dataGroup as $rowGroup){

            ?>
            <tr>
                <th style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $rowGroup->name_household_head; ?></th>
                <th colspan="4" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
            </tr>

            <?php  foreach($data as $row){ ?>
            <?php if ($rowGroup->id_seams_demo == $row->id_demographic_othersource): ?>
                <tr id="<?php echo $row->id_costothersource; ?>" class="trow">
                    <td><?php echo "(".$row->id_costothersource    .") ".$row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->name_household_head; ?></td>
                    <td class="hide"><?php echo $row->id_demographic_othersource ?></td>
                    <td ><?php echo $row->total_amount_othersource ?></td>
                    <td ><?php echo $row->no_time_othersource ?></td>
                    <td ><?php echo $row->remarks_othersource ?></td>
                    <td>
                        <!-- <button type="button" value="<?php echo $row->id_costothersource;?>" class="btn btn-info btn-edit-reference" onclick="edit_seamssource(this)">
                        Edit </button> -->
                        <button type="button" class="btn btn-danger btn-flat removeSeamsothersourcecost" data-id="<?php echo $row->id_costothersource ?>" title="Remove">Remove</button>
                    </td>
                </tr>
            <?php endif ?>


            <?php
            }
        }
    }

    public function deleteSeamsothersourcecost($id = null)
    {
            $sql1 = $this->db->where('id_costothersource',$id)
                                            ->get('tblseams_sourceincome_othersource_cost')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblseams_sourceincome_othersource_cost WHERE id_costothersource = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function insertIncomeGenerated()
{
        if(!empty($_FILES['proofdeposit']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/certificateofreceiptipaf';
            $config['file_name'] = $_FILES['proofdeposit']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg|pdf';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('proofdeposit')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        if(!empty($_FILES['bankdeposit']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/ipaf_bank_certificate';
            $config['file_name'] = $_FILES['bankdeposit']['name'];
            $config['allowed_types'] = 'gif|jpg|png|jpeg|pdf';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('bankdeposit')){
                $uploadData2 = $this->upload->data();
                $filenames2 = $uploadData2['file_name'];
            }
        }
        $now = date('Y-m-d');
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'date_month_income' => $this->input->post('month_monitoring',true),
            'date_year_income' => $this->input->post('year_monitoring',true),
            'date_day_income' => $this->input->post('day_monitoring',true),
            'entrancefee' => str_replace(',','',$this->input->post('entrancefee',true)),
            'facilities' => str_replace(',','',$this->input->post('income_facilities')),
            'resource' => str_replace(',','',$this->input->post('resource')),
            'concession' => str_replace(',','',$this->input->post('concession')),
            'certificate_receipt' => (!empty($filenames)?$filenames:""),
            'bank_deposit_file' => (!empty($filenames2)?$filenames2:""),
            'date_uploaded' => date('Y-m-d')
        ];
                $query = $this->pamain_model->createIncomeGenerated($postData);

                    // if(!empty($this->input->post('disburse_amount')) || !empty($this->input->post('disburse_amount'))){
                    //     foreach($this->input->post('disburse_remarks') as $ccnt => $ctr)
                    //     {
                    //         $aalsa = array(
                    //                     'id_fromincome' => $query,
                    //                     'disbursement_month' => $this->input->post('month_monitoring',true),
                    //                     'disbursement_day' => $this->input->post('day_monitoring',true),
                    //                     'disbursement_year' => $this->input->post('year_monitoring',true),
                    //                     'disbursement_amount' => str_replace(',','',$this->input->post('disburse_amount'))[$ccnt],
                    //                     'disbursement_remarks' => $this->input->post('disburse_remarks')[$ccnt],
                    //                     'generatedcode' => $this->input->post('gencode',true),
                    //                 );
                    //         $this->pamain_model->add_subIncomeDisbursement($aalsa);
                    //     }
                    // }else{
                    //     $aalsa = array(
                    //                     'id_fromincome' => $query,
                    //                     'disbursement_month' => $this->input->post('month_monitoring',true),
                    //                     'disbursement_day' => $this->input->post('day_monitoring',true),
                    //                     'disbursement_year' => $this->input->post('year_monitoring',true),
                    //                     'disbursement_amount' => (!empty($this->input->post('disburse_amount'))?str_replace(',','',$this->input->post('disburse_amount')):0),
                    //                     'disbursement_remarks' => (!empty($this->input->post('disburse_remarks'))?$this->input->post('disburse_remarks'):''),
                    //                     'generatedcode' => $this->input->post('gencode',true),
                    //                 );
                    //         $this->pamain_model->add_subIncomeDisbursement($aalsa);
                    // }

                    if(!empty($this->input->post('others_income')) || !empty($this->input->post('others_amount'))){
                        foreach($this->input->post('others_income') as $ccntaa => $ctr)
                        {
                            $aal = array(
                                        'id_fromincome' => $query,
                                        'income_month' => $this->input->post('month_monitoring',true),
                                        'income_day' => $this->input->post('day_monitoring',true),
                                        'income_year' => $this->input->post('year_monitoring',true),
                                        'other_title' => $this->input->post('others_income')[$ccntaa],
                                        'other_amount' => str_replace(',','',$this->input->post('others_amount'))[$ccntaa],
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subIncomeGeneratedOthers($aal);
                        }
                    }else{
                        $aal = array(
                                        'id_fromincome' => $query,
                                        'income_month' => $this->input->post('month_monitoring',true),
                                        'income_day' => $this->input->post('day_monitoring',true),
                                        'income_year' => $this->input->post('year_monitoring',true),
                                        'other_title' => (!empty($this->input->post('others_income'))?$this->input->post('others_income'):''),
                                        'other_amount' => (!empty($this->input->post('others_amount'))?str_replace(',','',$this->input->post('others_amount')):0),
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subIncomeGeneratedOthers($aal);
                    }

                    if(!empty($this->input->post('financial_amount')) || !empty($this->input->post('financial_details'))){
                        foreach($this->input->post('contribution') as $ccnt1 => $ctr)
                        {
                            $asl = array(
                                        'id_fromincome' => $query,
                                        'month_contri' => $this->input->post('month_monitoring',true),
                                        'day_contri' => $this->input->post('day_monitoring',true),
                                        'year_contri' => $this->input->post('year_monitoring',true),
                                        'trustfund' => $this->input->post('contribution')[$ccnt1],
                                        'mode_payment' => $this->input->post('mode_donation')[$ccnt1],
                                        'contri_amount' => str_replace(',','',$this->input->post('financial_amount'))[$ccnt1],
                                        'contri_remarks' => $this->input->post('financial_details')[$ccnt1],
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subcontri($asl);
                        }
                    }else{
                            $asl = array(
                                        'id_fromincome' => $query,
                                        'month_contri' => $this->input->post('month_monitoring',true),
                                        'day_contri' => $this->input->post('day_monitoring',true),
                                        'year_contri' => $this->input->post('year_monitoring',true),

                                        'contri_amount' => (!empty($this->input->post('financial_amount'))?str_replace(',','',$this->input->post('financial_amount')):0),
                                        'contri_remarks' => (!empty($this->input->post('financial_details'))?$this->input->post('financial_details'):''),
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subcontri($asl);
                    }

                    if(!empty($this->input->post('developments_fee')) || !empty($this->input->post('dev_remarks'))){
                        foreach($this->input->post('gencode') as $ccnt2 => $ctr)
                        {
                            $abl = array(
                                        'id_fromincome' => $query,
                                        'dev_month' => $this->input->post('month_monitoring',true),
                                        'dev_year' => $this->input->post('year_monitoring',true),
                                        'dev_day' =>  $this->input->post('day_monitoring',true),
                                        'devfee_amount' => str_replace(',','',$this->input->post('developments_fee'))[$ccnt2],
                                        'dev_remarks' => $this->input->post('dev_remarks')[$ccnt2],
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subdev($abl);
                        }
                    }else{
                            $abl = array(
                                        'id_fromincome' => $query,
                                        'dev_month' => $this->input->post('month_monitoring',true),
                                        'dev_year' => $this->input->post('year_monitoring',true),
                                        'dev_day' =>  $this->input->post('day_monitoring',true),
                                        'devfee_amount' => (!empty($this->input->post('developments_fee'))?str_replace(',','',$this->input->post('developments_fee')):0),
                                        'dev_remarks' => (!empty($this->input->post('dev_remarks'))?$this->input->post('dev_remarks'):''),
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subdev($abl);
                    }

                    if(!empty($this->input->post('finespenalty')) || !empty($this->input->post('penalty_remarks'))){
                        foreach($this->input->post('finespenalty') as $ccnt3 => $ctr)
                        {
                            $acl = array(
                                        'id_fromincome' => $query,
                                        'penalty_month' => $this->input->post('month_monitoring',true),
                                        'penalty_day' => $this->input->post('day_monitoring',true),
                                        'penalty_year' => $this->input->post('year_monitoring',true),
                                        'penalty_amount' => str_replace(',','',$this->input->post('finespenalty'))[$ccnt3],
                                        'penalty_remarks' => $this->input->post('penalty_remarks')[$ccnt3],
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subfine($acl);
                        }
                    }else{
                            $acl = array(
                                        'id_fromincome' => $query,
                                        'penalty_month' => $this->input->post('month_monitoring',true),
                                        'penalty_day' => $this->input->post('day_monitoring',true),
                                        'penalty_year' => $this->input->post('year_monitoring',true),
                                        'penalty_amount' => (!empty($this->input->post('finespenalty'))?str_replace(',','',$this->input->post('finespenalty')):0),
                                        'penalty_remarks' => (!empty($this->input->post('penalty_remarks'))?$this->input->post('penalty_remarks'):''),
                                        'generatedcode' => $this->input->post('gencode',true),
                                    );
                            $this->pamain_model->add_subfine($acl);
                    }
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new income in this day!';
                }else{

                }
        echo json_encode($output);
}

public function insertPAVisitors1()
{
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'date_month' => $this->input->post('month_monitoring',true),
            'date_year' => $this->input->post('year_monitoring',true),
            'date_day_income' => $this->input->post('day_monitoring',true),
            'no_male_local' => $this->input->post('no_male_local'),
            'no_female_local' => $this->input->post('no_female_local'),
            'no_male_foreign' => $this->input->post('no_male_foreign'),
            'no_female_foreign' => $this->input->post('no_female_foreign'),
            'no_male_local_student' => $this->input->post('no_male_local_student'),
            'no_female_local_student' => $this->input->post('no_female_local_student'),
            'no_male_local_pwd' => $this->input->post('no_male_local_pwd'),
            'no_female_local_pwd' => $this->input->post('no_female_local_pwd'),
            'no_male_local_sc' => $this->input->post('no_male_local_sc'),
            'no_female_local_sc' => $this->input->post('no_female_local_sc'),
            'no_male_local_children' => $this->input->post('no_male_local_children'),
            'no_female_local_children' => $this->input->post('no_female_local_children'),
            'date_created' => date('Y-m-d'),
        ];
                $query = $this->pamain_model->createPAVisitorss($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'New Visitor registered successfully';
                }else{

                }
        echo json_encode($output);
}

public function insertTrustGenerated()
    {
        $output = array();
        $data['TrustGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'trust_month' => $this->input->post('month_monitoring',true),
            'trust_year' => $this->input->post('year_monitoring',true),
            'trust_day' => $this->input->post('day_monitoring',true),
        ];
        $query = $this->pamain_model->createTrustGenerated($postData);
            if(!empty($this->input->post('contribution')) || !empty($this->input->post('others_amount'))){
                foreach($this->input->post('mode_donation') as $ccnt => $ctr)
                {
                    $asl = array(
                                'id_fromcontri' => $query,
                                'month_contri' => $this->input->post('month_monitoring',true),
                                'day_contri' => $this->input->post('day_monitoring',true),
                                'year_contri' => $this->input->post('year_monitoring',true),
                                'trustfund' => $this->input->post('contribution')[$ccnt],
                                'mode_payment' => $this->input->post('mode_donation')[$ccnt],
                                'contri_amount' => $this->input->post('financial_amount')[$ccnt],
                                'contri_remarks' => $this->input->post('financial_details')[$ccnt],
                                'generatedcode' => $this->input->post('gencode',true),
                            );
                    $this->pamain_model->add_subcontri($asl);
                }
            }
            if(!empty($this->input->post('developments')) || !empty($this->input->post('dev_remarks'))){
                foreach($this->input->post('developments') as $ccnt => $ctr)
                {
                    $abl = array(
                                'id_fromtrust' => $query,
                                'dev_month' => $this->input->post('month_monitoring',true),
                                'dev_day' => $this->input->post('day_monitoring',true),
                                'dev_year' => $this->input->post('year_monitoring',true),
                                'devfee_amount' => $this->input->post('developments')[$ccnt],
                                'dev_remarks' => $this->input->post('dev_remarks')[$ccnt],
                                'generatedcode' => $this->input->post('gencode',true),
                            );
                    $this->pamain_model->add_subdev($abl);
                }
            }
            if(!empty($this->input->post('finespenalty')) || !empty($this->input->post('penalty_remarks'))){
                foreach($this->input->post('finespenalty') as $ccnt => $ctr)
                {
                    $acl = array(
                                'id_fromtrust' => $query,
                                'penalty_month' => $this->input->post('month_monitoring',true),
                                'penalty_day' => $this->input->post('day_monitoring',true),
                                'penalty_year' => $this->input->post('year_monitoring',true),
                                'penalty_amount' => $this->input->post('finespenalty')[$ccnt],
                                'penalty_remarks' => $this->input->post('penalty_remarks')[$ccnt],
                                'generatedcode' => $this->input->post('gencode',true),
                            );
                    $this->pamain_model->add_subfine($acl);
                }
            }
        if($query){
        $output['message'] = 'Add';
        $output['status'] = 'New record Successfully addeded';
        }else{

    }
        echo json_encode($output);
    }

    public function insertcoastalcoralreefID()
{
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'coralreef_has' => $this->input->post('coral_has',true),
            'coralreef_saba_pt' => $this->input->post('coral_saba_point',true),
        ];
                $query = $this->pamain_model->addcoastalcoral($postData);
                if($query){
                    $output['ans'] = $query;
                $output['message'] = 'Add';
                $output['status'] = 'New household member registered successfully';
                }else{

                }
        echo json_encode($output);
}

 public function insertcrmpactivity()
{
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('crmp-gencode',true),
            'id_pacbrma' => $this->input->post('crmp-id',true),
            'crmp_activity' => $this->input->post('crmp_activity',true),
            'crmp_area_devt' => $this->input->post('crmp_areadevt',true),
            'crmp_x_coordinates' => $this->input->post('crmp_x_coor'),
            'crmp_y_coordinates' => $this->input->post('crmp_y_coor'),
            'crmp_cost' => $this->input->post('crmp_cost'),
            'crmp_outputs' => $this->input->post('crmp_output'),
        ];
                $query = $this->pamain_model->createCRMPActivity($postData);

                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added CRMP Activity!';
                }else{

                }
        echo json_encode($output);
}

public function insertFuanaPopulations()
{
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('ffb-gencode',true),
            'species_codegen' => $this->input->post('ffb-gencode-species',true),
            'fdateM' => $this->input->post('edit-fdateMs',true),
            'fdateD' => $this->input->post('edit-fdateDs',true),
            'fdateY' => $this->input->post('edit-fdateYs'),
            'activity_title' => $this->input->post('edit-populationactivitys'),
            'populationcount' => str_replace(',','',$this->input->post('edit-populationcount')),
            'populationremarks' => $this->input->post('edit-populationremarkss'),
        ];
                $query = $this->pamain_model->createfuanpopulationEdit($postData);

                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added.';
                }else{

                }
        echo json_encode($output);
}

public function insertresearchs(){
    $rel_data1 = $this->input->post('tablerefresfiles');
    $rel_data2 = $this->input->post('tablerefres');
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('search-gencode',true),
            'id_program' => $this->input->post('search-id_program',true),
            'research_code' => $this->input->post('search-searchcode',true),
            'type_research' => $this->input->post('add-search_type',true),
            'permit_no' => $this->input->post('add-search_permit',true),
            'funding_agency' => $this->input->post('add-search_funding'),
            'name_researcher' => $this->input->post('add-search_name'),
            'institution' => $this->input->post('add-search_institution'),
            'research_purpose' => $this->input->post('add-search_purpose'),
            'pamb_reso_no' => $this->input->post('add-search_pambresono'),
            'pamb_reso_title' => $this->input->post('add-search_titlereso'),
            'search_status' => $this->input->post('research_fromprog_status'),
            'research_reason' => $this->input->post('research_reason_terminatefromprog'),
            'research_year_extend' => $this->input->post('add-yearextendfromprog'),
            'research_month_from' => $this->input->post('add-search_monthfrom'),
            'research_year_from' => $this->input->post('add-search_yearfrom'),
            'research_month_to' => $this->input->post('add-search_monthto'),
            'research_year_to' => $this->input->post('add-search_yearto'),
            'research_pamb_reso' => $this->input->post('modal_research_reso_old'),
            'search_permit_attached' => $this->input->post('edit-searchpermit_txt'),
            'research_pamb_adopted' => $this->input->post('add-chk_progres_approve')==null ? 0 : 1,
        ];

        $query = $this->pamain_model->addResearchNextID($postData,$rel_data1,$rel_data2);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
}

public function insertresearchsMain(){

    $rel_data1 = $this->input->post('tablerefresfiles');
    $rel_data2 = $this->input->post('tablerefres');
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'research_code'    =>  $this->input->post('researchGenCode',true),
            'type_research' => $this->input->post('research_type',true),
            'permit_no' => $this->input->post('research_permitno',true),
            'search_permit_attached' => $this->input->post('researchpermit_txt'),
            'funding_agency' => $this->input->post('research_funding'),
            'name_researcher' => $this->input->post('research_name'),
            'institution' => $this->input->post('research_institution'),
            'research_purpose' => $this->input->post('research_purpose'),
            'research_pamb_clearance' => $this->input->post('researpambclearance_txt'),
            'pamb_reso_no' => $this->input->post('research_pambreso'),
            'search_status' => $this->input->post('research_status'),
            'research_reason' => $this->input->post('research_reason_terminates'),
            'research_month_from' => $this->input->post('research_month_froms'),
            'research_year_from' => $this->input->post('research_year_froms'),
            'research_month_to' => $this->input->post('research_month_tos'),
            'research_year_to' => $this->input->post('research_year_tos'),
            'research_year_extend' => $this->input->post('yearextendfromprogsmain'),
            'research_pamb_reso' => $this->input->post('research_reso_pamb_old'),
            'research_pamb_adopted' => $this->input->post('chk_progres_approvemain')==null?0:1,
        ];

        $query = $this->pamain_model->addResearchNextIDnew($postData,$rel_data1,$rel_data2);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added research!';
        }else{

        }
        echo json_encode($output);
}

public function iupdatepaevents(){
        if($this->session->userdata('email')){
            $id = $this->input->post("paevents-id");
            $details = array(
                'generatedcode' => $this->input->post('paevents-gencode',true),
                'evet_code'    =>  $this->input->post('paevents-gencode2',true),
                'event_title' => $this->input->post('edit-events_title',true),
                'event_desc' => $this->input->post('edit-events_description',true),
                'event_conducted' => $this->input->post('edit-events_conducted'),
                'event_start' => $this->input->post('edit-dateeventfrom'),
                'event_end' => $this->input->post('edit-dateeventto'),
                'event_status' => '1'
            );

            $this->pamain_model->updatepaeventsa($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

public function insertpaevents(){

    $rel_data1 = $this->input->post('tablepaevent');
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'evet_code'    =>  $this->input->post('eventcodes',true),
            'event_title' => $this->input->post('events_title',true),
            'event_desc' => $this->input->post('events_description',true),
            'event_conducted' => $this->input->post('events_conducted'),
            'event_start' => $this->input->post('dateeventfrom'),
            'event_end' => $this->input->post('dateeventto'),
            'event_status' => '1'
        ];

        $query = $this->pamain_model->addeventPA($postData,$rel_data1);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added PA Events!';
        }else{

        }
        echo json_encode($output);
}

    public function insertpaeventsEdit()
{
        $output = array();
        $data['paloacations'] = (object)$postData = [
            'generatedcode' => $this->input->post('paevents-gencode',true),
            'evet_code' => $this->input->post('paevents-gencode2',true),
            'participant_name' => $this->input->post('edit-events_participant',true),
            ];
                $query = $this->pamain_model->createPAeventlist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PA event participant';
                }else{

                }
        echo json_encode($output);
}

public function fetchPAEvents1(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallpaevents($codegens);
        foreach($data as $row){
            $code2 = $row->evet_code;
            $data2 = $this->pamain_model->getallpaeventparticipant($code2);
            $data3 = $this->pamain_model->getallpaeventparticipants($code2);
            ?>
            <tr id="<?php echo $row->id_paevent; ?>" class="trow">

                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->evet_code; ?></td>
                <td class=""><?php echo $row->event_title; ?></td>
                <td class=""><?php echo $row->event_desc; ?></td>
                <td>
                    <?php foreach($data2 as $row2):
                        echo $row2->participant;
                    endforeach; ?>
                </td>
                <td class=""><?php echo $row->event_conducted; ?></td>
                <td class=""><?php echo $row->event_start; ?></td>
                <td class=""><?php echo $row->event_end; ?></td>
                <td class="hidden">
                    <?php $rctr=0;foreach($data3 as $ca):$rctr+=1;?>
                    <div id="bca<?php echo $ca->id_eventparticipant ?>" class="showdata">
                        <fieldset>
                            <div class="col-xs-12">
                                <p><?php echo $ca->participant_name; ?></p>
                            </div>
                            <button type="button" class="btn btn-danger btn-xs removepaeventparticipants" id="<?php echo $ca->id_eventparticipant  ?>" data-id="<?php echo $ca->id_eventparticipant ?>">Remove</button>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td>
                    <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removepaevents" data-id="<?php echo $row->evet_code ?>" title="Remove">Remove</button>
                    <button type="button" style="float: right" value="<?php echo $row->id_paevent;?>" class="btn btnbtn btn-info btn-xs" onclick="editpaevents_form(this)">Edit </button>
                </td>
            <input type="hidden" id="PAE<?php echo $row->id_paevent;?>" value="<?php echo $row->id_paevent ?>" />

            </tr>

            <?php
        }
    }

    public function fetchpaEventparticipants(){
        $code2 = $this->input->post('codegens');
        $data3 = $this->pamain_model->getallpaeventparticipants($code2); ?>
        <td>
            <?php $rctr=0;foreach($data3 as $ca):$rctr+=1;?>
            <div id="bca<?php echo $ca->id_eventparticipant ?>" class="showdata">
                <fieldset>
                    <div class="col-xs-12">
                        <p><?php echo $ca->participant_name; ?></p>
                    </div>
                    <button type="button" class="btn btn-danger btn-xs removepaeventparticipants" id="<?php echo $ca->id_eventparticipant  ?>" data-id="<?php echo $ca->id_eventparticipant ?>">Remove</button>
                </fieldset>
            </div>
            <?php endforeach;?>
        </td>
    <?php
    }

     public function deletepaeventsa($id = null)
    {
        $output = array();
        $sql = "DELETE tblpamainevent,tblpamainevent_participant
                FROM tblpamainevent
                LEFT JOIN tblpamainevent_participant ON tblpamainevent_participant.evet_code = tblpamainevent.evet_code
                WHERE tblpamainevent.evet_code = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

public function insertprojects()
{
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('projects-gencode',true),
            'id_program' => $this->input->post('projects-id_program',true),
            'proj_sector_id' => $this->input->post('progprojsector',true),
            'proj_list_id' => $this->input->post('progprojsectorlist',true),
            'proj_desc' => $this->input->post('progproj_details',true),
            'proj_name' => $this->input->post('proj_nameedit',true),
            'proj_start_implement_month' => $this->input->post('proj_start_implement_month',true),
            'proj_start_implement_year' => $this->input->post('proj_start_implement_year'),
            'proj_end_implement_month' => $this->input->post('proj_end_implement_month'),
            'proj_end_implement_year' => $this->input->post('proj_end_implement_year'),
            'source_fund' => $this->input->post('prog_source_fund2'),
            'proj_typefund' => $this->input->post('prog_progtypeoffund',true),
            'proj_sourcetxt' => $this->input->post('prog_progtextsource',true),
            'chk_cofinancing' => $this->input->post('prog_chk_cofinancing',true)==null ? 0 : 1,
            'proj_typeofpayment' => $this->input->post('prog_typeofpaymentcofinancing',true),
            'proj_currency' => $this->input->post('prog_projcurrency',true),
            'proj_money' => str_replace(',','',$this->input->post('prog_moneymonetarytext',true)),
            'proj_activitymonetary' => $this->input->post('prog_activitymonetarytext',true),
            'proj_inkindmonetary' => $this->input->post('prog_inkindmonetarytext',true),
            'proj_area' => str_replace(',','',$this->input->post('proj_area2edit')),
            'proj_location' => $this->input->post('proj_location2'),
            'proj_remarks' => $this->input->post('proj_remarks'),
            'proj_proponent' => $this->input->post('progproj_proponent'),
            'proj_code' => $this->input->post('projects-proj_codes'),
            'proj_status' => $this->input->post('proj_status2'),
            'proj_partnership' => $this->input->post('proj_partnerships2'),
            'proj_objectives' => $this->input->post('proj_objectives2'),
            'proj_completion_report' => $this->input->post('progprojcompletionrepups_span'),
        ];
                $query = $this->pamain_model->createProjects($postData);

                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added CRMP Activity!';
                }else{

                }
        echo json_encode($output);
}

public function insertprogramactivity()
{
        $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('progactivity-gencode',true),
            'id_program' => $this->input->post('progactivity-id_program',true),
            'program_activity' => $this->input->post('programactivity',true),
            'program_activity_devt' => str_replace(',','',$this->input->post('programactivitydevt',true)),
            'program_activity_cost' => str_replace(',','',$this->input->post('programactivitycost')),
            'program_activity_month' => $this->input->post('programactivitymonth'),
            'program_activity_year' => $this->input->post('programactivityyear'),
            'program_activity_output' => $this->input->post('programactivityoutput'),
        ];
                $query = $this->pamain_model->createProgramactivity($postData);

                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added CRMP Activity!';
                }else{

                }
        echo json_encode($output);
}

public function getcaveclassinfo()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblcaveclassification')
                ->where('id_cave_class',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->class_desc;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid selected item";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

public function gethcccondition()
    {
        $id = $this->input->post('id');
            if (!empty($id)) {
            $query = $this->db->select('*')
                ->from('tblpacoastalcoralhcc')
                ->where('id_coral_hcc',$id)
                ->get();

            $option = "";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $output) {
                    $option .= $output->hcc_condition;
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No data available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid Municipal selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function fetchcoralreefs(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllcoralreefss($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_coral_detail; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->coastal_generatedcode; ?></td>
                <td class="hide"><?php echo number_format($row->coral_has,3); ?></td>
                <td class="hide"><?php echo $row->coral_has." has."; ?></td>
                <td class="hide"><?php echo $row->coral_remarks; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_updated; ?></td>
                <td class="hide"><?php echo $row->coralreefmap ?></td>
                <td class="hide"><?php echo base_url().'bmb_assets2/upload/coralreef_map_img/'.$row->coralreefmap ?></td>
                <td class="hide"><?php echo number_format($row->hcc_value,2) ?></td>
                <td class="hide"><?php echo $row->taus_value ?></td>
                <td class="hidden"><?php echo '<img src="'.base_url('bmb_assets2/upload/coralreef_map_img/').(!empty($row->coral_map_img)?$row->coral_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?>   </td>
                <td class="hide"><?php echo $row->coral_map_img ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_coral_shpfile/').$row->coral_shpfile ?>"><?php echo $row->coral_shpfile ?></a>
                </td>
                <td class="hide"><?php echo $row->coral_shpfile; ?></td>
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/coralreef_map_img/').(!empty($row->coral_map_img)?$row->coral_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?><br>
                    <b>Shape File : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_coral_shpfile/').$row->coral_shpfile ?>"><?php echo $row->coral_shpfile ?></a><br>
                    <?= !empty($row->coral_has)?'<b>Area : </b>'.number_format($row->coral_has,3)." has. <br>":"" ?>
                    <?= !empty($row->hcc_value)?'<b>HCC value (%) : </b>'.number_format($row->hcc_value,2)."% <br>":"" ?>
                    <?= !empty($row->hcc_category)?'<b>Hard Coral Cover (HCC) Category : </b>'.$row->hcc_condition."(".$row->hcc.") <br>":"" ?>
                    <?= !empty($row->taus_value)?'<b>No. of Taxonomic Amalgation Units (TAUs) (%) : </b>'.number_format($row->taus_value,2)."% <br>":"" ?>
                    <?= !empty($row->taus_category)?'<b>Diversity Category: </b>'.$row->taus_categorys."(".$row->taus_values.")<br>":"" ?>
                    <?= !empty($row->coral_remarks)?'<b>Remarks : </b>'.$row->coral_remarks."<br> ":"" ?>
                    <?= '<b>Date conducted : </b>'.(!empty($row->month)?$row->month:"").(!empty($row->day)?' '.$row->day.', ':"").(!empty($row->year)?' '.$row->year:"") ?><br>
                    <button type="button" value="<?php echo $row->id_coral_detail;?>" class="btn btn-info btn-xs" onclick="editcoralreefNew(this);">Edit</button>
                    <button type='button' name='remove' data-id="<?php echo $row->id_coral_detail ?>" class='btn btn-danger btn-xs removecoralreefs'>Remove</button><hr>
                    <input type="hidden" id="coralReef1<?php echo $row->id_coral_detail;?>" value="<?php echo $row->hcc_category ?>" />
                    <input type="hidden" id="coralReef2<?php echo $row->id_coral_detail;?>" value="<?php echo $row->taus_category ?>" />
                    <input type="hidden" id="coralReefMAPID<?php echo $row->id_coral_detail;?>" value="<?php echo $row->id_coralmap ?>" />
                    <input type="hidden" id="coralReefdateM<?php echo $row->id_coral_detail;?>" value="<?php echo $row->coral_date_month ?>" />
                    <input type="hidden" id="coralReefdateD<?php echo $row->id_coral_detail;?>" value="<?php echo $row->coral_date_day ?>" />
                    <input type="hidden" id="coralReefdateY<?php echo $row->id_coral_detail;?>" value="<?php echo $row->coral_date_year ?>" />
                </td>

            </tr>
        <?php
        }
    }

    public function fetchseagrass(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllseagrass($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_seagrass; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->coastal_generatedcode; ?></td>
                <td class="hide"><?php echo $row->seagrass_area; ?></td>
                <td class="hide"><?php echo $row->seagrass_area." has."; ?></td>
                <td class="hide"><?php echo $row->seagrass_remarks; ?></td>
                <td class="hide"><?php echo $row->date_created; ?></td>
                <td class="hide"><?php echo $row->date_updated; ?></td>
                <td class="hide"><?php echo $row->seagrass_map_img ?></td>
                <td class="hide"><?php echo base_url().'bmb_assets2/upload/seagrass_map/'.$row->seagrass_map_img ?></td>
                <td class="hide"><?php echo $row->seagrass_cover_value ?></td>
                <td class="hide"><?php echo $row->diversity_value ?></td>
                <td class="hide"><?php echo $row->seagrass_no ?></td>
                <td class="hidden"><?php echo '<img src="'.base_url('bmb_assets2/upload/seagrass_map/').(!empty($row->seagrass_map_img)?$row->seagrass_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?> </td>
                <td class="hide"><?php echo $row->seagrass_map_img ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_seagrass_shpfile/').$row->seagrass_shpfile ?>"><?php echo $row->seagrass_shpfile ?></a>
                </td>
                <td class="hide"><?php echo $row->seagrass_shpfile; ?></td>
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/seagrass_map/').(!empty($row->seagrass_map_img)?$row->seagrass_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?><br>
                    <b>Shape File : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_seagrass_shpfile/').$row->seagrass_shpfile ?>"><?php echo $row->seagrass_shpfile ?></a><br>
                    <?= !empty($row->seagrass_area)?'<b>Area : </b>'.number_format($row->seagrass_area,3)." has.<br>":"" ?>
                    <?= !empty($row->seagrass_cover_value)?'<b>Percent Cover : </b>'.number_format($row->seagrass_cover_value,2)."%<br>":"" ?>
                    <?= !empty($row->seagrass_condition)?'<b>Category : </b>'.$row->seagrass_condition."(".$row->seagrass_coverage.")<br>":"" ?>
                    <?= !empty($row->seagrass_no)?'<b>Seagrass species composition : </b>'.$row->seagrass_no."<br>":"" ?>
                    <?= !empty($row->diversity_value)?'<b>Diversity Index : </b>'.number_format($row->diversity_value,2)."<br>":"" ?>
                    <?= !empty($row->diversity_index)?'<b>Diversity Category : </b>'.$row->diversity_indexs."<br>":"" ?>
                    <?= !empty($row->seagrass_remarks)?'<b>Remarks : </b>'.$row->seagrass_remarks."<br>":"" ?>
                    <?= '<b>Date conducted : </b>'.(!empty($row->month)?$row->month:"").(!empty($row->day)?' '.$row->day.', ':"").(!empty($row->year)?' '.$row->year:"") ?><br>
                    <button type="button" value="<?php echo $row->id_seagrass;?>" class="btn btn-info btn-xs" onclick="editseagrassesNew(this);">Edit</button>
                    <button type='button' name='remove' data-id="<?php echo $row->id_seagrass ?>" class='btn btn-danger btn-xs removeseagrass1'>Remove</button><hr>
                    <input type="hidden" id="seagrass1<?php echo $row->id_seagrass;?>" value="<?php echo $row->seagrass_conditions ?>" />
                    <input type="hidden" id="seagrass2<?php echo $row->id_seagrass;?>" value="<?php echo $row->diversity_index ?>" />
                    <input type="hidden" id="seagrassMAPID<?php echo $row->id_seagrass;?>" value="<?php echo $row->id_seagrassmap ?>" />
                    <input type="hidden" id="seagrassdateM<?php echo $row->id_seagrass;?>" value="<?php echo $row->seagrass_date_month ?>" />
                    <input type="hidden" id="seagrassdateD<?php echo $row->id_seagrass;?>" value="<?php echo $row->seagrass_date_day ?>" />
                    <input type="hidden" id="seagrassdateY<?php echo $row->id_seagrass;?>" value="<?php echo $row->seagrass_date_year ?>" />
                </td>
            </tr>
        <?php
        }
    }

     public function fetchseagrassSpecies(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllseagrassSpecies($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_seagrass_species; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->seagrass_generatedcode; ?></td>
                <td class="hide"><?php echo $row->seagrass_species_name; ?></td>
                <td><?php echo $row->seagrassName; ?></td>
                <td><?php echo $row->date_created; ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeseagrassSpecies" data-id="<?php echo $row->id_seagrass_species ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

    public function fetchcoralreefsSpecies(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllcoralreefsSpecies($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_species_coral; ?>" class="trow">
                <td><?php echo $row->coral_species_name; ?></td>
                <td><?php echo $row->date_upload; ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removecoralreefSpecies" data-id="<?php echo $row->id_species_coral ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

    public function fetchmangrove(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllmangrove($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_mangrove; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->mangrove_generatedcode; ?></td>
                <td class="hide"><?php echo number_format($row->mangrove_area,3) ?></td>
                <td class="hide"><?php echo number_format($row->crown_cover,2) ?></td>
                <td class="hide"><?php echo number_format($row->regeneration,2) ?></td>
                <td class="hide"><?php echo number_format($row->avg_height,2) ?></td>
                <td class="hide"><?php echo $row->observation ?></td>
                <td class="hide"><?php echo $row->mangrove_diversity ?></td>
                <td class="hide"><?php echo $row->mangrove_remarks; ?></td>
                <td class="hide"><?php echo '<img src="'.base_url('bmb_assets2/upload/mangrove_map/').(!empty($row->mangrove_map_img)?$row->mangrove_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?></td>
                <td class="hide"><?php echo $row->mangrove_map_img; ?></td>
                <td><?php echo '<img src="'.base_url('bmb_assets2/upload/mangrove_map/').(!empty($row->mangrove_map_img)?$row->mangrove_map_img:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>' ?>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_mangrove_shpfile/').$row->mangrove_shpfile ?>"><?php echo $row->mangrove_shpfile ?></a>
                </td>
                <td class="hide"><?php echo $row->mangrove_shpfile; ?></td>
                <td>
                    <b>Shape File : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/coastal_mangrove_shpfile/').$row->mangrove_shpfile ?>"><?php echo $row->mangrove_shpfile ?></a><br>
                    <?php echo "<b>Date Conducted : </b>".(!empty($row->month)?$row->month:"").(!empty($row->day)?' '.$row->day.', ':"").(!empty($row->year)?' '.$row->year:"")."<br>".
                    "<b>Crown Cover : </b>".$row->mangrove_conditions." - ".$row->mangrove_criteria." = (Value : ".number_format($row->crown_cover,2).")<br>".
                    "<b>Regeneration per m<sup>2</sup> : </b>".$row->regen_category." - ".$row->regen_value." = (Value : ".number_format($row->regeneration,2).")<br>".
                    "<b>Average Height : </b>".$row->average_height_category." - ".$row->average_height_value." = (Value : ".number_format($row->avg_height,2).")<br>".
                    "<b>Observation : </b>".$row->observation_category." - ".$row->observation_value." = (Value : ".$row->observation.")<br>".
                    "<b>Diversity : </b>".$row->mangrove_diversity_value." - ".$row->shannon_index." = (Value : ".$row->mangrove_diversity.")"
                    ?>

                </td>

                <td class="hide"><?php echo (!empty($row->month)?$row->month:"").(!empty($row->day)?' '.$row->day.', ':"").(!empty($row->year)?' '.$row->year:"") ?></td>
                <td class="hide"><?php echo $row->mangrove_conditions." - ".$row->mangrove_criteria."<br><hr><b>Value : </b>".number_format($row->crown_cover,2) ?></td>
                <td class="hide"><?php echo $row->regen_category." - ".$row->regen_value."<br><hr><b>Value : </b>".number_format($row->regeneration,2) ?></td>
                <td class="hide"><?php echo $row->average_height_category." - ".$row->average_height_value."<br><hr><b>Value : </b>".number_format($row->avg_height,2) ?></td>
                <td class="hide"><?php echo $row->observation_category." - ".$row->observation_value."<br><hr><b>Value : </b>".$row->observation ?></td>
                <td class="hide"><?php echo $row->mangrove_diversity_value." - ".$row->shannon_index."<br><hr><b>Value : </b>".$row->mangrove_diversity ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_mangrove;?>" class="btn btn-info btn-xs" onclick="editmangroveNew(this);">Edit</button>
                    <button type='button' name='remove' data-id="<?php echo $row->id_mangrove ?>" class='btn btn-danger btn-xs removemangrove'>Remove</button><br>
                    <input type="hidden" id="mangrove1<?php echo $row->id_mangrove;?>" value="<?php echo $row->mangrove_condition ?>" />
                    <input type="hidden" id="mangrove2<?php echo $row->id_mangrove;?>" value="<?php echo $row->regen_cat ?>" />
                    <input type="hidden" id="mangrove3<?php echo $row->id_mangrove;?>" value="<?php echo $row->height_cat ?>" />
                    <input type="hidden" id="mangrove4<?php echo $row->id_mangrove;?>" value="<?php echo $row->observe_cat ?>" />
                    <input type="hidden" id="mangrove5<?php echo $row->id_mangrove;?>" value="<?php echo $row->divert_cat ?>" />
                    <input type="hidden" id="mangrove6<?php echo $row->id_mangrove;?>" value="<?php echo $row->mangrove_date_month ?>" />
                    <input type="hidden" id="mangrove7<?php echo $row->id_mangrove;?>" value="<?php echo $row->mangrove_date_day ?>" />
                    <input type="hidden" id="mangrove8<?php echo $row->id_mangrove;?>" value="<?php echo $row->mangrove_date_year ?>" />
                </td>
            </tr>
        <?php
        }
    }

    public function fetchmangroveSpeciesdata(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllmangroveSpeciesdata($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_mangroveSpecies; ?>" class="trow">
                <td><?php echo $row->mangrove_scientific_name; ?></td>
                <td><?php echo $row->date_upload; ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeMangroveSpecies" data-id="<?php echo $row->id_mangroveSpecies ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

    public function fetchcoralreef(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllcoralreef($codegens);
        $data2 = $this->pamain_model->getAllcoralreeflocation($codegens);
        $data3 = $this->pamain_model->getAllcoralreefdomspecies($codegens);
        $data4 = $this->pamain_model->getAllcoralreefaso($codegens);
        $data5 = $this->pamain_model->getAllcoralreefmonitoringsite($codegens);
        $data6 = $this->pamain_model->getAllcoralreefkmlkmz($codegens);
        foreach($data1 as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_coralreef_ecosystem; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->coastal_generatedcode; ?></td>
                <td><?php echo $row->coralreef_has." has."; ?></td>
                <td><?php echo $row->coralreef_saba_pt; ?></td>
                <td class="hide"><?php echo $row->coralreef_pms_point; ?></td>
                <td class="hide"><?php echo $row->coralreef_hcc; ?></td>
                <td><?php echo $row->hcc; ?></td>
                <td><?php echo $row->hcc_condition; ?></td>
                <td><?php echo $row->hard_coral; ?></td>
                <td><?php echo $row->algal_assemblage; ?></td>
                <td><?php echo $row->abiotic; ?></td>
                <td><?php echo $row->macroalgae; ?></td>
                <td><?php echo $row->halimeda; ?></td>
                <td><?php echo $row->other_biota; ?></td>
                <td><?php echo $row->density; ?></td>
                <td><?php echo $row->biomass; ?></td>
                <td class="hide"><?php echo $row->coralreef_map_shp ?></td>
                <td class="hide"><a href="<?php echo base_url();?>bmb_assets2/upload/coralreef/shapefile/<?php echo $row->coralreef_map_shp ?>"><?php echo $row->coralreef_map_shp ?></a></td>
                <td class="hide"><?php echo base_url('bmb_assets2/upload/coralreef/shapefile/').$row->coralreef_map_shp ?></td>
                <td class="hide">
                    <fieldset>
                        <legend>Current Location</legend>
                        <?php $octr=0;foreach($data2 as $cb):$octr+=1;
                            if ($row->coastal_generatedcode == $cb->coastal_generatedcode) {
                        ?>
                        <div id="bcb<?php echo $cb->id_coral_location?>" class="showdata">
                            <input type="hidden" name="ddd1<?php echo $octr;?>" value="<?php echo $cb->id_coral_location; ?>"/>
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-lg-12"><?php echo "Muncipality : ".$cb->municipalName; ?></div>
                                <div class="col-xs-12 col-lg-12"><?php echo "Barangay : ".$cb->barangayName."&nbsp; <button type='button' id='".$cb->id_coral_location."' data-id='".$cb->id_coral_location."' class='btn btn-danger removeCoralLocation' style='padding: 0px 3px !important;'><i class='glyphicon glyphicon-remove'></i></button>"; ?></div>
                            </div>
                      </div>
                        <?php } ?>
                        <?php endforeach;?>
                    </fieldset>
                </td>
                <td class="hide">
                    <fieldset>
                        <legend>Existing dominant species</legend>
                        <?php $octr=0;foreach($data3 as $bb):$octr+=1;
                            if ($row->coastal_generatedcode == $bb->coastal_generatedcode) {
                        ?>
                        <div id="bcb<?php echo $bb->id_species_coral?>" class="showdata">
                            <input type="hidden" name="ddd2<?php echo $octr;?>" value="<?php echo $bb->id_species_coral; ?>"/>
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-lg-12"><?php echo "Coral Species name : ".$bb->coral_species_name."&nbsp; <button type='button' id='".$bb->id_species_coral."' data-id='".$bb->id_species_coral."' class='btn btn-danger removeCoralSpecies' style='padding: 0px 3px !important;'><i class='glyphicon glyphicon-remove'></i></button>"; ?></div>
                            </div>
                      </div>
                        <?php } ?>
                        <?php endforeach;?>
                    </fieldset>
                </td>
                <td class="hide">
                    <fieldset>
                        <legend>Existing Reef Asscociated-Fishes</legend>
                        <?php $octr=0;foreach($data4 as $cc):$octr+=1;
                            if ($row->coastal_generatedcode == $cc->coastal_generatedcode) {
                        ?>
                        <div id="bcb<?php echo $cc->id_speciescompo?>" class="showdata">
                            <input type="hidden" name="eee2<?php echo $octr;?>" value="<?php echo $cc->id_speciescompo; ?>"/>
                            <div class="col-xs-12">
                                <div class="col-xs-2 col-lg-2">
                                    <img src="../../../bmb_assets2/upload/coralreef/reef_photo/<?php echo $cc->speciescompo_img; ?>" style="max-height: 50px; max-width: 50px; width: 50px; height: 50px">
                                </div>
                                <div class="col-xs-10 col-lg-10">
                                    <?php echo "Species name : ".$cc->species_name."&nbsp; <button type='button' id='".$cc->id_speciescompo."' data-id='".$cc->id_speciescompo."' class='btn btn-danger removeCoralSpeciesCompo' style='padding: 0px 3px !important;'><i class='glyphicon glyphicon-remove'></i></button>"; ?>
                                </div>
                            </div>
                        </div>
                        <?php } ?>
                        <?php endforeach;?>
                    </fieldset>
                </td>
                <td class="hide">
                    <fieldset>
                        <legend>Existing Monitoring station/block</legend>
                        <?php $n = 0; $octr=0;foreach($data5 as $ee):$octr+=1;
                            if ($row->coastal_generatedcode == $ee->coastal_generatedcode) {
                            $n++;
                        ?>
                        <div id="bcb<?php echo $ee->id_monitoringsite?>" class="showdata">
                            <input type="hidden" name="fff2<?php echo $octr;?>" value="<?php echo $ee->id_monitoringsite; ?>"/>
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-lg-12">
                                    <?php echo "Point ".$n.") ".$ee->monitoring_site_point."&nbsp; <button type='button' id='".$ee->id_monitoringsite."' data-id='".$ee->id_monitoringsite."' class='btn btn-danger removecoralMonitoring' style='padding: 0px 3px !important;'><i class='glyphicon glyphicon-remove'></i></button>"; ?>
                                </div>
                            </div>
                      </div>
                        <?php } ?>
                        <?php endforeach;?>
                    </fieldset>
                </td>
                <td class="hide">
                        <?php $octr=0;foreach($data6 as $ff):$octr+=1;
                            if ($row->coastal_generatedcode == $ff->coastal_generatedcode) {
                        ?>
                        <div id="bcb<?php echo $ff->id_coralkmlkmz?>" class="showdata">
                            <input type="hidden" name="fff2<?php echo $octr;?>" value="<?php echo $ff->id_coralkmlkmz; ?>"/>
                            <div class="col-xs-12">
                                <div class="col-xs-12 col-lg-12">
                                    <?php echo "<a href='".base_url()."bmb_assets2/upload/coralreef/shapefile/".$ff->kmlkmz."'>".$ff->kmlkmz."</a>"."&nbsp;<button type='button' id='".$ff->id_coralkmlkmz."' data-id='".$ff->id_coralkmlkmz."' class='btn btn-danger removecoralShapefilekmlkmz' style='padding: 0px 3px !important;'><i class='glyphicon glyphicon-remove'></i></button>"; ?>
                                </div>

                            </div>
                      </div>
                        <?php } ?>
                        <?php endforeach;?>
                </td>
                <?php if (!empty($row->month) || !empty($row->coral_day) || !empty($row->coral_year)): ?>
                    <td><?php echo $row->month.' '.$row->coral_day.', '.$row->coral_year; ?></td>
                <?php else: ?>
                    <td></td>
                <?php endif; ?>
                <td class="hide"><?php echo $row->coral_month; ?></td>
                <td class="hide"><?php echo $row->coral_day; ?></td>
                <td class="hide"><?php echo $row->coral_year; ?></td>
                <td class="hide"><?php echo $row->coral_sampling_station; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_coralreef_ecosystem;?>" class="btn btn-info btn-edit-visitors" onclick="editcoralreef(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat removecoralreef" data-id="<?php echo $row->coastal_generatedcode ?>" title="Remove">Remove</button>
                    <input type="hidden" id="coastalhcc<?php echo $row->id_coralreef_ecosystem;?>" value="<?php echo $row->coralreef_hcc ?>" />
                </td>
            </tr>
            <?php } ?>
            <?php

    }

    public function update_coralReef(){

        $output = array();

        $gencode = $this->input->post("edit_codegen");
        $coralgencode = $this->input->post("edit_genCoral");

        $data_coral_1 = $this->input->post("table_coral_reef_species_composition");
        $data_coral_2 = $this->input->post("table_coral_reef_species");
        $data_coral_3 = $this->input->post("table_coral_reef_location");
        $data_coral_4 = $this->input->post("table_coral_reef_monitoring_site");
        $data_coral_5 = $this->input->post("table_coral_reef_kmlkmz");

        if(!empty($_FILES['edit_shpfilecoral']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/coralreef/shapefile';
            $config['file_name'] = $_FILES['edit_shpfilecoral']['name'];
            $config['allowed_types'] = 'kml|kmz';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit_shpfilecoral')){
                $uploadData = $this->upload->data();
                $filenamess = $uploadData['file_name'];
            }
        }

        // if($this->session->userdata('email')){
            $data[] = (object)$postData = [
            'id_coralreef_ecosystem'=>     $this->input->post('coralreef-id'),
            'generatedcode'        =>      $this->input->post('edit_codegen'),
            'coastal_generatedcode'=>      $this->input->post('edit_genCoral'),
            'coralreef_has'        =>      $this->input->post('edit_coral_has'),
            'coralreef_pms_point'  =>      $this->input->post('edit_coral_pms_points'),
            'coralreef_hcc'        =>      $this->input->post('edit_hccid'),
            'hard_coral'           =>      $this->input->post('edit_hcid'),
            'algal_assemblage'     =>      $this->input->post('edit_aaid'),
            'abiotic'              =>      $this->input->post('edit_abid'),
            'macroalgae'           =>      $this->input->post('edit_maid'),
            'halimeda'             =>      $this->input->post('edit_haid'),
            'other_biota'          =>      $this->input->post('edit_obid'),
            'density'              =>      $this->input->post('edit_coraldensity'),
            'biomass'              =>      $this->input->post('edit_coralbiomass'),
            'coral_month'              =>      $this->input->post('edit_coral_month'),
            'coral_day'              =>      $this->input->post('edit_coral_day'),
            'coral_year'              =>      $this->input->post('edit_coral_year'),
            'coral_sampling_station'              =>      $this->input->post('edit_samplingstation'),
            // 'coralreef_map_shp'    =>      (!empty($this->input->post('edit_img_reefshpspan'))?$this->input->post('edit_img_reefshpspan'):$this->input->post('edit_shpfilecoraltext')),
        ];

            $query = $this->pamain_model->update_coralreefs($postData,$data_coral_1,$data_coral_2,$data_coral_3,$data_coral_4,$data_coral_5);
            if($query){
                $output['message'] = 'Add';
                $output['status'] = 'New record Successfully addeded';
                }else{
                $output['error'] = true;
                $output['status'] = $this->db->error();
            }

        echo json_encode($output);

    }

    public function deletecoralLocation($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalcorallocation WHERE id_coral_location = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function deleteseagrass($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalseagrass_details WHERE id_seagrass = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deletemangrove($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalmangrove_details WHERE id_mangrove  = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deleteMangroveSpecies($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalmangrovespeciesdata WHERE id_mangroveSpecies = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function deleteseagrassSpecies($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalseagrassspeciesdata WHERE id_seagrass_species = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

    public function deleteseagrasspecies($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblpacoastalcoralspeciesdata WHERE id_species_coral = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deletecoralSpecies($id = null)
{
    $sql = "DELETE FROM tblpacoastalcoralspeciesdata WHERE id_species_coral = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deletecoralSpeciesCompo($id = null)
{

    $sql1 = $this->db->where('id_speciescompo',$id)
                                            ->get('tblpacoastalcoralspeciescomposition')
                                            ->row();
            if ($sql1->speciescompo_img != "nophoto.jpg") {
                unlink('bmb_assets2/upload/coralreef/reef_photo/'.$sql1->speciescompo_img);
            }else{

            }

    $sql = "DELETE FROM tblpacoastalcoralspeciescomposition WHERE id_speciescompo = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function deletecoralmonitoringsite($id = null)
{
    $sql = "DELETE FROM tblpacoastalcoralspeciesmonitoringsite WHERE id_monitoringsite = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletecoralkmlkmz($id = null)
{
    $sql1 = $this->db->where('id_coralkmlkmz',$id)
                                            ->get('tblpacoastalcoralkmlkmz')
                                            ->row();
            if ($sql1->kmlkmz != "") {
                unlink('bmb_assets2/upload/coralreef/shapefile/'.$sql1->kmlkmz);
            }else{

            }

    $sql = "DELETE FROM tblpacoastalcoralkmlkmz WHERE id_coralkmlkmz = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletecoralreefdata($id = null)
{
    $sql = "DELETE FROM tblpacoastalcoral_details WHERE id_coral_detail = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function deletecoralReefs($id = null)
{
    $output = array();
         $sql1 = "DELETE FROM tblpacoastalcoral WHERE coastal_generatedcode = '$id'";
         $sql2 = "DELETE FROM tblpacoastalcoralkmlkmz WHERE coastal_generatedcode = '$id'";
         $sql3 = "DELETE FROM tblpacoastalcorallocation WHERE coastal_generatedcode = '$id'";
         $sql4 = "DELETE FROM tblpacoastalcoralspeciescomposition WHERE coastal_generatedcode = '$id'";
         $sql5 = "DELETE FROM tblpacoastalcoralspeciesdata WHERE coastal_generatedcode = '$id'";
         $sql6 = "DELETE FROM tblpacoastalcoralspeciesmonitoringsite WHERE coastal_generatedcode = '$id'";

        $sql_1 = $this->db->where('coastal_generatedcode',$id)
                                ->get('tblpacoastalcoralkmlkmz')
                                ->result();
        foreach ($sql_1 as $row1) {
             unlink('bmb_assets2/upload/coralreef/shapefile/'.$row1->kmlkmz);
        }

        $sql_2 = $this->db->where('coastal_generatedcode',$id)
                            ->get('tblpacoastalcoralspeciescomposition')
                            ->result();
        foreach ($sql_2 as $row2) {
             unlink('bmb_assets2/upload/coralreef/reef_photo/'.$row2->speciescompo_img);
        }


        if($this->db->query($sql1) &&
           $this->db->query($sql2) &&
           $this->db->query($sql3) &&
           $this->db->query($sql4) &&
           $this->db->query($sql5) &&
           $this->db->query($sql6))
        {
            $output['status'] = 'success';
            $output['message'] = 'Data deleted successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
}

public function upload_topo_Image()
    {
        sleep(3);
        if($_FILES["img_topo"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/topology_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_topo"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_topo"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_topo"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_topo"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_topo"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_topo"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
            $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/topology_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/topology_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();

           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/topology_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_topoimage',true) == null) {
          $data['topoimage'] = (object)$postDataTopoImages = [
            'generatedcode '    => $this->input->post('gencode',true),
            'topo_map'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveTopo($postDataTopoImages);
        }else {
           $data['topoimage'] = (object)$postDataTopoImage = [
            'id_topo'    => $this->input->post('id_topoimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'topo_map'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateTopo($postDataTopoImage);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_topoimage',true) == null) {
        //         $output['error'] = true;
        //         // $output['status'] = 'No Document upload';
        //         $query = $this->pamain_model->uploadsaveTopo($postDataTopoImage);
        //     } else {
        //        // if(empty($postDataPambFile['id'])){
        //         $query = $this->pamain_model->uploadUpdateTopo($postDataTopoImage);
        //         if($query){
        //         // $output['status'] = 'Document successfully uploaded';
        //         }else{
        //         // $output['error'] = true;
        //         // $output['status'] = 'No document upload';
        //         }
        //     // }
        //     }


        // }

        // if (!empty($this->input->post('id_topoimage'))) {
        //         $output['error'] = true;
        //     } else {
        //     }

         }
         echo $output;
        }
    }

    public function upload_geology_Image()
    {
        sleep(3);
        if($_FILES["img_soil"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/soil_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_soil"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_soil"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_soil"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_soil"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_soil"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_soil"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
            $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/soil_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/soil_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/soil_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_geologyimage',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'geology_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveSoil($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_geology'    => $this->input->post('id_geologyimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'geology_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateSoil($postData);
        }
         // if (!empty($this->input->post('id_geologyimage'))) {
         //        $output['error'] = true;
         //    } else {
         //    }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_geologyimage',true) == null) {
        //         $output['error'] = true;
        //         $query = $this->pamain_model->uploadsaveSoil($postData);
        //     } else {
        //         $query = $this->pamain_model->uploadUpdateSoil($postData);
        //     }
        // }
         }
         echo $output;
        }
    }

    public function upload_rock_Image()
    {
        sleep(3);
        if($_FILES["img_rocks"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/rock_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_rocks"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_rocks"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_rocks"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_rocks"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_rocks"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_rocks"]["size"][$count];

            if($this->upload->do_upload('file'))
            {
            $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/rock_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/rock_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();

            $filenames = $uploadData['file_name'];

            $data = $this->upload->data();
            $output .= '
            <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/rock_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
            </div>
            ';

            }
            $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_rockimage',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'rock_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveRock($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_rock'    => $this->input->post('id_rockimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'rock_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateRock($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_rockimage',true) == null) {
        //         $output['error'] = true;
        //         $query = $this->pamain_model->uploadsaveRock($postData);
        //     } else {
        //         $query = $this->pamain_model->uploadUpdateRock($postData);
        //     }
        // }
            // if (!empty($this->input->post('id_rockimage'))) {
            //     $output['error'] = true;
            // } else {
            // }


         }
         echo $output;
        }
    }

    public function upload_climate_Image()
    {
        sleep(3);
        if($_FILES["img_climate"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/climate_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_climate"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_climate"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_climate"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_climate"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_climate"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_climate"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/climate_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/climate_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/climate_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_climateimage',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'climate_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveClimate($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_climate'    => $this->input->post('id_climateimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'climate_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateClimate($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_climateimage',true) == null) {
        //         $output['error'] = true;
        //         $query = $this->pamain_model->uploadsaveClimate($postData);
        //     } else {
        //         $query = $this->pamain_model->uploadUpdateClimate($postData);
        //     }
        // }
         // if (!empty($this->input->post('id_climateimage'))) {
         //        $output['error'] = true;
         //    } else {
         //    }
         }
         echo $output;
        }
    }

    public function upload_hydro_perImage()
    {
        sleep(3);
        if($_FILES["pic_hydromap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydro_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["pic_hydromap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pic_hydromap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pic_hydromap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pic_hydromap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pic_hydromap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pic_hydromap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydro_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
            $outputs['message'] = $filenames;

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-12">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/hydro_map_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
         }
         echo $output;
         echo json_encode($outputs);
        }
    }

    public function upload_hydro_Image()
    {
        sleep(3);
        if($_FILES["img_hydro"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/hydrology_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_hydro"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_hydro"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_hydro"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_hydro"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_hydro"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_hydro"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/hydrology_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/hydrology_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/hydrology_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_hydrologyimage',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'hydro_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveHydro($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_hydrology'    => $this->input->post('id_hydrologyimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'hydro_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateHydro($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_hydrologyimage',true) == null) {
        //         $output['error'] = true;
        //         $query = $this->pamain_model->uploadsaveHydro($postData);
        //     } else {
        //         $query = $this->pamain_model->uploadUpdateHydro($postData);
        //     }
        // }
         // if (!empty($this->input->post('id_hydrologyimage'))) {
         //        $output['error'] = true;
         //    } else {
         //    }
         }
         echo $output;
        }
    }

   public function upload_landuse_Image()
    {
        sleep(3);
        if($_FILES["img_lands"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/existinglanduse_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_lands"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_lands"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_lands"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_lands"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_lands"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_lands"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/existinglanduse_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/existinglanduse_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/existinglanduse_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_landuse',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'landuse_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_landuse'    => $this->input->post('id_landuse',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'landuse_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_landuse',true) == null) {
                // $output['error'] = true;
                $query = $this->pamain_model->uploadsaveLanduse($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateLanduse($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_vegetative_Image()
    {
        sleep(3);
        if($_FILES["img_vegetative"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/vegetative_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_vegetative"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_vegetative"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_vegetative"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_vegetative"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_vegetative"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_vegetative"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/vegetative_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/vegetative_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/vegetative_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');
        if ($this->input->post('id_vegetativeimage',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'vegetative_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveVegetative($postDatas);

        }else {
           $data['data'] = (object)$postData = [
            'id_vegetative'    => $this->input->post('id_vegetativeimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'vegetative_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateVegetative($postData);

        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if (!empty($this->input->post('id_vegetativeimage'))) {
            //     $output['error'] = true;
            // } else {
            // }

         echo $output;

        // }
         }
        }
    }

    public function upload_landslide_Image()
    {
        sleep(3);
        if($_FILES["img_landslide"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/landslide_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_landslide"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_landslide"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_landslide"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_landslide"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_landslide"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_landslide"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/landslide_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/landslide_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/landslide_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_landslideimage',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'landslide_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_landslide'    => $this->input->post('id_landslideimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'landslide_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_landslideimage',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavelandslide($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatelandslide($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_landslide_shpfiles()
    {

        sleep(3);
        if($_FILES["landslide_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/landslide_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["landslide_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["landslide_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["landslide_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["landslide_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["landslide_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["landslide_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_landslideimage_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'landslide_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('landslide_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_landslide_shpfile'    => $this->input->post('id_landslideimage_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'landslide_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('landslide_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_landslideimage_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavelandslide_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatelandslide_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImageLandslideShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageLandslideshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/landslide_shpfile/'.$row->landslide_shpfile.'" target="_blank">'.$row->landslide_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_landslideimage_shpfile" class="hidden" value="'.$row->id_landslide_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removelandslideshpfile" data-id="'.$row->id_landslide_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletelandslideshpfile($id = null)
        {
            $sql1 = $this->db->where('id_landslide_shpfile',$id)
                                            ->get('tblpahazardlandslide_shpfile')
                                            ->row();
            if (!empty($sql1->landslide_shpfile)) {
                unlink('bmb_assets2/upload/landslide_shpfile/'.$sql1->landslide_shpfile);
            }

            $sql = "DELETE FROM tblpahazardlandslide_shpfile WHERE id_landslide_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function upload_forestformation_shpfiles()
    {

        sleep(3);
        if($_FILES["forestformation_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/ff_map_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["forestformation_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["forestformation_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["forestformation_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["forestformation_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["forestformation_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["forestformation_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_forestform_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'forestform_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('forestformation_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_forestform_shpfile '    => $this->input->post('id_forestform_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'forestform_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('forestformation_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            $id = $this->input->post('id_forestform_shpfile',true);
            if ($this->input->post('id_forestform_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsaveforestform_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateforestform_shpfile($postData,$id);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_pamaps_shpfiles()
    {

        sleep(3);
        if($_FILES["pamaps_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/pa_map_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["pamaps_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["pamaps_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["pamaps_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["pamaps_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["pamaps_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["pamaps_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_pamain_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'pamaps_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('pamaps_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_pamain_shpfile '    => $this->input->post('id_pamain_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'pamaps_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('pamaps_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            $id = $this->input->post('id_pamain_shpfile',true);
            if ($this->input->post('id_pamain_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavepamaps_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatepamaps_shpfile($postData,$id);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImagepamapsShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagepamainshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/pa_map_shpfile/'.$row->pamaps_shpfile.'" target="_blank">'.$row->pamaps_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_pamain_shpfile" class="hidden" value="'.$row->id_pamain_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removepamapsshpfile" data-id="'.$row->id_pamain_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletepamainshpfile($id = null)
        {
            $sql1 = $this->db->where('id_pamain_shpfile',$id)
                                            ->get('tblpamain_shapfile')
                                            ->row();
            if (!empty($sql1->pamaps_shpfile)) {
                unlink('bmb_assets2/upload/pa_map_shpfile/'.$sql1->pamaps_shpfile);
            }

            $sql = "DELETE FROM tblpamain_shapfile WHERE id_pamain_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function upload_climate_shpfiles()
    {

        sleep(3);
        if($_FILES["climate_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/climate_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["climate_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["climate_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["climate_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["climate_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["climate_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["climate_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_climate_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'climate_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('climate_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_climate_shpfile '    => $this->input->post('id_climate_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'climate_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('climate_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_climate_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsaveclimate_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateclimate_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_mgmtzone_shpfiles()
    {

        sleep(3);
        if($_FILES["mgmtzone_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/managementzone_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["mgmtzone_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["mgmtzone_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["mgmtzone_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["mgmtzone_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["mgmtzone_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["mgmtzone_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_mgmtzone_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'mgmtzone_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('mgmtzone_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_mgmtzone_shpfile '    => $this->input->post('id_mgmtzone_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'mgmtzone_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('mgmtzone_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_mgmtzone_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavemgmtzone_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatemgmtzone_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImagemgmtzoneShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagemgmtzoneshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/managementzone_shpfile/'.$row->mgmtzone_shpfile.'" target="_blank">'.$row->mgmtzone_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_mgmtzone_shpfile" class="hidden" value="'.$row->id_mgmtzone_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removemgmtzoneshpfile" data-id="'.$row->id_mgmtzone_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletemgmtzoneshpfile($id = null)
        {
            $sql1 = $this->db->where('id_mgmtzone_shpfile',$id)
                                            ->get('tblpamanagementzone_shpfile')
                                            ->row();
            if (!empty($sql1->mgmtzone_shpfile)) {
                unlink('bmb_assets2/upload/managementzone_shpfile/'.$sql1->mgmtzone_shpfile);
            }

            $sql = "DELETE FROM tblpamanagementzone_shpfile WHERE id_mgmtzone_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchImageclimateShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageclimateshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/climate_shpfile/'.$row->climate_shpfile.'" target="_blank">'.$row->climate_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_climate_shpfile" class="hidden" value="'.$row->id_climate_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeclimateshpfile" data-id="'.$row->id_climate_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deleteclimateshpfile($id = null)
        {
            $sql1 = $this->db->where('id_climate_shpfile',$id)
                                            ->get('tblpaclimate_shpfile')
                                            ->row();
            if (!empty($sql1->climate_shpfile)) {
                unlink('bmb_assets2/upload/climate_shpfile/'.$sql1->climate_shpfile);
            }

            $sql = "DELETE FROM tblpaclimate_shpfile WHERE id_climate_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchImageforestformShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageforestformshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/ff_map_shpfile/'.$row->forestform_shpfile.'" target="_blank">'.$row->forestform_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_forestform_shpfile" class="hidden" value="'.$row->id_forestform_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeforestformshpfile" data-id="'.$row->id_forestform_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deleteforestformshpfile($id = null)
        {
            $sql1 = $this->db->where('id_forestform_shpfile',$id)
                                            ->get('tblpaforestformation_shpfile')
                                            ->row();
            if (!empty($sql1->forestform_shpfile)) {
                unlink('bmb_assets2/upload/ff_map_shpfile/'.$sql1->forestform_shpfile);
            }

            $sql = "DELETE FROM tblpaforestformation_shpfile WHERE id_forestform_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function upload_attractions_shpfiles()
    {

        sleep(3);
        if($_FILES["attractions_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/attraction_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["attractions_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["attractions_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["attractions_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["attractions_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["attractions_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["attractions_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_attaction_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'attraction_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('attractions_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_attaction_shpfile '    => $this->input->post('id_attaction_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'attraction_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('attractions_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_attaction_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsaveattractions_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateattractions_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_facility_shpfiles()
    {

        sleep(3);
        if($_FILES["facility_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/facility_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["facility_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["facility_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["facility_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["facility_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["facility_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["facility_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_facility_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'facility_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('facility_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_facility_shpfile '    => $this->input->post('id_facility_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'facility_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('facility_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_facility_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavefacility_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatefacility_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImagefacilityShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagefacilityshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/facility_shpfile/'.$row->facility_shpfile.'" target="_blank">'.$row->facility_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_facility_shpfile" class="hidden" value="'.$row->id_facility_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removefacilityshpfile" data-id="'.$row->id_facility_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletefacilityshpfile($id = null)
        {
            $sql1 = $this->db->where('id_facility_shpfile',$id)
                                            ->get('tblpafacility_shpfile')
                                            ->row();
            if (!empty($sql1->facility_shpfile)) {
                unlink('bmb_assets2/upload/facility_shpfile/'.$sql1->facility_shpfile);
            }

            $sql = "DELETE FROM tblpafacility_shpfile WHERE id_facility_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchImageattractionsShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImageattractionsshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/attraction_shpfile/'.$row->attraction_shpfile.'" target="_blank">'.$row->attraction_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_attaction_shpfile" class="hidden" value="'.$row->id_attaction_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removeattractionsshpfile" data-id="'.$row->id_attaction_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deleteattractionsshpfile($id = null)
        {
            $sql1 = $this->db->where('id_attaction_shpfile',$id)
                                            ->get('tblpaattraction_shpfile')
                                            ->row();
            if (!empty($sql1->attraction_shpfile)) {
                unlink('bmb_assets2/upload/attraction_shpfile/'.$sql1->attraction_shpfile);
            }

            $sql = "DELETE FROM tblpaattraction_shpfile WHERE id_attaction_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function upload_vegetative_shpfiles()
    {

        sleep(3);
        if($_FILES["vegetative_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/vegetative_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["vegetative_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["vegetative_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["vegetative_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["vegetative_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["vegetative_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["vegetative_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_vegetative_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'vegetative_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('vegetative_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_vegetative_shpfile '    => $this->input->post('id_vegetative_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'vegetative_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('vegetative_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_vegetative_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsavevegetative_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdatevegetative_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImagevegetativeShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagevegetativeshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/vegetative_shpfile/'.$row->vegetative_shpfile.'" target="_blank">'.$row->vegetative_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_vegetative_shpfile" class="hidden" value="'.$row->id_vegetative_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removevegetativeshpfile" data-id="'.$row->id_vegetative_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletevegetativeshpfile($id = null)
        {
            $sql1 = $this->db->where('id_vegetative_shpfile',$id)
                                            ->get('tblpavegetative_shpfile')
                                            ->row();
            if (!empty($sql1->vegetative_shpfile)) {
                unlink('bmb_assets2/upload/vegetative_shpfile/'.$sql1->vegetative_shpfile);
            }

            $sql = "DELETE FROM tblpavegetative_shpfile WHERE id_vegetative_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function upload_flooding_shpfiles()
    {

        sleep(3);
        if($_FILES["flooding_shpfile"]["name"] != '')
        {
         $output = array();
         $config["upload_path"] = 'bmb_assets2/upload/flooding_shpfile';
         $config["allowed_types"] = 'zip|rar';
         $this->load->library('upload', $config);
         $this->image_lib->initialize($config);
         $this->upload->initialize($config);

          for($count = 0; $count<count($_FILES["flooding_shpfile"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["flooding_shpfile"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["flooding_shpfile"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["flooding_shpfile"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["flooding_shpfile"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["flooding_shpfile"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_floodingimage_shpfile',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'flooding_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('flooding_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_flooding_shpfile'    => $this->input->post('id_floodingimage_shpfile',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'flooding_shpfile'       => (!empty($filenames)?$filenames:$this->input->post('flooding_shpfile_text')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_floodingimage_shpfile',true) == null) {
                $output['error'] = true;
                $query = $this->pamain_model->uploadsaveflooding_shpfile($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateflooding_shpfile($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchImagefloodingShpfile()
    {
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getAllImagefloodingshpfile($codegens);
        foreach($datar as $row){
            $output .= '
           <div class="col-md-12 col-xs-12">
             <i class="cap-icon ci-pdf"></i><a href="'.base_url().'bmb_assets2/upload/flooding_shpfile/'.$row->flooding_shpfile.'" target="_blank">'.$row->flooding_shpfile.'</a><br>
            <span>Uploaded on '.date("M d, Y",strtotime($row->date_upload)).'</span>
            <input type="text" name="id_floodingimage_shpfile" class="hidden" value="'.$row->id_flooding_shpfile.'" />
            <button type="button" class="btn btnbtn btn-danger btn-xs removefloodingshpfile" data-id="'.$row->id_flooding_shpfile.'" title="Remove">Remove</button>

           </div>
           ';
        }
        echo $output;
    }

    public function deletefloodingshpfile($id = null)
        {
            $sql1 = $this->db->where('id_flooding_shpfile',$id)
                                            ->get('tblpahazardflooding_shpfile')
                                            ->row();
            if (!empty($sql1->flooding_shpfile)) {
                unlink('bmb_assets2/upload/flooding_shpfile/'.$sql1->flooding_shpfile);
            }

            $sql = "DELETE FROM tblpahazardflooding_shpfile WHERE id_flooding_shpfile = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }




    public function upload_flooding_Image()
    {
        sleep(3);
        if($_FILES["img_flooding"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/flooding_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_flooding"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_flooding"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_flooding"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_flooding"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_flooding"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_flooding"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/flooding_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/flooding_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/flooding_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />

           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_floodingimage',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'flooding_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_flooding'    => $this->input->post('id_floodingimage',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'flooding_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_floodingimage',true) == null) {
                // $output['error'] = true;
                $query = $this->pamain_model->uploadsaveflooding($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateflooding($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function upload_forestform_Image()
    {
        sleep(3);
        if($_FILES["img_ffmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/ff_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_ffmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_ffmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_ffmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_ffmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_ffmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_ffmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/ff_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/ff_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/ff_map_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_forestform',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'ff_map_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveforestform($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_forestform'    => $this->input->post('id_forestform',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'ff_map_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateforestform($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('id_forestform',true) == null) {
            //     $output['error'] = true;
            //     $query = $this->pamain_model->uploadsaveforestform($postDatas);
            // } else {
            //     $query = $this->pamain_model->uploadUpdateforestform($postData);
            // }

            // if (!empty($this->input->post('id_forestform'))) {
            //     $output['error'] = true;
            // } else {
            // }


        // }
         }
         echo $output;
        }
    }

    public function upload_cave_Image()
    {
        sleep(3);
        if($_FILES["img_cavemap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/cavemap_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_cavemap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_cavemap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_cavemap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_cavemap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_cavemap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_cavemap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/cavemap_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/cavemap_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/cavemap_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_cavemap',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'cavemap_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavecave($postDatas);

        }else {
           $data['data'] = (object)$postData = [
            'id_cavemap'    => $this->input->post('id_cavemap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'cavemap_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatecave($postData);

        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('id_cavemap',true) == null) {
            //     $output['error'] = true;
            //     $query = $this->pamain_model->uploadsavecave($postData);
            // } else {
            //     $query = $this->pamain_model->uploadUpdatecave($postData);
            // }
            //  if (!empty($this->input->post('id_cavemap'))) {
            //     $output['error'] = true;
            // } else {
            // }

        // }
         }
         echo $output;
        }
    }

    public function upload_threatMap_Image()
    {
        sleep(3);
        if($_FILES["img_threatmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/img_threat_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_threatmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_threatmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_threatmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_threatmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_threatmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_threatmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/img_threat_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/img_threat_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/img_threat_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_threatmap',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'threat_map_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavethreatmap($postData);
        }else {
           $data['data'] = (object)$postData = [
            'id_threatmap'    => $this->input->post('id_threatmap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'threat_map_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatethreatmap($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_threatmap',true) == null) {
        //         $output['error'] = true;
        //     } else {
        //     }
        // }
         }
         echo $output;
        }
    }



    public function upload_iw_Image()
    {
        sleep(3);
        if($_FILES["img_iwmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/iwmap';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_iwmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_iwmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_iwmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_iwmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_iwmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_iwmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/iwmap/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/iwmap/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwmap/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('iw_id',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'iw_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveiw($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'iw_id'    => $this->input->post('iw_id',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'iw_img'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateiw($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('iw_id',true) == null) {
            //     $output['error'] = true;
            //     $query = $this->pamain_model->uploadsaveiw($postData);
            // } else {
            //     $query = $this->pamain_model->uploadUpdateiw($postData);
            // }

            //  if (!empty($this->input->post('iw_id'))) {
            //     $output['error'] = true;
            // } else {
            // }


        // }
         }
         echo $output;
        }
    }

    public function upload_hiw_Image()
    {
        sleep(3);
        if($_FILES["img_hiwmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/iwhumanmade_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_hiwmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_hiwmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_hiwmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_hiwmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_hiwmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_hiwmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/iwhumanmade_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/iwhumanmade_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/iwhumanmade_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('hiw_id',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'hiw_img'       => (!empty($filenames)?$filenames:$this->input->post('hold_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavehiw($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'hiw_id'    => $this->input->post('hiw_id',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'hiw_img'       => (!empty($filenames)?$filenames:$this->input->post('hold_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatehiw($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('hiw_id',true) == null) {
            //     $output['error'] = true;
            //     $query = $this->pamain_model->uploadsavehiw($postData);
            // } else {
            //     $query = $this->pamain_model->uploadUpdatehiw($postData);
            // }

            //  if (!empty($this->input->post('hiw_id'))) {
            //     $output['error'] = true;
            // } else {
            // }

        // }
         }
         echo $output;
        }
    }
    public function upload_pa_Image()
    {
        sleep(3);


        if($_FILES["img_pamap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/pa_profile_pic';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_pamap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_pamap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_pamap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_pamap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_pamap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_pamap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/pa_profile_pic/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/pa_profile_pic/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/pa_profile_pic/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_pa_image',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'pa_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavepa($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_pa_image'    => $this->input->post('id_pa_image',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'pa_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatepa($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('id_pa_image',true) == null) {
            //     $output['error'] = true;
            //     $query = $this->pamain_model->uploadsavepa($postDatas);
            // } else {
            //     $query = $this->pamain_model->uploadUpdatepa($postData);
            // }

            //  if (!empty($this->input->post('id_pa_image'))) {
            //     $output['error'] = true;
            // } else {
            // }

            //
        // }
         }
         echo $output;
        }
    }

    public function upload_coral_Image()
    {
        sleep(3);
        if($_FILES["img_coralmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/coralreef_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_coralmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_coralmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_coralmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_coralmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_coralmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_coralmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_coralmap',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'coastal_generatedcode '    => $this->input->post('genCoral',true),
            'coralreefmap'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavecoral($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_coralmap'    => $this->input->post('id_coralmap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'coastal_generatedcode '    => $this->input->post('genCoral',true),
            'coralreefmap'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatecoral($postData);
        }
         }
         echo $output;
        }
    }

    public function upload_coral_Image_indi()
    {
        sleep(3);
        if($_FILES["img_coralmap_indi"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/coralreef_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_coralmap_indi"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_coralmap_indi"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_coralmap_indi"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_coralmap_indi"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_coralmap_indi"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_coralmap_indi"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_po_product_image()
    {
        sleep(3);
        if($_FILES["img_po_product"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_po_product_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_po_product"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_po_product"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_po_product"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_po_product"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_po_product"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_po_product"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/bdfe_po_product_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/bdfe_po_product_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_seagrass_Image_indi()
    {
        sleep(3);
        if($_FILES["img_seagrassmap_indi"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/seagrass_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_seagrassmap_indi"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_seagrassmap_indi"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_seagrassmap_indi"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_seagrassmap_indi"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_seagrassmap_indi"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_seagrassmap_indi"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_mangrove_Image_indi()
    {
        sleep(3);
        if($_FILES["img_mangrovemap_indi"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/mangrove_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_mangrovemap_indi"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_mangrovemap_indi"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_mangrovemap_indi"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_mangrovemap_indi"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_mangrovemap_indi"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_mangrovemap_indi"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_seagrass_Image_indi_edit()
    {
        sleep(3);
        if($_FILES["edit-img_seagrassmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/seagrass_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-img_seagrassmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-img_seagrassmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-img_seagrassmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-img_seagrassmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-img_seagrassmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-img_seagrassmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_mangrove_Image_indi_edit()
    {
        sleep(3);
        if($_FILES["edit-img_mangrovemap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/mangrove_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-img_mangrovemap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-img_mangrovemap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-img_mangrovemap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-img_mangrovemap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-img_mangrovemap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-img_mangrovemap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_coral_Image_indi_edit()
    {
        sleep(3);
        if($_FILES["edit-img_coralmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/coralreef_map_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-img_coralmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-img_coralmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-img_coralmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-img_coralmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-img_coralmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-img_coralmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/coralreef_map_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];
           $output = $filenames;
           $data = $this->upload->data();
          }
        }
         echo $output;
        }
    }

    public function upload_seagrass_Image()
    {
        sleep(3);
        if($_FILES["img_seagrassmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/seagrass_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_seagrassmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_seagrassmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_seagrassmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_seagrassmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_seagrassmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_seagrassmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/seagrass_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/seagrass_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_seagrassmap',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'seagrass_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsaveseagrass($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_seagrassmap'    => $this->input->post('id_seagrassmap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'seagrass_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdateseagrass($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('id_seagrassmap',true) == null) {
            //     // $output['error'] = true;
            //     $query = $this->pamain_model->uploadsaveseagrass($postData);
            // } else {
            //     $query = $this->pamain_model->uploadUpdateseagrass($postData);
            // }

            // if (!empty($this->input->post('id_seagrassmap'))) {
            //     $output['error'] = true;
            // } else {
            // }


        // }
         }
         echo $output;
        }
    }

    public function upload_mngmtzone_Image()
    {
        sleep(3);
        if($_FILES["img_mngtzonemap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/managementzone_img';
         $config["allowed_types"] = 'gif|jpg|jpeg';
         $config['quality'] = '60%';
         $config['width'] = 200;
         $config['height'] = 200;
         $this->load->library('image_lib', $config);
         $this->image_lib->resize();
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_mngtzonemap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_mngtzonemap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_mngtzonemap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_mngtzonemap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_mngtzonemap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_mngtzonemap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/managementzone_img/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/managementzone_img/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/managementzone_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_management',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode_mgnt '    => $this->input->post('gencode',true),
            'managementzone_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavemngmtzone($postData);
        }else {
           $data['data'] = (object)$postData = [
            'id_management'    => $this->input->post('id_management',true),
            'generatedcode_mgnt'    => $this->input->post('gencode',true),
            'managementzone_image'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatemngmtzone($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
            // if ($this->input->post('id_management',true) == null) {
            //     // $output['error'] = true;
            // } else {
            // }


        // }
         }
         echo $output;
        }
    }

    public function upload_mangrove_Image()
    {
        sleep(3);
        if($_FILES["img_mangrovemap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/mangrove_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_mangrovemap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_mangrovemap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_mangrovemap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_mangrovemap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_mangrovemap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_mangrovemap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/mangrove_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/mangrove_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_mangrove_map',true) == null) {
          $data['data'] = (object)$postDatas = [
            'generatedcode '    => $this->input->post('gencode',true),
            'mangrove_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavemangrove($postDatas);
        }else {
           $data['data'] = (object)$postData = [
            'id_mangrove_map'    => $this->input->post('id_mangrove_map',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'mangrove_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatemangrove($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_mangrove_map',true) == null) {
        //         // $output['error'] = true;
        //         $query = $this->pamain_model->uploadsavemangrove($postData);
        //     } else {
        //         $query = $this->pamain_model->uploadUpdatemangrove($postData);
        //     }


        // }
         // if (!empty($this->input->post('id_mangrove_map'))) {
         //        $output['error'] = true;
         //    } else {
         //    }
         }
         echo $output;
        }
    }

    public function upload_attraction_Image()
    {
        sleep(3);
        if($_FILES["img_attractionmap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/attraction_map';
         $config["allowed_types"] = 'gif|jpg|png';
         // $config['max_size'] = '100'; // max_size in kb
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_attractionmap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_attractionmap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_attractionmap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_attractionmap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_attractionmap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_attractionmap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
            $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/attraction_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/attraction_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            // $filenames = $data['file_name'];
            // $output['status'] = $filenames;
            // echo json_encode($output);


           // $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/attraction_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }else{
           //  $output .= '
           //  The image you upload is to large, please upload atleast 100kb only.
           // ';
            $data_err =  $this->upload->display_errors();
          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_attraction_map',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'attraction_img_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_attraction_map'    => $this->input->post('id_attraction_map',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'attraction_img_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_attraction_map',true) == null) {
                // $output['error'] = true;
                $query = $this->pamain_model->uploadsaveattraction($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateattraction($postData);
            }


        }
         }
         echo $output;
         echo json_encode($data_err);
        }
    }

    public function upload_facility_Image()
    {
        sleep(3);
        if($_FILES["img_facilitymap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/facility_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_facilitymap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_facilitymap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_facilitymap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_facilitymap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_facilitymap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_facilitymap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $config['image_library'] = 'gd2';
           $config['source_image'] = 'bmb_assets2/upload/facility_map/'.$uploadData["file_name"];;
           $config['create_thumb'] = FALSE;
           $config['maintain_ratio'] = FALSE;
           $config['quality'] = '60%';
           $config['width'] = 800;
           $config['height'] = 600;
           $config['new_image'] = 'bmb_assets2/upload/facility_map/'.$uploadData["file_name"];
           $this->load->library('image_lib', $config);
           $this->image_lib->initialize($config);
           $this->image_lib->resize();

           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/facility_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_facilitymap',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'facility_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadsavefacility($postData);
        }else {
           $data['data'] = (object)$postData = [
            'id_facilitymap'    => $this->input->post('id_facilitymap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'facility_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
                $query = $this->pamain_model->uploadUpdatefacility($postData);
        }
        // if ($this->form_validation->run() == false) {
        //     $output['error'] = true;
        //     $output['status'] = validation_errors();
        // }else{
        //     if ($this->input->post('id_facilitymap',true) == null) {
        //         // $output['error'] = true;
        //     } else {
        //     }


        // }
         }
         echo $output;
        }
    }

    public function upload_activity_Image()
    {
        sleep(3);
        if($_FILES["img_activitymap"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/activity_map';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["img_activitymap"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["img_activitymap"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["img_activitymap"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["img_activitymap"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["img_activitymap"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["img_activitymap"]["size"][$count];

          if($this->upload->do_upload('file'))
          {

            $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/activity_map/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/activity_map/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();

           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img style="width:500px;height:400px" src="'.base_url().'bmb_assets2/upload/activity_map/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $this->form_validation->set_rules('gencode','Code','required');

        if ($this->input->post('id_ecotourismmap',true) == null) {
          $data['data'] = (object)$postData = [
            'generatedcode '    => $this->input->post('gencode',true),
            'ecotourism_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }else {
           $data['data'] = (object)$postData = [
            'id_ecotourismmap'    => $this->input->post('id_ecotourismmap',true),
            'generatedcode'    => $this->input->post('gencode',true),
            'ecotourism_map'       => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'date_upload'       =>  date("Y-m-d")
          ];
        }
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if ($this->input->post('id_ecotourismmap',true) == null) {
                // $output['error'] = true;
                $query = $this->pamain_model->uploadsaveecotourism($postData);
            } else {
                $query = $this->pamain_model->uploadUpdateecotourism($postData);
            }


        }
         }
         echo $output;
        }
    }

    public function fetchbdfeappraisals(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getBDFEappraisals($codegens);
        foreach($data as $row): ?>
             <tr id="<?php echo $row->id_bdfe_appraisal; ?>" class="trow">
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <td class="hidden"><?php echo $row->bdfe_codegen; ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_month; ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_day; ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_year; ?></td>
                <td class="hidden"><?php echo $row->bdfe_level; ?></td>

                <td class="hidden"><?php echo $row->rapidhabitatassess_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->rapidhabitatassess_file."'>".$row->rapidhabitatassess_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->businesspermit_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->businesspermit_file."'>".$row->businesspermit_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->poinventory_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->poinventory_file."'>".$row->poinventory_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->bamsresult_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/strengthened_file/").$row->bamsresult_file."'>".$row->bamsresult_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->businessplan_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/strengthened_file/").$row->businessplan_file."'>".$row->businessplan_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->seamsresult_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/strengthened_file/").$row->seamsresult_file."'>".$row->seamsresult_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->updatebusinessplan_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->updatebusinessplan_file."'>".$row->updatebusinessplan_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->bamsresultdeveloped_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->bamsresultdeveloped_file."'>".$row->bamsresultdeveloped_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->businesspermitdeveloped_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->businesspermitdeveloped_file."'>".$row->businesspermitdeveloped_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->pppagreementdeveloped_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->pppagreementdeveloped_file."'>".$row->pppagreementdeveloped_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->lguresolution_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/sustained_file/").$row->lguresolution_file."'>".$row->lguresolution_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->bamsresultsustained_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/sustained_file/").$row->bamsresultsustained_file."'>".$row->bamsresultsustained_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->seamsresultsustained_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/sustained_file/").$row->seamsresultsustained_file."'>".$row->seamsresultsustained_file."</a>" ?></td>

                <td class="hidden"><?php echo $row->submissionappraisalpdf_file; ?></td>
                <td class="hidden"><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/submission_appraisal_pdf/").$row->submissionappraisalpdf_file."'>".$row->submissionappraisalpdf_file."</a>" ?></td>

                <td><?php echo (!empty($row->date_appraisal_month)?$row->date_appraisal_month."/":"").(!empty($row->date_appraisal_day)?$row->date_appraisal_day."/":"").(!empty($row->date_appraisal_year)?$row->date_appraisal_year:""); ?></td>
                <td><?php echo (!empty($row->bdfe_level)?$row->bdfe_level_desc:"") ?></td>
                <?php
                    $appcode = $row->appraisal_code;

                    $StrenghtBAMS = "";
                    $data1 = $this->pamain_model->getBDFEappraisalsSTREGNTHBAMS($appcode);
                    foreach($data1 as $row1):
                        $StrenghtBAMS = $row1->bams_file_attached;
                    endforeach;

                    $StrenghtSEAMS = "";
                    $StrenghtSAUT = "";
                    $data2 = $this->pamain_model->getBDFEappraisalsSTREGNTHSEAMS($appcode);
                    foreach($data2 as $row2):
                        $StrenghtSEAMS = $row2->seams_file_attached;
                        $StrenghtSAUT = $row2->saut_file;
                    endforeach;
                ?>
                <td class="hidden"><?php echo $row->appraisal_code; ?></td> <!-- #36 -->
                <td>
                    <?php if ($row->bdfe_level==1) {
                        echo (!empty($row->rapidhabitatassess_file)?"Rapid Habitat Assessment : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->rapidhabitatassess_file."'>".$row->rapidhabitatassess_file."</a>":"").
                            (!empty($row->businesspermit_file)?"<br>Copy of Business Permit : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->businesspermit_file."'>".$row->businesspermit_file."</a>":"").
                            (!empty($row->poinventory_file)?"<br>PO Inventory : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/appraisal_file/").$row->poinventory_file."'>".$row->poinventory_file."</a>":"");
                    }else if($row->bdfe_level==2){
                        echo (!empty($row->strengthenedbusinessplan_file)?"Business Plan : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/strengthened_file/").$row->strengthenedbusinessplan_file."'>".$row->strengthenedbusinessplan_file."</a>":"").
                            (!empty($StrenghtSEAMS)?"<br>SEAMS Report : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_file/").$StrenghtSEAMS."'>".$StrenghtSEAMS."</a>":"").
                            (!empty($StrenghtBAMS)?"<br>BAMS Report : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_bams_file/").$StrenghtBAMS."'>".$StrenghtBAMS."</a>":"");
                    }else if($row->bdfe_level==3){
                        echo (!empty($StrenghtBAMS)?"BAMS Report : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_bams_file/").$StrenghtBAMS."'>".$StrenghtBAMS."</a>":"").
                            (!empty($row->updatebusinessplan_file)?"<br>Updated Business Plan : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->updatebusinessplan_file."'>".$row->updatebusinessplan_file."</a>":"").
                            (!empty($row->businesspermitdeveloped_file)?"<br>Copy of Business Permit : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->businesspermitdeveloped_file."'>".$row->businesspermitdeveloped_file."</a>":"").
                            (!empty($row->pppagreementdeveloped_file)?"<br>PPP Agreement : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/developed_file/").$row->pppagreementdeveloped_file."'>".$row->pppagreementdeveloped_file."</a>":"");
                    }else if($row->bdfe_level==4){
                        echo (!empty($row->lguresolution_file)?"LGU Resolution : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/sustained_file/").$row->lguresolution_file."'>".$row->lguresolution_file."</a>":"").
                            (!empty($StrenghtBAMS)?"<br>BAMS Report : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_bams_file/").$StrenghtBAMS."'>".$StrenghtBAMS."</a>":"").
                            (!empty($StrenghtSEAMS)?"<br>SEAMS Report : <i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_file/").$StrenghtSEAMS."'>".$StrenghtSEAMS."</a>":"");
                    }
                    ?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($data1 as $cc):$pctr+=1;
                    if(!empty($cc->bdfe_appraisal_code)):
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_bams_result?>" class="showdata" style="display: inline-block;">
                    <fieldset>
                        <div class="col-xs-12" style="display: table-cell;">
                            <b>Filename : </b><?php echo $cc->bams_filename; ?><br>
                            <b>File attached : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_bams_file/").$cc->bams_file_attached."'>".$cc->bams_file_attached."</a><br>"; ?>
                            <b>Date conducted : </b><?php echo (!empty($cc->bams_date_month)?$cc->month." ":"").(!empty($cc->bams_date_year)?$cc->bams_date_year:""); ?><br>
                            <b>Status : </b><?php echo (!empty($cc->bams_status)?$cc->tenure_status_desc:""); ?><br>
                            <b>Remarks : </b><?php echo $cc->bams_remarks; ?><br>
                        </div>
                        <button type="button" class="btn btn-danger btn-xs removebdfeappraisalbams" id="<?php echo $cc->id_bams_result ?>" data-id="<?php echo $cc->id_bams_result ?>">Remove
                    </button>
                    </fieldset>

                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td class="hidden">
                    <?php $pctr=0;foreach($data2 as $dd):$pctr+=1;
                    if(!empty($dd->bdfe_appraisal_code)):
                    ?>
                    <div id="divdevelopmentedit<?php echo $dd->id_seams_result?>" class="showdata" style="display: inline-block;">
                    <fieldset>
                        <div class="col-xs-12" style="display: table-cell;">
                            <b>Filename : </b><?php echo $dd->seams_filename; ?><br>
                            <b>File attached : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_file/").$dd->seams_file_attached."'>".$dd->seams_file_attached."</a><br>"; ?>
                            <b>Date conducted : </b><?php echo (!empty($dd->seams_date_month)?$dd->month." ":"").(!empty($dd->seams_date_year)?$dd->seams_date_year:""); ?><br>
                            <b>Status : </b><?php echo (!empty($dd->seams_status)?$dd->tenure_status_desc:""); ?><br>
                            <b>SEAMS Automated Utility Tool : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_saut/").$dd->saut_file."'>".$dd->saut_file."</a><br>"; ?>
                            <b>Remarks : </b><?php echo $dd->seams_remarks; ?><br>
                        </div>
                        <button type="button" class="btn btn-danger btn-xs removebdfeappraisalseams" id="<?php echo $dd->id_seams_result ?>" data-id="<?php echo $dd->id_seams_result ?>">Remove
                    </button>
                    </fieldset>

                    </div>
                    <?php endif; endforeach;?>
                </td>
                <td>
                    <?php echo (!empty($row->submissionappraisalpdf_file)?"<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/submission_appraisal_pdf/").$row->submissionappraisalpdf_file."'>".$row->submissionappraisalpdf_file."</a>":"No file attached") ?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_bdfe_appraisal;?>" class="btn btn-info btn-xs btn-edit-topo" onclick="edit_bdfe_appraisals(this);">Edit</button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebdfeappraisals" data-id="<?php echo $row->id_bdfe_appraisal ?>" title="Remove">Remove</button>
                    <input type="hidden" id="bdfeapps1<?php echo $row->id_bdfe_appraisal ?>" value="<?php echo $row->id_bdfe_appraisal ?>" />

                </td>
             </tr>
            <?php endforeach;

    }

    public function deletebdfeappraisalbams($id = null)
    {
        $sql = "DELETE FROM tblbamsresult WHERE id_bams_result = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
          echo json_encode($output);
    }

    public function deletebdfeappraisalseams($id = null)
    {
        $sql = "DELETE FROM tblseamsresult WHERE id_seams_result = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
          echo json_encode($output);
    }

    public function insertbdfeappraisalsbams()
{
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('editbdfeappraisal-code',true),
            'bdfe_codegen' => $this->input->post('editbdfeappraisal-gencode',true),
            'bdfe_appraisal_code' => $this->input->post('editbdfeappraisal-gencode3',true),
            'bams_filename' => $this->input->post('edit-bdfebams_filename',true),
            'bams_date_month' => $this->input->post('edit-bdfebams_date_month',true),
            'bams_date_year' => $this->input->post('edit-bdfebams_date_year',true),
            'bams_status' => $this->input->post('edit-bdfebams_status',true),
            'bams_remarks' => $this->input->post('edit-bdfebams_remarks',true),
            'bams_file_attached' => $this->input->post('edit-bamsstrresult_span',true),
            'date_created' => date("Y-m-d"),
        ];
        $query = $this->pamain_model->createbamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added BAMS Report!';
        }else{

        }
        echo json_encode($output);
}

 public function insertbdfeappraisalsbamsdev()
{
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('editbdfeappraisal-code',true),
            'bdfe_codegen' => $this->input->post('editbdfeappraisal-gencode',true),
            'bdfe_appraisal_code' => $this->input->post('editbdfeappraisal-gencode3',true),
            'bams_filename' => $this->input->post('edit-bdfebamsdev_filename',true),
            'bams_date_month' => $this->input->post('edit-bdfebamsdev_date_month',true),
            'bams_date_year' => $this->input->post('edit-bdfebamsdev_date_year',true),
            'bams_status' => $this->input->post('edit-bdfebamsdev_status',true),
            'bams_remarks' => $this->input->post('edit-bdfebamsdev_remarks',true),
            'bams_file_attached' => $this->input->post('edit-bamsresultdeveloped_span',true),
            'date_created' => date("Y-m-d"),
        ];
        $query = $this->pamain_model->createbamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added BAMS Report!';
        }else{

        }
        echo json_encode($output);
}

 public function insertbdfeappraisalsbamsSus()
{
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('editbdfeappraisal-code',true),
            'bdfe_codegen' => $this->input->post('editbdfeappraisal-gencode',true),
            'bdfe_appraisal_code' => $this->input->post('editbdfeappraisal-gencode3',true),
            'bams_filename' => $this->input->post('edit-bdfesusbams_filename',true),
            'bams_date_month' => $this->input->post('edit-bdfesusbams_date_month',true),
            'bams_date_year' => $this->input->post('edit-bdfesusbams_date_year',true),
            'bams_status' => $this->input->post('edit-bdfesusbams_status',true),
            'bams_remarks' => $this->input->post('edit-bdfesusbams_remarks',true),
            'bams_file_attached' => $this->input->post('edit-bamsresultsustained_span',true),
            'date_created' => date("Y-m-d"),
        ];
        $query = $this->pamain_model->createbamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added BAMS Report!';
        }else{

        }
        echo json_encode($output);
}

 public function insertbdfeappraisalsstrseams()
{
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('editbdfeappraisal-code',true),
            'bdfe_codegen' => $this->input->post('editbdfeappraisal-gencode',true),
            'bdfe_appraisal_code' => $this->input->post('editbdfeappraisal-gencode3',true),
            'seams_filename' => $this->input->post('edit-bdfeseams_filename',true),
            'seams_date_month' => $this->input->post('edit-bdfeseams_date_month',true),
            'seams_date_year' => $this->input->post('edit-bdfeseams_date_year',true),
            'seams_status' => $this->input->post('edit-bdfebams_status',true),
            'seams_remarks' => $this->input->post('edit-bdfeseams_remarks',true),
            'seams_file_attached' => $this->input->post('edit-bdfestrseamsresult_span',true),
            'saut_file' => $this->input->post('edit-bdfestrseamsuat_span',true),
            'date_created' => date("Y-m-d"),
        ];
        $query = $this->pamain_model->createseamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added SEAMS Report!';
        }else{

        }
        echo json_encode($output);
}

public function insertbdfeappraisalsstrseamsSus()
{
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('editbdfeappraisal-code',true),
            'bdfe_codegen' => $this->input->post('editbdfeappraisal-gencode',true),
            'bdfe_appraisal_code' => $this->input->post('editbdfeappraisal-gencode3',true),
            'seams_filename' => $this->input->post('edit-bdfesusseams_filename',true),
            'seams_date_month' => $this->input->post('edit-bdfesusseams_date_month',true),
            'seams_date_year' => $this->input->post('edit-bdfesusseams_date_year',true),
            'seams_status' => $this->input->post('edit-bdfesusbams_status',true),
            'seams_remarks' => $this->input->post('edit-bdfesusseams_remarks',true),
            'seams_file_attached' => $this->input->post('edit-seamsresultsustained_span',true),
            'saut_file' => $this->input->post('edit-bdfesusseamsuat_span',true),
            'date_created' => date("Y-m-d"),
        ];
        $query = $this->pamain_model->createseamsresults($postData);

        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added SEAMS Report!';
        }else{

        }
        echo json_encode($output);
}

    public function refreshbdfebams()
    {
        $code2 = $this->input->post('code');
        $data2 = $this->pamain_model->getBDFEappraisalsSTREGNTHBAMS($code2);

        $pctr=0;foreach($data2 as $cc):$pctr+=1;
        if(!empty($cc->bdfe_appraisal_code)):
        ?>
        <div id="divdevelopmentedit<?php echo $cc->id_bams_result?>" class="showdata" style="display: inline-block;">
            <fieldset>
                <div class="col-xs-12" style="display: table-cell;">
                    <b>Filename : </b><?php echo $cc->bams_filename; ?><br>
                    <b>File attached : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_bams_file/").$cc->bams_file_attached."'>".$cc->bams_file_attached."</a><br>"; ?>
                    <b>Date conducted : </b><?php echo (!empty($cc->bams_date_month)?$cc->month." ":"").(!empty($cc->bams_date_year)?$cc->bams_date_year:""); ?><br>
                    <b>Status : </b><?php echo (!empty($cc->bams_status)?$cc->tenure_status_desc:""); ?><br>
                    <b>Remarks : </b><?php echo $cc->bams_remarks; ?><br>
                </div>
                <button type="button" class="btn btn-danger btn-xs removebdfeappraisalbams" id="<?php echo $cc->id_bams_result ?>" data-id="<?php echo $cc->id_bams_result ?>">Remove
            </button>
            </fieldset>
        </div>
        <?php endif; endforeach;

    }

    public function refreshbdfeseams()
    {
        $code2 = $this->input->post('code');
        $data2 = $this->pamain_model->getBDFEappraisalsSTREGNTHSEAMS($code2);
        $pctr=0;foreach($data2 as $dd):$pctr+=1;
        if(!empty($dd->bdfe_appraisal_code)):
        ?>
        <div id="divdevelopmentedit<?php echo $dd->id_seams_result?>" class="showdata" style="display: inline-block;">
            <fieldset>
                <div class="col-xs-12" style="display: table-cell;">
                    <b>Filename : </b><?php echo $dd->seams_filename; ?><br>
                    <b>File attached : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_file/").$dd->seams_file_attached."'>".$dd->seams_file_attached."</a><br>"; ?>
                    <b>Date conducted : </b><?php echo (!empty($dd->seams_date_month)?$dd->month." ":"").(!empty($dd->seams_date_year)?$dd->seams_date_year:""); ?><br>
                    <b>Status : </b><?php echo (!empty($dd->seams_status)?$dd->tenure_status_desc:""); ?><br>
                    <b>SEAMS Automated Utility Tool : </b><?php echo "<i class='cap-icon ci-paperclip'></i><a target='_blank' href='".base_url("bmb_assets2/upload/mne_seams_saut/").$dd->saut_file."'>".$dd->saut_file."</a><br>"; ?>
                    <b>Remarks : </b><?php echo $dd->seams_remarks; ?><br>
                </div>
                <button type="button" class="btn btn-danger btn-xs removebdfeappraisalseams" id="<?php echo $dd->id_seams_result ?>" data-id="<?php echo $dd->id_seams_result ?>">Remove
            </button>
            </fieldset>
        </div>
        <?php endif; endforeach;
    }

    public function deletebdfeappraisals($id = null)
        {
        $sql = "DELETE FROM tblpalivelihood_appraisal WHERE id_bdfe_appraisal = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function insertbdfeappraisals()
    {
        $output = array();
        $rel_data1 = $this->input->post('tablebamsStr');
        $rel_data2 = $this->input->post('tableseamStr');
        $rel_data3 = $this->input->post('tablebamsDev');
        $rel_data4 = $this->input->post('tablebamsSustained');
        $rel_data5 = $this->input->post('tableseamSustained');

        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('bdfeappraisal-gencode',true),
            'bdfe_codegen' => $this->input->post('bdfeappraisal-gencode2',true),
            'appraisal_code' => $this->input->post('bdfeappraisal-gencode3',true),
            'date_appraisal_month' => $this->input->post('date_appraisal_month',true),
            'date_appraisal_day' => $this->input->post('date_appraisal_day',true),
            'date_appraisal_year' => $this->input->post('date_appraisal_year',true),
            'bdfe_level' => $this->input->post('bdfe_level',true),
            // 'bamsresult_file' => $this->input->post('bamsresult_span',true),
            'businessplan_file' => $this->input->post('businessplan_span',true),
            // 'seamsresult_file' => $this->input->post('seamsresult_span',true),
            'rapidhabitatassess_file' => $this->input->post('rapidhabitatassess_span',true),
            'businesspermit_file' => $this->input->post('businesspermit_span',true),
            'poinventory_file' => $this->input->post('poinventory_span',true),
            // 'strengthenedbamsresult_file' => $this->input->post('bamsresult_span',true),
            'strengthenedbusinessplan_file' => $this->input->post('businessplan_span',true),
            // 'strengthenedseams_file' => $this->input->post('seamsresult_span',true),
            'updatebusinessplan_file' => $this->input->post('updatebusinessplan_span',true),
            // 'bamsresultdeveloped_file' => $this->input->post('bamsresultdeveloped_span',true),
            'businesspermitdeveloped_file' => $this->input->post('businesspermitdeveloped_span',true),
            'pppagreementdeveloped_file' => $this->input->post('pppagreementdeveloped_span',true),
            'lguresolution_file' => $this->input->post('lguresolution_span',true),
            // 'bamsresultsustained_file' => $this->input->post('bamsresultsustained_span',true),
            // 'seamsresultsustained_file' => $this->input->post('seamsresultsustained_span',true),
            'submissionappraisalpdf_file' => $this->input->post('submissionappraisalpdf_span',true),
        ];
                $query = $this->pamain_model->createndfeappraisals($postData,$rel_data1,$rel_data2,$rel_data3,$rel_data4,$rel_data5);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Appraisal';
                }else{

                }
        echo json_encode($output);
    }

    public function insertbdfelocations()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('bdfeporesourceloc-gencode',true),
            'bdfe_codegen' => $this->input->post('bdfeporesourceloc-gencode2',true),
            'lhproductsources' => $this->input->post('lhproductsource',true),
            'lh_long_directions' => $this->input->post('lh_long_direction',true),
            'lh_long_degs' => str_replace(',','',$this->input->post('lh_long_deg',true)),
            'lh_long_mins' => str_replace(',','',$this->input->post('lh_long_min',true)),
            'lh_long_secs' => str_replace(',','',$this->input->post('lh_long_sec',true)),
            'lh_dmstodds' => str_replace(',','',$this->input->post('lh_dmstodd',true)),
            'lh_lat_directions' => $this->input->post('lh_lat_direction',true),
            'lh_lat_degs' => str_replace(',','',$this->input->post('lh_lat_deg',true)),
            'lh_lat_mins' => str_replace(',','',$this->input->post('lh_lat_min',true)),
            'lh_lat_secs' => str_replace(',','',$this->input->post('lh_lat_sec',true)),
            'lh_dmstodd2s' => str_replace(',','',$this->input->post('lh_dmstodd2',true)),
            'lh_product_source_area' => str_replace(',','',$this->input->post('lh_area',true)),
            'lh_resource_shpfile' => $this->input->post('zip_shpfile_bdferesource_text')
        ];
                $query = $this->pamain_model->createndfelocations($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO location';
                }else{

                }
        echo json_encode($output);
    }

    public function insertbdfepoproducts()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('bdfepoproduct-gencode',true),
            'bdfe_codegen' => $this->input->post('bdfepoproduct-gencode2',true),
            'po_product_name' => $this->input->post('lhproductsname',true),
            'po_product_image' => $this->input->post('img_po_product_span',true),
        ];
                $query = $this->pamain_model->createndfepoproducts($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO products';
                }else{

                }
        echo json_encode($output);
    }

    public function insertbdfelocationsEdit()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('bdfe-gencode',true),
            'bdfe_codegen' => $this->input->post('bdfe-gencode2',true),
            'lhproductsources' => $this->input->post('edit-lhproductsource',true),
            'lh_regs' => $this->input->post('edit-lh_reg',true)==null?"":$this->input->post('edit-lh_reg',true),
            'lh_provs' => $this->input->post('edit-lh_prov',true)==null?"":$this->input->post('edit-lh_prov',true),
            'lh_muns' => $this->input->post('edit-lh_mun',true)==null?"":$this->input->post('edit-lh_mun',true),
            'lh_barangays' => $this->input->post('edit-lh_barangay',true)==null?"":$this->input->post('edit-lh_barangay',true),
            'lh_long_directions' => $this->input->post('edit-lh_long_direction',true),
            'lh_long_degs' => str_replace(',','',$this->input->post('edit-lh_long_deg',true)),
            'lh_long_mins' => str_replace(',','',$this->input->post('edit-lh_long_min',true)),
            'lh_long_secs' => str_replace(',','',$this->input->post('edit-lh_long_sec',true)),
            'lh_dmstodds' => str_replace(',','',$this->input->post('edit-lh_dmstodd',true)),
            'lh_lat_directions' => $this->input->post('edit-lh_lat_direction',true),
            'lh_lat_degs' => str_replace(',','',$this->input->post('edit-lh_lat_deg',true)),
            'lh_lat_mins' => str_replace(',','',$this->input->post('edit-lh_lat_min',true)),
            'lh_lat_secs' => str_replace(',','',$this->input->post('edit-lh_lat_sec',true)),
            'lh_dmstodd2s' => str_replace(',','',$this->input->post('edit-lh_dmstodd2',true)),
        ];
                $query = $this->pamain_model->createndfelocations($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO location';
                }else{

                }
        echo json_encode($output);
    }
    public function fetchbdfeporoducts(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getBDFEpoproducts($codegens);
        foreach($data as $row): ?>
            <tr id="<?php echo $row->id_po_products; ?>" class="trow">
                <td>
                    <?php echo '<img src="'.base_url('bmb_assets2/upload/bdfe_po_product_img/').(!empty($row->po_product_image)?$row->po_product_image:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br>' ?>
                    <?php echo (!empty($row->po_product_name)?'<b>Product Name : </b>'.$row->po_product_name:""); ?><br>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebdfepoproducts" data-id="<?php echo $row->id_po_products ?>" title="Remove">Remove</button>
                </td>
            </tr>
    <?php endforeach;
    }

    public function deletebdfepoproducts($id = null)
        {
        $sql = "DELETE FROM tblpalivelihood_po_product WHERE id_po_products = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function fetchbdfelocations(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getPOlocations($codegens);
        foreach($data as $row){
            if ($row->lh_long_directions == 1) {
                $long = "East";
            }else if($row->lh_long_directions == 2){
                $long = "West";
            }else{
                $long = "";
            }

            if ($row->lh_lat_directions == 1) {
                $lat = "North";
            }else if($row->lh_lat_directions == 2){
                $lat = "South";
            }else{
                $lat = "";
            }
            ?>
             <tr id="<?php echo $row->id_po_locations; ?>" class="trow">
                <td><?php echo $row->lhproductsources; ?></td>
                <td>
                    <?php echo $long." ".(!empty($row->lh_long_degs)?number_format($row->lh_long_degs,3)."°":"")."".
                                         (!empty($row->lh_long_mins)?number_format($row->lh_long_mins,3)."'":"")."".
                                         (!empty($row->lh_long_secs)?number_format($row->lh_long_secs,3)."''":"")."<br>".
                                $lat." ".(!empty($row->lh_lat_degs)?number_format($row->lh_lat_degs,3)."°":"")."".
                                         (!empty($row->lh_lat_mins)?number_format($row->lh_lat_mins,3)."'":"")."".
                                         (!empty($row->lh_lat_secs)?number_format($row->lh_lat_secs,3)."''":"")
                    ?>
                </td>
                <td><?php echo number_format($row->lh_product_source_area,3); ?></td>
                <td class="hidden"><?php echo $row->id_po_locations; ?></td>
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <td class="hidden"><?php echo $row->bdfe_codegen; ?></td>
                <td class="hidden"><?php echo number_format($row->lh_long_degs,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_long_mins,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_long_secs,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_dmstodds,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_lat_degs,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_lat_mins,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_lat_secs,3); ?></td>
                <td class="hidden"><?php echo number_format($row->lh_dmstodd2s,3); ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_po_locations;?>" class="btn btn-info btn-xs btn-edit-topo" onclick="editdfe_po_resource_loc(this);">Edit</button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebdfelocation" data-id="<?php echo $row->id_po_locations ?>" title="Remove">Remove</button>
                    <input type="hidden" id="bdferesloc1<?php echo $row->id_po_locations ?>" value="<?php echo $row->id_po_locations ?>" />
                    <input type="hidden" id="bdferesloc2<?php echo $row->id_po_locations ?>" value="<?php echo $row->lh_long_directions ?>" />
                    <input type="hidden" id="bdferesloc3<?php echo $row->id_po_locations ?>" value="<?php echo $row->lh_lat_directions ?>" />
                </td>
            </tr>
            <?php }

    }

    public function update_bdfereslocs(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("edit-bdfeporesourceloc-id");
            $ipafdetails = array('lhproductsources' => $this->input->post('edit-lhproductsource',true),
                                 'lh_long_directions' => $this->input->post('edit-lh_long_direction',true),
                                 'lh_long_degs' => str_replace(',','',$this->input->post('edit-lh_long_deg',true)),
                                 'lh_long_mins' => str_replace(',','',$this->input->post('edit-lh_long_min',true)),
                                 'lh_long_secs' => str_replace(',','',$this->input->post('edit-lh_long_sec',true)),
                                 'lh_dmstodds' => str_replace(',','',$this->input->post('edit-lh_dmstodd',true)),
                                 'lh_lat_directions' => $this->input->post('edit-lh_lat_direction',true),
                                 'lh_lat_degs' => str_replace(',','',$this->input->post('edit-lh_lat_deg',true)),
                                 'lh_lat_mins' => str_replace(',','',$this->input->post('edit-lh_lat_min',true)),
                                 'lh_lat_secs' => str_replace(',','',$this->input->post('edit-lh_lat_sec',true)),
                                 'lh_dmstodd2s' => str_replace(',','',$this->input->post('edit-lh_dmstodd2',true)),
                                 'lh_product_source_area' => str_replace(',','',$this->input->post('edit-lh_area',true)));
            $this->pamain_model->update_bdferesourcelocations($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_bdfeprofiling(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("bdfeprofiling-id");
            $ipafdetails = array('date_profile_month'   => $this->input->post('date_profile_month',true),
                                 'date_profile_day'     => $this->input->post('date_profile_day',true),
                                 'date_profile_year'    => $this->input->post('date_profile_year',true),
                                 'lh_po_male'           => $this->input->post('no_male_lh',true),
                                 'lh_po_female'         => $this->input->post('no_female_lh',true),
                                 'size_enterprise'      => $this->input->post('size_enterprise',true),
                                 'lh_enteprise_other'   => $this->input->post('lh_enteprise_other',true),
                                 'poassetval'           => $this->input->post('poassetval',true),
                                 'avgnetmonthincome'    => $this->input->post('avgnetmonthincome',true),
                             );
            $this->pamain_model->update_bdfeprofilings($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_bdfeappraisal(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("bdfeappraisal-id");
            $ipafdetails = array('date_appraisal_month' => $this->input->post('edit-date_appraisal_month',true),
                                 'date_appraisal_day' => $this->input->post('edit-date_appraisal_day',true),
                                 'date_appraisal_year' => $this->input->post('edit-date_appraisal_year',true),
                                 'bdfe_level' => $this->input->post('edit-bdfe_level',true),
                                 'bamsresult_file' => (!empty($this->input->post('bamsresult_span',true)?$this->input->post('bamsresult_old',true):$this->input->post('bamsresult_span',true))),
                                 'businessplan_file' => (!empty($this->input->post('businessplan_span',true)?$this->input->post('businessplan_old',true):$this->input->post('businessplan_span',true))),
                                 'seamsresult_file' => (!empty($this->input->post('seamsresult_span',true)?$this->input->post('seamsresult_old',true):$this->input->post('seamsresult_span',true))),
                                 'rapidhabitatassess_file' => (!empty($this->input->post('rapidhabitatassess_span',true)?$this->input->post('rapidhabitatassess_old',true):$this->input->post('rapidhabitatassess_span',true))),
                                 'businesspermit_file' => (!empty($this->input->post('businesspermit_span',true)?$this->input->post('businesspermit_old',true):$this->input->post('businesspermit_span',true))),
                                 'poinventory_file' => (!empty($this->input->post('poinventory_span',true)?$this->input->post('poinventory_old',true):$this->input->post('poinventory_span',true))),
                                 'strengthenedbamsresult_file' => (!empty($this->input->post('bamsresult_span',true)?$this->input->post('bamsresult_old',true):$this->input->post('bamsresult_span',true))),
                                 'strengthenedbusinessplan_file' => (!empty($this->input->post('businessplan_span',true)?$this->input->post('businessplan_old',true):$this->input->post('businessplan_span',true))),
                                 'strengthenedseams_file' => (!empty($this->input->post('seamsresult_span',true)?$this->input->post('seamsresult_old',true):$this->input->post('seamsresult_span',true))),
                                 'updatebusinessplan_file' => (!empty($this->input->post('updatebusinessplan_span',true)?$this->input->post('updatebusinessplan_old',true):$this->input->post('updatebusinessplan_span',true))),
                                 'bamsresultdeveloped_file' => (!empty($this->input->post('bamsresultdeveloped_span',true)?$this->input->post('bamsresultdeveloped_old',true):$this->input->post('bamsresultdeveloped_span',true))),
                                 'businesspermitdeveloped_file' => (!empty($this->input->post('businesspermitdeveloped_span',true)?$this->input->post('businesspermitdeveloped_old',true):$this->input->post('businesspermitdeveloped_span',true))),
                                 'pppagreementdeveloped_file' => (!empty($this->input->post('pppagreementdeveloped_span',true)?$this->input->post('pppagreementdeveloped_old',true):$this->input->post('pppagreementdeveloped_span',true))),
                                 'lguresolution_file' => (!empty($this->input->post('lguresolution_span',true)?$this->input->post('lguresolution_old',true):$this->input->post('lguresolution_span',true))),
                                 'bamsresultsustained_file' => (!empty($this->input->post('bamsresultsustained_span',true)?$this->input->post('bamsresultsustained_old',true):$this->input->post('bamsresultsustained_span',true))),
                                 'seamsresultsustained_file' => (!empty($this->input->post('seamsresultsustained_span',true)?$this->input->post('seamsresultsustained_old',true):$this->input->post('seamsresultsustained_span',true))),
                                 'submissionappraisalpdf_file' => (!empty($this->input->post('submissionappraisalpdf_span',true)?$this->input->post('submissionappraisalpdf_old',true):$this->input->post('submissionappraisalpdf_span',true))),
                             );
            $this->pamain_model->update_bdfeprofilings($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function update_bdferecognition(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("bdferecognition-id");
            $ipafdetails = array('qualifiesrecog' => $this->input->post('chk_recognitions') ==null ?0:1,
                                 'date_recog_endorsement_month' => $this->input->post('date_recog_endorsement_month',true),
                                 'date_recog_endorsement_day' => $this->input->post('date_recog_endorsement_day',true),
                                 'date_recog_endorsement_year' => $this->input->post('date_recog_endorsement_year',true),
                                 'date_recog_validation_month' => $this->input->post('date_recog_validation_month',true),
                                 'date_recog_validation_day' => $this->input->post('date_recog_validation_day',true),
                                 'date_recog_validation_year' => $this->input->post('date_recog_validation_year',true),
                                 'resultvalidation' => $this->input->post('chk_recognitions_validation')==null ?0:1,
                                 'dateCOR_month' => $this->input->post('dateCOR_month',true),
                                 'dateCOR_day' => $this->input->post('dateCOR_day',true),
                                 'dateCOR_year' => $this->input->post('dateCOR_year',true),
                                 'recogfindingsdocupload' => $this->input->post('recognitionfileupload_span',true),
                                 'certrecogdocupload' => $this->input->post('recognitionfileuploadcor_span',true),
                             );
            $this->pamain_model->update_bdfeprofilings($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function deletebdfelocs($id = null)
        {
        $sql = "DELETE FROM tblpalivelihoodpolocation WHERE id_po_locations = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }


    public function fetchbdfe(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllpdfeinfo($codegens);
        foreach($data as $row){
            $total = $row->lh_po_male + $row->lh_po_female;
            $bdfecode = $row->bdfe_codegen;
            $datatechass = $this->pamain_model->getbdfe_tech_assistance($bdfecode);
            $datatypeassistance = $this->pamain_model->getbdfe_type_assistance($bdfecode);
            ?>

            <?php
            $total = $row->lh_po_male + $row->lh_po_female;
            $totalpercent = $row->lh_ecological + $row->lh_economic + $row->lh_equity;

            if ($row->proj_proposal == 1 ) {
                $ans1 = "Yes";
            }else if ($row->proj_proposal == 2){
                $ans1 = "No";
            }
            if ($row->lh_business_plan == 1 ) {
                $ans2 = "Yes";
            }else if ($row->lh_business_plan == 2){
                $ans2 = "No";
            }
            if ($row->lh_wfp == 1) {
                $ans3 = "Yes";
            }else if ($row->lh_wfp == 2){
                $ans3 = "No";
            }
            if ($row->lh_moa == 1) {
                $ans4 = "Yes";
            }else if ($row->lh_moa == 2){
                $ans4 = "No";
            }
            ?>
            <tr id="<?php echo $row->id_livelihood; ?>" class="trow">
    <!--0-->    <td class="hidden"><?php echo $row->enterprise_name; ?></td>
    <!--1-->            <td class="hidden"><?php echo $row->lh_type; ?></td>
    <!--2-->            <td class="hidden"><?php echo $row->lh_desc; ?></td>
    <!--3-->            <td class="hidden"><?php echo $row->provinceName.", ".$row->municipalName.", ".$row->barangayName; ?></td>
    <!--4-->            <td class="hidden"><?php echo $row->lh_area; ?></td>
    <!--5-->            <td class="hidden"><?php echo $row->lh_long_dms_degree; ?></td>
    <!--6-->            <td class="hidden"><?php echo $row->lh_long_dms_minute; ?></td>
    <!--7-->            <td class="hidden"><?php echo $row->lh_long_dms_second; ?></td>
    <!--8-->            <td class="hidden"><?php echo $row->lh_long_dd; ?></td>
    <!--9-->            <td class="hidden"><?php echo $row->lh_lat_dms_degree; ?></td>
    <!--10-->           <td class="hidden"><?php echo $row->lh_lat_dms_minute; ?></td>
    <!--11-->           <td class="hidden"><?php echo $row->lh_lat_dms_second; ?></td>
    <!--12-->           <td class="hidden"><?php echo $row->lh_lat_dd; ?></td>
    <!--13-->           <td class="hidden"><?php echo $row->office_involved; ?></td>
    <!--14-->           <td class="hidden"><?php echo $row->lh_po_male; ?></td>
    <!--15-->           <td class="hidden"><?php echo $row->lh_po_female; ?></td>
    <!--16-->           <td class="hidden"><?php echo $total; ?></td>
    <!--17-->           <td class="hidden"><?php echo $row->lh_assessed_month_frm."/".$row->lh_assessed_day_frm."/".$row->lh_assessed_year_frm." - ".$row->lh_assessed_month_to."/".$row->lh_assessed_day_to."/".$row->lh_assessed_year_to; ?></td>
    <!--18-->            <td class="hidden"><?php echo $row->other_source_assistance; ?></td>
    <!--19-->            <td class="hidden"><?php echo $row->lh_ecological; ?></td>
    <!--20-->            <td class="hidden"><?php echo $row->lh_economic; ?></td>
    <!--21-->            <td class="hidden"><?php echo $row->lh_equity; ?></td>
    <!--22-->            <td class="hidden"><?php echo $row->lh_total_rating; ?></td>
    <!--23-->            <td class="hidden"><?php echo $row->capacity_desc; ?></td>
    <!--24-->            <td class="hidden"><?php echo $row->lh_products; ?></td>
    <!--25-->            <td class="hidden"><?php echo $row->lh_img; ?></td>
    <!--26-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bdfe_img/'.$row->lh_img ?></td>
    <!--27-->            <td class="hidden"><?php echo $row->lh_income; ?></td>
    <!--28-->            <td class="hidden"><?php echo $row->lh_po_assisted; ?></td>
    <!--29-->            <td class="hidden"><?php echo $row->dor_month; ?></td>
    <!--30-->            <td class="hidden"><?php echo $row->dor_day; ?></td>
    <!--31-->            <td class="hidden"><?php echo $row->dor_year; ?></td>

    <!--32-->            <td class="hidden"><?php echo $row->type_registration; ?></td>
    <!--33-->            <td class="hidden"><?php echo $row->other_registration; ?></td>

    <!--34-->            <td class="hidden"><?php echo $row->lh_category; ?></td>
    <!--35-->            <td class="hidden"><?php echo $row->lh_sub_category; ?></td>
    <!--36-->            <td class="hidden"><?php echo $row->lh_category_others; ?></td>

    <!--37-->            <td class="hidden"><?php echo $row->lh_month_inclusion; ?></td>
    <!--38-->            <td class="hidden"><?php echo $row->lh_day_inclusion; ?></td>
    <!--39-->            <td class="hidden"><?php echo $row->lh_year_inclusion; ?></td>

    <!--40-->            <td class="hidden"><?php echo $row->date_profile_month; ?></td>
    <!--41-->            <td class="hidden"><?php echo $row->date_profile_day; ?></td>
    <!--42-->            <td class="hidden"><?php echo $row->date_profile_year; ?></td>

    <!--43-->            <td class="hidden"><?php echo $row->size_enterprise; ?></td>
    <!--44-->            <td class="hidden"><?php echo $row->lh_enteprise_other; ?></td>
    <!--45-->            <td class="hidden"><?php echo $row->poassetval; ?></td>
    <!--46-->            <td class="hidden"><?php echo $row->avgnetmonthincome; ?></td>

    <!--47-->            <td class="hidden"><?php echo $row->date_appraisal_month; ?></td>
    <!--48-->            <td class="hidden"><?php echo $row->date_appraisal_day; ?></td>
    <!--49-->            <td class="hidden"><?php echo $row->date_appraisal_year; ?></td>

    <!--50-->            <td class="hidden"><?php echo $row->bdfe_level; ?></td>

    <!--51-->            <td class="hidden"><?php echo $row->rapidhabitatassess_file; ?></td>
    <!--52-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->rapidhabitatassess_file ?></td>
    <!--53-->            <td class="hidden"><?php echo $row->businesspermit_file; ?></td>
    <!--54-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->businesspermit_file ?></td>
    <!--55-->            <td class="hidden"><?php echo $row->poinventory_file; ?></td>
    <!--56-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->poinventory_file ?></td>
    <!--57-->            <td class="hidden"><?php echo $row->bamsresult_file; ?></td>
    <!--58-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->bamsresult_file ?></td>
    <!--59-->            <td class="hidden"><?php echo $row->businessplan_file; ?></td>
    <!--60-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->businessplan_file ?></td>
    <!--61-->            <td class="hidden"><?php echo $row->seamsresult_file; ?></td>
    <!--62-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->seamsresult_file ?></td>
    <!--63-->            <td class="hidden"><?php echo $row->updatebusinessplan_file; ?></td>
    <!--64-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->updatebusinessplan_file ?></td>
    <!--65-->            <td class="hidden"><?php echo $row->bamsresultdeveloped_file; ?></td>
    <!--66-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->bamsresultdeveloped_file ?></td>
    <!--67-->            <td class="hidden"><?php echo $row->businesspermitdeveloped_file; ?></td>
    <!--68-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->businesspermitdeveloped_file ?></td>
    <!--69-->            <td class="hidden"><?php echo $row->pppagreementdeveloped_file; ?></td>
    <!--70-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->pppagreementdeveloped_file ?></td>
    <!--71-->            <td class="hidden"><?php echo $row->lguresolution_file; ?></td>
    <!--72-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->lguresolution_file ?></td>
    <!--73-->            <td class="hidden"><?php echo $row->bamsresultsustained_file; ?></td>
    <!--74-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->bamsresultsustained_file ?></td>
    <!--75-->            <td class="hidden"><?php echo $row->seamsresultsustained_file; ?></td>
    <!--76-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->seamsresultsustained_file ?></td>
    <!--77-->            <td class="hidden"><?php echo $row->submissionappraisalpdf_file; ?></td>
    <!--78-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/strengthened_file/'.$row->submissionappraisalpdf_file ?></td>

    <!--79-->            <td class="hidden"><?php echo $row->faamount; ?></td>
    <!--80-->            <td class="hidden"><?php echo $row->tech_assistance; ?></td>
    <!--81-->            <td class="hidden"><?php echo $row->financce_assistance; ?></td>
    <!--82-->            <td class="hidden"><?php echo $row->othersourceassistance; ?></td>
    <!--83-->            <td class="hidden"><?php echo $row->assistingorganization; ?></td>
    <!--84-->            <td class="hidden"><?php echo $row->typeofassistance; ?></td>
    <!--85-->            <td class="hidden"><?php echo $row->qualifiesrecog; ?></td>

    <!--86-->            <td class="hidden"><?php echo $row->date_recog_endorsement_month; ?></td>
    <!--87-->            <td class="hidden"><?php echo $row->date_recog_endorsement_day; ?></td>
    <!--88-->            <td class="hidden"><?php echo $row->date_recog_endorsement_year; ?></td>

    <!--89-->            <td class="hidden"><?php echo $row->date_recog_validation_month; ?></td>
    <!--90-->            <td class="hidden"><?php echo $row->date_recog_validation_day; ?></td>
    <!--91-->            <td class="hidden"><?php echo $row->date_recog_validation_year; ?></td>

    <!--92-->            <td class="hidden"><?php echo $row->resultvalidation; ?></td>

    <!--93-->            <td class="hidden"><?php echo $row->dateCOR_month; ?></td>
    <!--94-->            <td class="hidden"><?php echo $row->dateCOR_day; ?></td>
    <!--95-->            <td class="hidden"><?php echo $row->dateCOR_year; ?></td>

    <!--96-->            <td class="hidden"><?php echo $row->recogfindingsdocupload; ?></td>
    <!--97-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/bdfe_recognition_file/'.$row->recogfindingsdocupload ?></td>
    <!--98-->            <td class="hidden"><?php echo $row->supportingmaterialsupload; ?></td>
    <!--99-->            <td class="hidden"><?php echo base_url().'bmb_assets2/upload/bmb_assets2/upload/bdfe_photodocs/'.$row->supportingmaterialsupload ?></td>
    <!--100-->            <td class="hidden"><?php echo $row->bdfe_codegen; ?></td>
    <!--101-->           <td class="hidden">
                            <?php $rctr=0;foreach($datatechass as $ca):$rctr+=1;?>
                            <?php if ($row->bdfe_codegen == $ca->bdfe_codegen): ?>
                            <div id="bdfetechassid<?php echo $ca->id_techass?>" class="showdata">
                                <button type="button" class="btn btn-danger removeeditcontriothers" id="<?php echo $ca->id_techass ?>" data-id="<?php echo $ca->id_techass ?>" style="position: absolute;right: 25px">
                                    Remove
                                </button>
                                    <fieldset>
                                        <div class="col-xs-12">
                                            <div class="col-xs-4 col-lg-4">Technical Assistance : </div>
                                            <div class="col-xs-4 col-lg-4"><?php echo $ca->technical_assistance_details; ?></div>
                                        </div>
                                    </fieldset>
                            </div>
                            <?php endif; ?>
                            <?php endforeach;?>
                        </td>

    <!--102-->          <td class="hidden">
                            <?php $rctr1=0;foreach($datatypeassistance as $ca1):$rctr1+=1;?>
                            <?php if ($row->bdfe_codegen == $ca1->bdfe_codegen): ?>
                            <div id="bdfetechassid<?php echo $ca1->id_type_techass?>" class="showdata">
                                <button type="button" class="btn btn-danger removeeditcontriothers" id="<?php echo $ca1->id_type_techass ?>" data-id="<?php echo $ca1->id_type_techass ?>" style="position: absolute;right: 25px">
                                    Remove
                                </button>
                                    <fieldset>
                                        <div class="col-xs-12">
                                            <div class="col-xs-4 col-lg-4">Technical Assistance : </div>
                                            <div class="col-xs-4 col-lg-4"><?php echo $ca1->type_technical_assistance; ?></div>
                                        </div>
                                    </fieldset>
                            </div>
                            <?php endif; ?>
                            <?php endforeach;?>
                        </td>
                <td style="text-align: left">
                    <?php
                        $codegenss = $row->bdfe_codegen;
                        $bdfeimages = $this->pamain_model->getBDFEimages($codegenss);
                        foreach ($bdfeimages as $bdfei) {
                            # code...
                     echo '<div style="display: inline-block"><br><hr><img src="../../../bmb_assets2/upload/bdfe_img/'.(!empty($bdfei->bdfe_image_upload)?$bdfei->bdfe_image_upload:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img></div>';
                        }

                     ?>

                    <?php echo
                    '<br><b>Name of Enterprise :</b>'.ucwords($row->enterprise_name).
                    '<br><b>Name of Peoples Organization :</b>'.ucwords($row->lh_po_assisted).
                    '<br><b>Area :</b>'.number_format($row->lh_area,2)." has.".
                    '<br><b>Type of Enterprise :</b>'.$row->size_enterprise."(".$row->lh_type.")<br>";
                    ?>
                    <button type="button" value="<?php echo $row->id_livelihood;?>" class="btn btn-info btn-xs btn-edit-topo" onclick="editpdfe(this);">Edit</button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removepdfe" data-id="<?php echo $row->id_livelihood ?>" title="Remove">Remove</button>
                </td>
                <td class="hidden">
                   <?php
                    $codegens= $row->bdfe_codegen;
                    $bdfeloc = $this->pamain_model->getPOlocations($codegens);?>
                    <?php $rctr=0;foreach($bdfeloc as $ca):$rctr+=1;
                        if ($ca->lh_long_directions == 1) {
                            $long = "East";
                        }else if($ca->lh_long_directions == 2){
                            $long = "West";
                        }else{
                            $long = "";
                        }

                        if ($ca->lh_lat_directions == 1) {
                            $lat = "North";
                        }else if($ca->lh_lat_directions == 2){
                            $lat = "South";
                        }else{
                            $lat = "";
                        }
                    ?>
                            <div id="bdfelocid<?php echo $ca->id_po_locations?>" class="showdata">
                                    <fieldset>
                                        <div class="col-lg-12 col-xs-12">
                                        <button type="button" class="btn btn-danger btn-xs removelocationbdfe" id="<?php echo $ca->id_po_locations ?>" data-id="<?php echo $ca->id_po_locations ?>">Remove
                                        </button>
                                        </div>
                                        <div class="col-lg-12 col-xs-12">
                                            <b>Product Source : </b> <?php echo $ca->lhproductsources."<br>";?>
                                            <b>Location : </b><?php echo (!empty($ca->lh_regs)?$ca->regionName:"").(!empty($ca->lh_provs)?", ".$ca->provinceName:"").(!empty($ca->lh_muns)?", ".$ca->municipalName:"").(!empty($ca->lh_barangays)?", ".$ca->barangayName:"")."<br>"; ?>
                                            <b>Point Location : </b><?php echo $long." ".(!empty($ca->lh_long_degs)?number_format($ca->lh_long_degs,3)."°":"")."".
                                         (!empty($ca->lh_long_mins)?number_format($ca->lh_long_mins,3)."'":"")."".
                                         (!empty($ca->lh_long_secs)?number_format($ca->lh_long_secs,3)."''":"")."<br>".
                                $lat." ".(!empty($ca->lh_lat_degs)?number_format($ca->lh_lat_degs,3)."°":"")."".
                                         (!empty($ca->lh_lat_mins)?number_format($ca->lh_lat_mins,3)."'":"")."".
                                         (!empty($ca->lh_lat_secs)?number_format($ca->lh_lat_secs,3)."''":"");
                    ?>
                                        </div>
                                    </fieldset>
                            </div>
                            <?php endforeach;?>

                </td>
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <td class="hidden"><?php echo $row->bdfe_codegen; ?></td>
                <td class="hidden">
                   <?php
                    $codegenss = $row->bdfe_codegen;
                    $bdfeimages = $this->pamain_model->getBDFEimages($codegenss);
                    foreach($bdfeimages as $rows){
                        echo '<div class="col-lg-4" style="display:inline-block">
                       <button type="button" class="btn btn-danger btn-xs btn-flat removeimagebdfe gal-btn" data-id="'.$rows->id_bdfe_images.'" title="Remove">Remove</button>
                        <img src="'.base_url('bmb_assets2/upload/bdfe_img/').$rows->bdfe_image_upload.'" class="img-responsive img-thumbnail img-gallery" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px" /><br>
                       </div>';
                    }
                   ?>
                </td>
                <input type="hidden" id="lh1<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_products ?>" />
                <input type="hidden" id="lh2<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_region ?>" />
                <input type="hidden" id="lh3<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_province ?>" />
                <input type="hidden" id="lh4<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_municipal ?>" />
                <input type="hidden" id="lh5<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_barangay ?>" />
                <input type="hidden" id="lh6<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_long_dms_direction ?>" />
                <input type="hidden" id="lh7<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_lat_dms_direction ?>" />
                <input type="hidden" id="lh8<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_month_frm ?>" />
                <input type="hidden" id="lh9<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_day_frm ?>" />
                <input type="hidden" id="lh10<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_year_frm ?>" />
                <input type="hidden" id="lh11<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_month_to ?>" />
                <input type="hidden" id="lh12<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_day_to ?>" />
                <input type="hidden" id="lh13<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_assessed_year_to ?>" />
                <input type="hidden" id="lh14<?php echo $row->id_livelihood ?>" value="<?php echo $row->proj_proposal ?>" />
                <input type="hidden" id="lh15<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_business_plan ?>" />
                <input type="hidden" id="lh16<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_wfp ?>" />
                <input type="hidden" id="lh17<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_moa ?>" />
                <input type="hidden" id="lh18<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_type_enterprise ?>" />
                <input type="hidden" id="lh19<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_category ?>" />
                <input type="hidden" id="lh20<?php echo $row->id_livelihood ?>" value="<?php echo $row->lh_sub_category ?>" />
            </tr>
            <?php
        }
    }

     public function deletebdfeimage($id = null)
        {
            $sql1 = $this->db->where('id_bdfe_images',$id)
                                            ->get('tblpalivelihoodmultiimage')
                                            ->row();
            unlink('bmb_assets2/upload/bdfe_img/'.$sql1->bdfe_image_upload);
            // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
            $sql = "DELETE FROM tblpalivelihoodmultiimage WHERE id_bdfe_images = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
            //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
        }

    public function fetchbdfeimagelocal(){
        $output = '';
        $codegens = $this->input->post('codegens');
        $datar = $this->pamain_model->getBDFEimages($codegens);
        foreach($datar as $row){
            $output .= '<div class="col-lg-4" style="display:inline-block">
                        <button type="button" class="btn btn-danger btn-xs btn-flat removeimagebdfe gal-btn" data-id="'.$row->id_bdfe_images.'" title="Remove">Remove</button>
                         <img src="'.base_url('bmb_assets2/upload/bdfe_img/').$row->bdfe_image_upload.'" class="img-responsive img-thumbnail img-gallery" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px" /><br>
                        </div>';
        }
        echo $output;
       // $bdfeimages = $this->pamain_model->getBDFEimages($codegenss);
       //              foreach($bdfeimages as $rows){
       //                  echo '<div class="col-lg-4" style="display:inline-block">
       //                 <button type="button" class="btn btn-danger btn-xs btn-flat removeimagebdfe gal-btn" data-id="'.$rows->id_bdfe_images.'" title="Remove">Remove</button>
       //                  <img src="'.base_url('bmb_assets2/upload/bdfe_img/').$rows->bdfe_image_upload.'" class="img-responsive img-thumbnail img-gallery" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px" /><br>
       //                 </div>';
       //              }
    }

    public function deletebdfelocationss($id = null)
{
    $sql = "DELETE FROM tblpalivelihoodpolocation WHERE id_po_locations = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

    public function fetchbdfelocationswhenremove(){
        $codegens = $this->input->post('codegens');
        $bdfeloc = $this->pamain_model->getPOlocations($codegens);
        foreach($bdfeloc as $ca):
            if ($ca->lh_long_directions == 1) {
                    $long = "East";
                }else if($ca->lh_long_directions == 2){
                    $long = "West";
                }else{
                    $long = "";
                }

                if ($ca->lh_lat_directions == 1) {
                    $lat = "North";
                }else if($ca->lh_lat_directions == 2){
                    $lat = "South";
                }else{
                    $lat = "";
            }
        ?>
        <div id="bdfelocid<?php echo $ca->id_po_locations?>" class="showdata">
                <fieldset>
                    <div class="col-lg-12 col-xs-12">
                        <button type="button" class="btn btn-danger btn-xs removelocationbdfe" id="<?php echo $ca->id_po_locations ?>" data-id="<?php echo $ca->id_po_locations ?>">Remove
                        </button>
                    </div>
                    <div class="col-lg-12 col-xs-12">
                        <b>Product Source : </b> <?php echo $ca->lhproductsources."<br>";?>
                        <b>Location : </b><?php echo (!empty($ca->lh_regs)?$ca->regionName:"").(!empty($ca->lh_provs)?", ".$ca->provinceName:"").(!empty($ca->lh_muns)?", ".$ca->municipalName:"").(!empty($ca->lh_barangays)?", ".$ca->barangayName:"")."<br>"; ?>
                        <b>Point Location : </b><?php echo $long." ".(!empty($ca->lh_long_degs)?number_format($ca->lh_long_degs,3)."°":"")."".
                     (!empty($ca->lh_long_mins)?number_format($ca->lh_long_mins,3)."'":"")."".
                     (!empty($ca->lh_long_secs)?number_format($ca->lh_long_secs,3)."''":"")."<br>".
            $lat." ".(!empty($ca->lh_lat_degs)?number_format($ca->lh_lat_degs,3)."°":"")."".
                     (!empty($ca->lh_lat_mins)?number_format($ca->lh_lat_mins,3)."'":"")."".
                     (!empty($ca->lh_lat_secs)?number_format($ca->lh_lat_secs,3)."''":"");
            ?>
                    </div>
                </fieldset>
        </div>
        <?php endforeach;
    }

    public function deletebdfe($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpalivelihood WHERE id_livelihood = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function getOtherTenure(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallOtherTenure($codegens);
        foreach($data as $row){ ?>
            <tr id="<?php echo $row->id_tenureother; ?>" class="trow">
                <td class="hidden"><?php echo $row->type_instrument; ?></td>
                <td class="hidden"><?php echo $row->tenure_holder; ?></td>
                <td class="hidden"><?php echo $row->tenure_purpose; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_location; ?></td>
                <td class="hidden"><?php echo number_format($row->other_instrument_area,2); ?></td>
                <td class="hidden"><?php echo $row->other_instrument_start; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_expire; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_status; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_map; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_shp; ?></td>
                <td class="hidden"><?php echo $row->other_instrument_file; ?></td>
                <td class="hidden"><?php echo $row->date_created; ?></td>
                <td class="hidden"><?php echo $row->date_updated; ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/tenure_map_others/'.(!empty($row->other_instrument_map)?$row->other_instrument_map:"nophoto.jpg") ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/tenure_map_shp/'.$row->other_instrument_shp ?></td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/tenure_map_file/'.$row->other_instrument_file ?></td>
                <td class="hidden"><?php echo $row->titledno; ?></td>
                <td class="hidden"><?php echo '<img src="../../../bmb_assets2/upload/tenure_map_others/'.(!empty($row->other_instrument_map)?$row->other_instrument_map:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img>' ?>
                </td>
                <td class="hidden"><?php echo base_url().'bmb_assets2/upload/tenure_pamb_clearance_others/'.$row->other_instrument_pamb_clearance ?></td>
                <td class="hidden"><?php echo $row->other_instrument_pamb_clearance; ?></td>
                <td style="text-align: left">
                    <?php echo '<img src="../../../bmb_assets2/upload/tenure_map_others/'.(!empty($row->other_instrument_map)?$row->other_instrument_map:"nophoto.jpg").'" style="max-height: 300px; max-width: 300px; width: 300px; height: 300px"></img><br><b>Shapefile : </b>'.'<a href="'.base_url().'bmb_assets2/upload/tenure_map_shp/'.$row->other_instrument_shp.'">'.$row->other_instrument_shp.'</a>'.
                    '<br><b>Types of Instrument/Agreement : </b>'.ucwords($row->types_tenure_desc).
                    (!empty($row->titledno)?'<br><b>Title No : </b>'.ucwords($row->titledno):"").
                    '<br><b>Tenure holder/proponent name : </b>'.ucwords($row->tenure_holder).
                    '<br><b>Nature of development/purpose : </b>'.ucwords($row->tenure_purpose).
                    '<br><b>Location : </b>'.ucwords($row->other_instrument_location).
                    '<br><b>Area : </b>'.number_format($row->other_instrument_area,3)." has. ".
                    '<br><b>Duration : </b>From year '.($row->other_instrument_start)." to ".($row->other_instrument_expire).
                    '<br><b>Status : </b>'.ucwords($row->status_desc).
                    '<br><b>Document Attached : </b>'.'<a href="'.base_url().'bmb_assets2/upload/tenure_map_file/'.$row->other_instrument_file.'">'.$row->other_instrument_file.'</a>';
                    ?>
                    <button type="button" value="<?php echo $row->id_tenureother;?>" class="btn btn-info btn-xs" onclick="edit_othertenure(this);">
                    Edit </button>
                    <button type="button" class="btn btn-danger btn-flat btn-xs removeothertenure" data-id="<?php echo $row->id_tenureother; ?>" title="Remove">Remove</button>
                </td>
                <input type="hidden" id="a1<?php echo $row->id_tenureother ?>" value="<?php echo $row->type_instrument ?>" />
                <input type="hidden" id="a2<?php echo $row->id_tenureother ?>" value="<?php echo $row->other_instrument_start ?>" />
                <input type="hidden" id="a3<?php echo $row->id_tenureother ?>" value="<?php echo $row->other_instrument_expire ?>" />
                <input type="hidden" id="a4<?php echo $row->id_tenureother ?>" value="<?php echo $row->other_instrument_status ?>" />
            </tr>
        <?php }
    }

    public function deleteothertenure($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaintenureothers WHERE id_tenureother = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function upload_project_report()
    {
        sleep(3);
        if($_FILES["project_report_files"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/project_report';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["project_report_files"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["project_report_files"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["project_report_files"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["project_report_files"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["project_report_files"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["project_report_files"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/project_report/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postData2 = [
            'generatedcode '    => $this->input->post('gencode',true),
          ];

          $this->form_validation->set_rules('gencode','Code','required');
          $data['pamainPambFile'] = (object)$postData = [
            'proj_code '    => $this->input->post('projgencode',true),
            'generatedcode '    => $this->input->post('gencode',true),
            'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
            'uploaded_on'       =>  date("Y-m-d H:i:s")
          ];
        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                // $output['status'] = 'No Document upload';
            } else {
               // if(empty($postDataPambFile['id'])){

                $query = $this->pamain_model->insertproject_report($postData);
                if($query){
                // $output['status'] = 'Document successfully uploaded';
                }else{
                $output['error'] = true;
                // $output['status'] = 'No document upload';
                }
            // }
            }


        }
         }
         echo $output;
        }
    }

    public function ManualOperationFileUpload()
    {
        if(isset($_FILES["manualoperationpamo"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamo_manual_operation_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('manualoperationpamo'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'pamocode'    => $this->input->post('pamoCode',true),
                    'generatedcode '    => $this->input->post('gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertmanualoperationFile($postDataImage);
            }
        }
    }

    public function pambManualOperationFileQuery()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallMnualoperationFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeManualOperation" data-id="'.$row->id_pasu_manual .'">-</button><br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamo_manual_operation_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function deleteManualOperationFile($id = null)
    {
            $sql1 = $this->db->where('id_pasu_manual',$id)
                                            ->get('tblpasumanualoperation')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pamo_manual_operation_file/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblpasumanualoperation WHERE id_pasu_manual = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function pasuSOFileUpload()
    {
        if(isset($_FILES["pasuSOFile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamo_pasu_so_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pasuSOFile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode '    => $this->input->post('gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertpasusoFile($postDataImage);
            }
        }
    }

    public function pambpasuSOFileUpload()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallpasusoFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removepasuso" data-id="'.$row->id_file_pasu.'">-</button>&nbsp;File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamo_pasu_so_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function deletePASUSO($id = null)
    {
            $sql1 = $this->db->where('id_file_pasu',$id)
                                            ->get('tblpasu_sofile')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pamo_pasu_so_file/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblpasu_sofile WHERE id_file_pasu = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function apasuSOFileUpload()
    {
        if(isset($_FILES["apasuSOFile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pamo_apasu_so_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('apasuSOFile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode '    => $this->input->post('gencode',true),
                    'file_name'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertapasusoFile($postDataImage);
            }
        }
    }

    public function pambapasuSOFileUpload()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallapasusoFileUpload($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeapasuso" data-id="'.$row->id_file_apasu.'">-</button><br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/pamo_apasu_so_file/'.$row->file_name.'">'.$row->file_name.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function deleteAPASUSO($id = null)
    {
            $sql1 = $this->db->where('id_file_apasu',$id)
                                            ->get('tblapasu_sofile')
                                            ->row();
        if ($sql1->file_name != "nophoto.jpg") {
                unlink('bmb_assets2/upload/pamo_apasu_so_file/'.$sql1->file_name);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblapasu_sofile WHERE id_file_apasu = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function cepamaterialsprintupload()
    {
        if(isset($_FILES["print_file_materials"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_materials';
            $config['allowed_types'] = 'png|jpeg|jpg|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('print_file_materials'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepamaterialsprintuploadEdit()
    {
        if(isset($_FILES["edit-print_file_materials"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_materials';
            $config['allowed_types'] = 'png|jpeg|jpg|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-print_file_materials'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepamultimediasprintupload()
    {
        if(isset($_FILES["cepa_multimedia"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_multimedia';
            $config['allowed_types'] = 'avi|mp4|mov|mpg|ppt|pptx|mpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('cepa_multimedia'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepamultimediasprintuploadEdit()
    {
        if(isset($_FILES["edit-cepa_multimedia"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_multimedia';
            $config['allowed_types'] = 'avi|mp4|mov|mpg|ppt|pptx|mpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-cepa_multimedia'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepamultimediasprintupload2()
    {
        if(isset($_FILES["cepa_multimedia2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_materials';
            $config['allowed_types'] = 'avi|mp4|mov|mpg|ppt|pptx|mpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('cepa_multimedia2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function cepamultimediasprintupload2Edit()
    {
        if(isset($_FILES["edit-cepa_multimedia2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_materials';
            $config['allowed_types'] = 'avi|mp4|mov|mpg|ppt|pptx|mpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-cepa_multimedia2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function bdfevideodocumentations()
    {
        if(isset($_FILES["uploadbdfevideodocs"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_video_documentation';
            $config['allowed_types'] = 'avi|mp4|mov|mpg|mpeg';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('uploadbdfevideodocs'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function insertbdfevideodocs()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('supportingmat-gencode',true),
            'bdfe_codegen' => $this->input->post('supportingmat-gencode2',true),
            'bdfe_video_upload' => $this->input->post('uploadbdfevideodocs_spam',true),
            'bdfe_video_link' => $this->input->post('videodocs',true),
            'bdfe_video_status' => 1,
        ];
                $query = $this->pamain_model->createvidedocument($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Supporting Material Video Documentation';
                }else{

                }
        echo json_encode($output);
    }

    public function insertPAiecMaterials()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('cepaact-gencode',true),
            'cepa_code' => $this->input->post('edit-CEPAGenCode',true),
            'print_name' => $this->input->post('edit-print_materials',true),
            'print_image' => $this->input->post('edit-print_file_materials_span',true),
            'print_name_others' => $this->input->post('edit-print_materials_other',true),
            'title_print' => $this->input->post('edit-print_materials_title',true),
            'year_produced' => $this->input->post('edit-print_materials_produced',true),
            'volume' => $this->input->post('edit-print_materials_volume',true),
            'uploaded_on' =>  date("Y-m-d H:i:s")
        ];
                $query = $this->pamain_model->insertcepamaterialsprintFile($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new IEC Materials/collaterals produced';
                }else{

                }
        echo json_encode($output);
}

public function insertPAcorals()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'coastal_generatedcode'    => $this->input->post('genCoral',true),
            'coral_has'      => str_replace(',','',$this->input->post('coral_ha',true)),
            'hcc_value'      => str_replace(',','',$this->input->post('hcc_value',true)),
            'taus_value'      => str_replace(',','',$this->input->post('taus_value',true)),
            'hcc_category'    => $this->input->post('coral_condition',true),
            'taus_category'    => $this->input->post('taus_category',true),
            'coral_remarks'    => $this->input->post('coral_remarks',true),
            'coral_date_month'    => $this->input->post('coral_conducted_month',true),
            'coral_date_day'    => $this->input->post('coral_conducted_day',true),
            'coral_date_year'    => $this->input->post('coral_conducted_year',true),
            'coral_map_img'    => $this->input->post('img_coralmaps_indi',true),
            'coral_shpfile'    => $this->input->post('shp_corals_txt',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertCoraldetails($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAseagrass()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'coastal_generatedcode'    => $this->input->post('genCoralSeagrass',true),
            'seagrass_area'      => str_replace(',','',$this->input->post('seagrass_ha',true)),
            'seagrass_cover_value'      => str_replace(',','',$this->input->post('cover_value',true)),
            'diversity_value'      => str_replace(',','',$this->input->post('diversity_values',true)),
            'seagrass_no'      => str_replace(',','',$this->input->post('seagrass_no',true)),
            'seagrass_conditions'    => $this->input->post('seagrass_condition',true),
            'diversity_index'    => $this->input->post('diversity_index',true),
            'seagrass_remarks'    => $this->input->post('seagrass_remarks',true),
            'seagrass_date_month'      => $this->input->post('seagrass_conducted_month',true),
            'seagrass_date_day'    => $this->input->post('seagrass_conducted_day',true),
            'seagrass_date_year'    => $this->input->post('seagrass_conducted_year',true),
            'seagrass_map_img'    => $this->input->post('img_seagrassmaps_indi',true),
            'seagrass_shpfile'    => $this->input->post('shp_seagrass_txt',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertSeagrassdetails($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAmangrove()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'mangrove_area'      => str_replace(',','',$this->input->post('mangrove_ha',true)),
            'crown_cover'      => str_replace(',','',$this->input->post('crown_cover',true)),
            'regeneration'      => str_replace(',','',$this->input->post('regeneration',true)),
            'avg_height'      => str_replace(',','',$this->input->post('avg_height',true)),
            'observation'    => $this->input->post('observation_mangrove',true),
            'mangrove_diversity'    => $this->input->post('diversity_value',true),
            'mangrove_condition'    => $this->input->post('mangrove_condition',true),
            'regen_cat'    => $this->input->post('mangrove_regen',true),
            'height_cat'    => $this->input->post('mangrove_height',true),
            'observe_cat'    => $this->input->post('mangrove_observe',true),
            'divert_cat'    => $this->input->post('mangrove_diversity',true),
            'mangrove_remarks'    => $this->input->post('mangrove_remarks',true),
            'mangrove_date_month'    => $this->input->post('mangrove_conducted_month',true),
            'mangrove_date_day'    => $this->input->post('mangrove_conducted_day',true),
            'mangrove_date_year'    => $this->input->post('mangrove_conducted_year',true),
            'mangrove_map_img'    => $this->input->post('img_mangrovemaps_indi',true),
            'mangrove_shpfile'    => $this->input->post('shp_mangrove_txt',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertMangrovedetails($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPACoralsSpecies()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'coastal_generatedcode'    => $this->input->post('genCoral',true),
            'coralspecies_id'      => $this->input->post('idcoralspecies',true),
            'date_upload'       =>  $now,
        ];
                $query = $this->pamain_model->insertCoralsSpecies($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAseagrassSpecies()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'seagrass_generatedcode'    => $this->input->post('genCoralSeagrass',true),
            'seagrass_species_name'      => $this->input->post('seagrassSpecieses',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertSeagrassSpecies($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAmangrovessSpecies()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'mangrove_generatedcode'    => $this->input->post('genCoralmangrove',true),
            'mangrove_species'      => $this->input->post('mangrovespecies',true),
            'date_upload'       =>  $now,
        ];
                $query = $this->pamain_model->insertMangroveSpecies($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAFish()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            // 'fishspecies_id'    => $this->input->post('idfishspecies',true),
            'fish_diversity_value'      => str_replace(',','',$this->input->post('fish_diversity_value',true)),
            'density_value'      => str_replace(',','',$this->input->post('density_value',true)),
            'biomass_value'      => str_replace(',','',$this->input->post('biomass_value',true)),
            'fish_category'    => $this->input->post('fish_category',true),
            'fish_diversity'    => $this->input->post('fish_diversity',true),
            'fishdensity'    => $this->input->post('fishdensity',true),
            'fishbiomass'    => $this->input->post('fishbiomass',true),
            'date_assessed_m'    => $this->input->post('fish_month_monitoring',true),
            'date_assessed_d'    => $this->input->post('fish_day_monitoring',true),
            'date_assessed_y'    => $this->input->post('fish_year_monitoring',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertFishdetails($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function insertPAFishSpecies()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode'    => $this->input->post('gencode',true),
            'fishspecies_ids'    => $this->input->post('idfishspecies',true),
            'date_created'       =>  $now,
        ];
                $query = $this->pamain_model->insertFishspeciesData($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new record';
                }else{

                }
        echo json_encode($output);
}

public function fetchfishspecies(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getallfishspeciesdata($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_fish_species; ?>" class="trow">
                <td><?php echo $row->fish_scientific_name; ?></td>
                <td><?php echo $row->date_created; ?></td>
                <td>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removespeciesfish" data-id="<?php echo $row->id_fish_species ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

public function deletefishspecies($id = null)
{
    $sql = "DELETE FROM tblcoastalmarinefishspecies WHERE id_fish_species = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
}

public function fetchfishdetails(){
        $codegens = $this->input->post('codegens');
        $data1 = $this->pamain_model->getAllfishdetails($codegens);
        foreach($data1 as $row){ ?>
            <tr id="<?php echo $row->id_cmfish; ?>" class="trow">
                <td><?php echo (!empty($row->date_assessed_m)?$row->date_assessed_m." ":"").(!empty($row->date_assessed_d)?$row->date_assessed_d.", ":"").(!empty($row->date_assessed_y)?$row->date_assessed_y:""); ?></td>
                <td class="hidden"><?php echo $row->fish_scientific_name; ?></td>
                <td class="hidden"><?php echo $row->fish_category_value; ?></td>
                <td><?php echo $row->fish_diverity_values."<br>".(!empty($row->fish_diverity_values)?number_format($row->fish_diversity_value,3):""); ?></td>
                <td><?php echo $row->fish_density_value."<br>".(!empty($row->density_value)?number_format($row->density_value,3):""); ?></td>
                <td><?php echo $row->fish_categorys." (".$row->fish_biomass.")<br>".(!empty($row->biomass_value)?number_format($row->biomass_value,3):""); ?></td>
                <td class="hidden"><?php echo number_format($row->fish_diversity_value,3); ?></td>
                <td class="hidden"><?php echo number_format($row->density_value,3); ?></td>
                <td class="hidden"><?php echo number_format($row->biomass_value,3); ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_cmfish;?>" class="btn btn-info btn-xs" onclick="editfishdetails(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeFishdetails" data-id="<?php echo $row->id_cmfish ?>" title="Remove">Remove</button>
                    <input type="hidden" id="fishdrp1<?php echo $row->id_cmfish;?>" value="<?php echo $row->fish_category ?>" />
                    <input type="hidden" id="fishdrp2<?php echo $row->id_cmfish;?>" value="<?php echo $row->fish_diversity ?>" />
                    <input type="hidden" id="fishdrp3<?php echo $row->id_cmfish;?>" value="<?php echo $row->fishdensity ?>" />
                    <input type="hidden" id="fishdrp4<?php echo $row->id_cmfish;?>" value="<?php echo $row->fishbiomass ?>" />
                    <input type="hidden" id="fishdrp5<?php echo $row->id_cmfish;?>" value="<?php echo $row->fish_scientific_name ?>" />
                    <input type="hidden" id="fishdrp6<?php echo $row->id_cmfish;?>" value="<?php echo $row->date_assessed_m ?>" />
                    <input type="hidden" id="fishdrp7<?php echo $row->id_cmfish;?>" value="<?php echo $row->date_assessed_d ?>" />
                    <input type="hidden" id="fishdrp8<?php echo $row->id_cmfish;?>" value="<?php echo $row->date_assessed_y ?>" />
                </td>
            </tr>
        <?php
        }
    }
public function deletefishdetails($id = null)
{
    // $image_path = base_url().'bmb_assets2/upload/map_image/'; // your image path
    $sql = "DELETE FROM tblcoastalmarinefish WHERE id_cmfish = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    //  unlink('bmb_assets2/upload/map_image/'.$sql->filename);
}

public function insertPAsouveniritems()
{
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode ' =>  $this->input->post('cepaact-gencode',true),
            'cepa_code' => $this->input->post('edit-CEPAGenCode',true),
            'souveniritem'    => $this->input->post('edit-souvenir_item',true),
            'file_name'      => $this->input->post('edit-souvenir_img_span',true),
            'souvenir_other'      => $this->input->post('edit-other_souvenir',true),
            'souvenir_name'      => $this->input->post('edit-eventname',true),
            'souvenir_year'      => $this->input->post('edit-eventyears',true),
            'upload_on'       =>  $now,
        ];
                $query = $this->pamain_model->insertcepasouveniritem($postData);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added new souvenir item';
                }else{

                }
        echo json_encode($output);
}

    public function RHAfileUpload()
    {
        if(isset($_FILES["rapidhabitatassess"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('rapidhabitatassess'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function RHAfileUploadEdit()
    {
        if(isset($_FILES["edit-rapidhabitatassess"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-rapidhabitatassess'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function BPfileUpload()
    {
        if(isset($_FILES["businesspermit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('businesspermit'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function BPfileUploadEdit()
    {
        if(isset($_FILES["edit-businesspermit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-businesspermit'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function POIfileUpload()
    {
        if(isset($_FILES["poinventory"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('poinventory'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function POIfileUploadEdit()
    {
        if(isset($_FILES["edit-poinventory"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/appraisal_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-poinventory'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function BAMSfileUpload()
    {
        if(isset($_FILES["bamsresult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('bamsresult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BAMSfileUploadEdit()
    {
        if(isset($_FILES["edit-bamsstrresult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bamsstrresult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BusinessPlanfileUpload()
    {
        if(isset($_FILES["businessplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/strengthened_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('businessplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BusinessPlanfileUploadEdit()
    {
        if(isset($_FILES["edit-businessplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/strengthened_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-businessplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFESEAMSAUTfileUpload()
    {
        if(isset($_FILES["seamsuat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_saut';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('seamsuat'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFESEAMSstrAUTfileUpload()
    {
        if(isset($_FILES["edit-bdfestrseamsuat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_saut';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bdfestrseamsuat'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFESEAMSUSTAINEDSAUTfileUpload()
    {
        if(isset($_FILES["bdfesustainedseamsuat"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_saut';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('bdfesustainedseamsuat'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function SEAMSfileUpload()
    {
        if(isset($_FILES["seamsresult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('seamsresult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function SEAMSfileUploadEdit()
    {
        if(isset($_FILES["edit-bdfestrseamsresult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bdfestrseamsresult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFERecognitionFileUpload()
    {
        if(isset($_FILES["recognitionfileupload"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_recognition_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('recognitionfileupload'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFEefaproposalFileUpload()
    {
        if(isset($_FILES["efaproposal"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_financial_proposal';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('efaproposal'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFEefawfpFileUpload()
    {
        if(isset($_FILES["efawfpfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_financial_wfp';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('efawfpfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function BDFERecognitionFileUploadcor()
    {
        if(isset($_FILES["recognitionfileuploadcor"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_certrecognition_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('recognitionfileuploadcor'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function Editmanagementplanupload()
    {
        if(isset($_FILES["edit-mngmtplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/management_plan';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-mngmtplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedBPfileUpload()
    {
        if(isset($_FILES["updatebusinessplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('updatebusinessplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedBPfileUploadEdit()
    {
        if(isset($_FILES["edit-updatebusinessplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-updatebusinessplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedbamsfileUpload()
    {
        if(isset($_FILES["bamsresultdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('bamsresultdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedbamsfileUploadEdit()
    {
        if(isset($_FILES["edit-bamsresultdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bamsresultdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedbusinesspermitfileUpload()
    {
        if(isset($_FILES["businesspermitdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('businesspermitdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedbusinesspermitfileUploadEdit()
    {
        if(isset($_FILES["edit-businesspermitdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-businesspermitdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedpppfileUpload()
    {
        if(isset($_FILES["pppagreementdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('pppagreementdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function developedpppfileUploadEdit()
    {
        if(isset($_FILES["edit-pppagreementdeveloped"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/developed_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-pppagreementdeveloped'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedLGUfileUpload()
    {
        if(isset($_FILES["lguresolution"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/sustained_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('lguresolution'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedLGUfileUploadEdit()
    {
        if(isset($_FILES["edit-lguresolution"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/sustained_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-lguresolution'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedBAMSfileUpload()
    {
        if(isset($_FILES["bamsresultsustained"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('bamsresultsustained'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedBAMSfileUploadEdit()
    {
        if(isset($_FILES["edit-bamsresultsustained"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_bams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-bamsresultsustained'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedSEAMSfileUpload()
    {
        if(isset($_FILES["seamsresultsustained"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('seamsresultsustained'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sustainedSEAMSfileUploadEdit()
    {
        if(isset($_FILES["seamsresultsustained"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/mne_seams_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('seamsresultsustained'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function submissionappraisalpdf()
    {
        if(isset($_FILES["submissionappraisalpdf"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/submission_appraisal_pdf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('submissionappraisalpdf'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function submissionappraisalpdfEdit()
    {
        if(isset($_FILES["edit-submissionappraisalpdf"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/submission_appraisal_pdf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-submissionappraisalpdf'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pambresofileupload()
    {
        if(isset($_FILES["resofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('resofile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function pambresofileuploadEdit()
    {
        if(isset($_FILES["edit-resofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/pdf_file_resolution';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-resofile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function urbanecofile()
    {
        if(isset($_FILES["lguresolutions"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/urbaneco_file';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('lguresolutions'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function urbanecofileEdit()
    {
        if(isset($_FILES["edit-lguresolutions"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/urbaneco_file';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-lguresolutions'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function ipafincomebtr25()
    {
        if(isset($_FILES["add-proofdeposit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/certificateofreceiptipaf';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('add-proofdeposit'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function ipafincomebankdepost()
    {
        if(isset($_FILES["add-bankdeposit"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_bank_certificate';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('add-bankdeposit'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function fetchbdfeappraisalRHA()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeappraisalRHA($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeappraisalRHA" data-id="'.$row->id_appraisalrhafile.'">-</button>'.'<br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/appraisal_file/'.$row->appraisalrha_filename.'">'.$row->appraisalrha_filename.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function deleteappraisalRHAfile($id = null)
    {
            $sql1 = $this->db->where('id_appraisalrhafile',$id)
                                            ->get('tblpalivelihood_appraisalrha_file')
                                            ->row();
        if ($sql1->appraisalrha_filename != "nophoto.jpg") {
                unlink('bmb_assets2/upload/appraisal_file/'.$sql1->appraisalrha_filename);
            }else{

            }

        $output = array();
         $sql = "DELETE FROM tblpalivelihood_appraisalrha_file WHERE id_appraisalrhafile = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function cepamaterialprintfile()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcepaprintmaterials($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_cepa_print_materials; ?>" class="trow">
                    <td ><?php echo (($row->print_name==14)?$row->print_name_others:$row->cepa_print_details) ?></td>
                    <td ><?php echo $row->title_print.(($row->print_name==8)?"<br>Volume : ".$row->volume:"") ?></td>
                    <td ><?php echo $row->year_produced ?></td>
                    <td ><?php echo '<a href="'.base_url().'bmb_assets2/upload/cepa_materials/'.$row->print_image.'">'.$row->print_image.'</a>' ?></td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removecepaprintmaterials" data-id="<?php echo $row->id_cepa_print_materials ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function deletecepaprintmaterials($id = null)
    {
            $sql1 = $this->db->where('id_cepa_print_materials',$id)
                                            ->get('tblpamaincepa_print_materials')
                                            ->row();

        if ($sql1->print_image == "nophoto.jpg" || empty($sql1->print_image)) {

            }elseif (!empty($sql1->print_image)) {
                unlink('bmb_assets2/upload/cepa_materials/'.$sql1->print_image);
            }

        $output = array();
         $sql = "DELETE FROM tblpamaincepa_print_materials WHERE id_cepa_print_materials = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function filecepaAdd()
    {
            date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');
            $output = array();
            $data['data'] = (object)$postData = [
                'generatedcode ' =>  $this->input->post('cepaact-gencode',true),
                'cepa_code' => $this->input->post('edit-CEPAGenCode',true),
                'uploaded_on'    =>  $now,
                'multimedia'      =>  $this->input->post('edit-multimedia',true),
                'file_upload'       => $this->input->post('edit-old_cepa_multimedia'),
                'links' =>  $this->input->post('edit-mmlink',true),
                'film_name' =>  $this->input->post('edit-filmname',true),
                'url_links' =>  $this->input->post('edit-cepa_multimedia_link',true),
                'station' =>  $this->input->post('edit-stationname',true),
                'cepa_multimedia_other' =>  $this->input->post('edit-other_multimedia',true),
                'm_title' =>  $this->input->post('edit-multimedia_title',true),
                'm_year' =>  $this->input->post('edit-multimedia_year',true),
            ];
                    $query = $this->pamain_model->insertcepamultimedia($postData);
                    if($query){
                    $output['message'] = 'Add';
                    $output['status'] = 'Successfully added new Multimedia';
                    }else{

                    }
            echo json_encode($output);
    }

    public function filecepasocialmediaAdd()
    {
            date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');
            $output = array();
            $data['data'] = (object)$postData = [
                'generatedcode ' =>  $this->input->post('cepaact-gencode',true),
                'cepa_code' => $this->input->post('edit-CEPAGenCode',true),
                'uploaded_on'    =>  $now,
                'socialmedia_links'      =>  $this->input->post('edit-mmlink',true),
                'multimedia'       => $this->input->post('edit-multimedia2'),
                'film_name' =>  $this->input->post('edit-filmname',true),
                'file_upload' =>  $this->input->post('edit-old_cepa_multimedia2',true),
                'film_upload' =>  $this->input->post('edit-cepa_multimedia_link2',true),
                'other_socialmedia' =>  $this->input->post('edit-other_multimedia2',true),
                'social_year' =>  $this->input->post('edit-multimedia_social_year',true),
            ];
                    $query = $this->pamain_model->insertcepasocialmedia($postData);
                    if($query){
                    $output['message'] = 'Add';
                    $output['status'] = 'Successfully added new Multimedia';
                    }else{

                    }
            echo json_encode($output);
    }

       public function filecepaAddradiostation()
    {
            date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
            $now = date('Y-m-d');
            $output = array();
            $data['data'] = (object)$postData = [
                'generatedcode ' =>  $this->input->post('cepaact-gencode',true),
                'cepa_code' => $this->input->post('edit-CEPAGenCode',true),
                'radiostation'      =>  $this->input->post('edit-stationname',true),
                'radio_program'      =>  $this->input->post('edit-broadname',true),
                'radio_link'      =>  $this->input->post('edit-broadlinks',true),
                'uploaded_on'    =>  $now,
            ];
                    $query = $this->pamain_model->insertceparadiostation($postData);
                    if($query){
                    $output['message'] = 'Add';
                    $output['status'] = 'Successfully added new Radio station';
                    }else{

                    }
            echo json_encode($output);
    }


     public function fetchCEPAsocialmediaFile(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getCEPASocialmedia($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_socialmedia; ?>" class="trow">
                <td><?= $row->cepa_multimedia_desc; ?></td>
                <td>
                    <?php
                    if ($row->multimedia=="3") {
                        echo "Official name of Facebook page : ".$row->film_name."<br>"."URL/link : ".$row->socialmedia_links;
                    }else if($row->multimedia=="4"){
                        echo "Film name : ".$row->film_name."<br>Year produced : ".$row->social_year."<br>File atached : "."<a target='_blank' href=".base_url('bmb_assets2/upload/cepa_multimedia/').$row->file_upload.">".$row->file_upload."</a>"."<br>URL/link : ".$row->film_upload;
                    }else if($row->multimedia=="10"){
                        echo "Official handle : ".$row->film_name."<br>"."URL/link : ".$row->socialmedia_links;
                    }else if($row->multimedia=="6"){
                        echo "URL/link : ".$row->socialmedia_links;;
                    }else if($row->multimedia=="7"){
                        echo "Official handle : ".$row->film_name."<br>"."URL/link : ".$row->socialmedia_links;
                    }else if($row->multimedia=="8"){
                        echo "Specify others : ".$row->other_socialmedia."<br>"."URL/link : ".$row->socialmedia_links;
                    }
                    ?>
                </td>
                <!-- <td>
                    <?php if($row->multimedia=="4"):?>
                    <?php echo 'Film name : '.$row->film_name."<br>"; ?>
                    <a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cepa_multimedia/').$row->film_upload ?>"><?php echo $row->film_upload ?></a>
                    <br><?php echo 'URL/link : '.$row->film_upload; ?>
                    <?php elseif($row->multimedia=="3"||$row->multimedia=="6"||$row->multimedia=="7"):?>
                    <?= 'Facebook link : '.$row->socialmedia_links; ?>
                    <?php elseif($row->multimedia=="8"):?>
                    <br><?php echo 'Others : '.$row->other_socialmedia; ?>
                    <?php endif;?>
                </td> -->
                <td> <button type="button" class="btn btnbtn btn-danger btn-xs removecepasocialmedia" data-id="<?php echo $row->id_socialmedia ?>" title="Remove">Remove</button></td>

            </tr>
            <?php
        }
    }

     public function fetchCEPAradiostations(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getCEPAradiostations($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_radiostation; ?>" class="trow">
                <td><?= $row->cepa_multimedia_desc; ?></td>
                <td><?= $row->radio_program; ?></td>
                <td><?= $row->radio_link; ?></td>
                <td> <button type="button" class="btn btnbtn btn-danger btn-xs removeceparadiostation" data-id="<?php echo $row->id_radiostation ?>" title="Remove">Remove</button></td>

            </tr>
            <?php
        }
    }


    public function fetchCEPAMultimediaFile(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getCEPAMultimedia($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_multimedia; ?>" class="trow">
                <td><?= $row->cepa_multimedia_desc; ?></td>
                <td><?= $row->m_title; ?></td>
                <td><?= $row->m_year; ?></td>
                <td>
                <?php if($row->multimedia=="3"):?>
                    <?= 'Facebook link : '.$row->links; ?>
                <?php elseif($row->multimedia=="6" || $row->multimedia=="7"):?>
                    <?= 'URL/link : '.$row->links; ?>
                <?php elseif($row->multimedia=="1"):?>
                    <a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cepa_multimedia/').$row->file_upload ?>"><?php echo $row->file_upload ?></a>
                    <br><?php echo 'URL/link : '.$row->url_links; ?>
                <?php elseif($row->multimedia=="2"):?>
                    <a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cepa_multimedia/').$row->file_upload ?>"><?php echo $row->file_upload ?></a>
                    <br><?php echo 'URL/link : '.$row->url_links; ?>
                <?php elseif($row->multimedia=="4"):?>
                    <?php echo 'Film name : '.$row->film_name."<br>"; ?>
                    <a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cepa_multimedia/').$row->file_upload ?>"><?php echo $row->file_upload ?></a>
                    <br><?php echo 'URL/link : '.$row->url_links; ?>
                <?php elseif($row->multimedia=="5"):?>
                    <br><?php echo 'Station : '.$row->station; ?>
                <?php elseif($row->multimedia=="8"):?>
                    <br><?php echo 'Others : '.$row->cepa_multimedia_other; ?>
                <?php endif;?>
                </td>
                <td> <button type="button" class="btn btnbtn btn-danger btn-xs removecepamultimedia" data-id="<?php echo $row->id_multimedia ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deletecepamultimedia($id = null)
    {
            $sql1 = $this->db->where('id_multimedia',$id)
                                            ->get('tblpamaincepa_multimedia_materials')
                                            ->row();

        if ($sql1->file_upload == "nophoto.jpg" || empty($sql1->file_upload)) {

            }elseif (!empty($sql1->file_upload)) {
                unlink('bmb_assets2/upload/cepa_multimedia/'.$sql1->file_upload);
            }

        $output = array();
         $sql = "DELETE FROM tblpamaincepa_multimedia_materials WHERE id_multimedia = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletecepasocialmedia($id = null)
    {
            $sql1 = $this->db->where('id_socialmedia',$id)
                                            ->get('tblpamaincepa_socialmedia_materials')
                                            ->row();

        if ($sql1->file_upload == "nophoto.jpg" || empty($sql1->file_upload)) {

            }elseif (!empty($sql1->file_upload)) {
                unlink('bmb_assets2/upload/cepa_multimedia/'.$sql1->file_upload);
            }

        $output = array();
         $sql = "DELETE FROM tblpamaincepa_socialmedia_materials WHERE id_socialmedia = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteceparadiostation($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_radiostation WHERE id_radiostation = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function cepasouveniritem()
    {
        if($_FILES["souvenir_img"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/cepa_souvenir';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["souvenir_img"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["souvenir_img"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["souvenir_img"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["souvenir_img"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["souvenir_img"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["souvenir_img"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/cepa_souvenir/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/cepa_souvenir/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    public function cepasouveniritemEdit()
    {
        if($_FILES["edit-souvenir_img"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/cepa_souvenir';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["edit-souvenir_img"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["edit-souvenir_img"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["edit-souvenir_img"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["edit-souvenir_img"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["edit-souvenir_img"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["edit-souvenir_img"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
            $config['image_library'] = 'gd2';
            $config['source_image'] = 'bmb_assets2/upload/cepa_souvenir/'.$uploadData["file_name"];;
            $config['create_thumb'] = FALSE;
            $config['maintain_ratio'] = FALSE;
            $config['quality'] = '60%';
            $config['width'] = 1600;
            $config['height'] = 1200;
            $config['new_image'] = 'bmb_assets2/upload/cepa_souvenir/'.$uploadData["file_name"];
            $this->load->library('image_lib', $config);
            $this->image_lib->initialize($config);
            $this->image_lib->resize();
            $filenames = $uploadData['file_name'];
            $output = $filenames;
            }
          }
         echo $output;

        }
    }

    // public function cepasouveniritem()
    // {
    //     if(isset($_FILES["souvenir_img"]["name"]))
    //        {
    //         $config['upload_path'] = 'bmb_assets2/upload/cepa_souvenir';
    //         $config['allowed_types'] = 'png|jpg|jpeg';
    //         $this->load->library('upload', $config);
    //         $this->upload->initialize($config);
    //         if(!$this->upload->do_upload('souvenir_img'))
    //         {
    //              echo $this->upload->display_errors();
    //         }
    //         else
    //         {
    //              $data = $this->upload->data();
    //              $this->load->library('image_lib', $config);
    //              $this->image_lib->initialize($config);
    //                 $filenames = $data['file_name'];
    //                 $output['status'] = $filenames;
    //                 echo json_encode($output);
    //         }
    //     }
    // }

    public function cepasouveniritemfile()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcepasouvenir($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_souvenir; ?>" class="trow">
                    <td ><?php echo (($row->souveniritem==15)?$row->souvenir_other:$row->cepa_souvenir_details) ?></td>
                    <td ><?php echo $row->souvenir_name ?></td>
                    <td ><?php echo $row->souvenir_year ?></td>
                    <td ><?php echo '<a target="_blank" href="'.base_url().'bmb_assets2/upload/cepa_souvenir/'.$row->file_name.'">'.$row->file_name.'</a>' ?>
                    </td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removecepasouvenir" data-id="<?php echo $row->id_souvenir ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function deletecepasouveniritem($id = null)
    {
        $sql1 = $this->db->where('id_souvenir',$id)
                                            ->get('tblpamaincepa_souvenir')
                                            ->row();

        if ($sql1->file_name == "nophoto.jpg" || empty($sql1->file_name)) {

            }elseif (!empty($sql1->file_name)) {
                unlink('bmb_assets2/upload/cepa_souvenir/'.$sql1->file_name);
            }

        $output = array();
         $sql = "DELETE FROM tblpamaincepa_souvenir WHERE id_souvenir = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function cepaactivityreport()
    {
        if(isset($_FILES["cepa_activity_img"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_activity_report';
            $config['allowed_types'] = 'jpeg|jpg|png';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('cepa_activity_img'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('gencode',true),
                    'cepacode'    => $this->input->post('CEPAGenCode',true),
                    'activity_img'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertcepaactivityreportImage($postDataImage);
            }
        }
    }

    public function threatsmultipleimageupload()
    {
        if(isset($_FILES["threat_multi_img"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/threat_multi_img';
            $config['allowed_types'] = 'jpeg|jpg|png';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('threat_multi_img'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('gencode',true),
                    'threat_gencode'    => $this->input->post('threatgencodes',true),
                    'threat_multi_images'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertthreatmultipleImage($postDataImage);
            }
        }
    }

    public function threatsmultipleimageuploadEdit()
    {
        if(isset($_FILES["edit-threat_multi_img"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/threat_multi_img';
            $config['allowed_types'] = 'jpeg|jpg|png';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-threat_multi_img'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('threats-gencode',true),
                    'threat_gencode'    => $this->input->post('threats-gencode2',true),
                    'threat_multi_images'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertthreatmultipleImage($postDataImage);
            }
        }
    }

    public function fetchthreatmultipleimage()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallthreatsmultipleimages($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removeMultipleImageThreats" data-id="'.$row->threat_images_id.'">-</button> <br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/threat_multi_img/'.$row->threat_multi_images.'">'.$row->threat_multi_images.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function deletemultiplaimgthreats($id = null)
    {
            $sql1 = $this->db->where('threat_images_id',$id)
                                            ->get('tblpathreat_multi_img')
                                            ->row();

            // if ($sql1->threat_multi_images == "nophoto.jpg" || empty($sql1->threat_multi_images)) {

            // }elseif (!empty($sql1->threat_multi_images)) {
            //     unlink('bmb_assets2/upload/threat_multi_img/'.$sql1->threat_multi_images);
            // }

        $output = array();
         $sql = "DELETE FROM tblpathreat_multi_img WHERE threat_images_id = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

     public function bdfesupportmaterialphotodocs()
    {
        if(isset($_FILES["supportmaterialphotodoc"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/bdfe_photodocs';
            $config['allowed_types'] = 'jpeg|jpg|png';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('supportmaterialphotodoc'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('supportingmat-gencode',true),
                    'bdfe_generatedcode'    => $this->input->post('supportingmat-gencode2',true),
                    'photo_doc_file'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'date_uploaded'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertbdfephotodocs($postDataImage);
            }
        }
    }

    public function bdfesupmatphotodocs()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfesupportmatphotodocs($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <img src="'.base_url('bmb_assets2/upload/bdfe_photodocs/').$row->photo_doc_file.'" style="max-height: 250px; max-width: 250px;"></div><br><button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removebdfepphotodocs" data-id="'.$row->id_bdfesupportmatPhotoDoc.'">Remove</button>';
        }
         echo $output;
    }

    public function bdfesupmatvideodocs()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfesupportmatvideodocs($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <video width="320" height="240" controls><source src="'.base_url('bmb_assets2/upload/bdfe_video_documentation/').$row->bdfe_video_upload.'" type="video/mp4"></video></div><br>
           <label>Video Link : </label><a href="'.$row->bdfe_video_link.'">'.$row->bdfe_video_link.'</a><br><button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removebdfevideodocs" data-id="'.$row->id_bdfe_video.'">Remove</button>';
        }
         echo $output;
    }

    public function deletebdfevideodocs($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpalivelihoodmultivideo WHERE id_bdfe_video = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function deletebdfephotodocs($id = null)
    {
        //     $sql1 = $this->db->where('id_bdfesupportmatPhotoDoc',$id)
        //                                     ->get('tblpalivelihood_bdfe_supportmaterialphotodoc')
        //                                     ->row();
        // if ($sql1->photo_doc_file != "nophoto.jpg") {
        //         unlink('bmb_assets2/upload/bdfe_photodocs/'.$sql1->photo_doc_file);
        //     }else{

        //     }

        $output = array();
         $sql = "DELETE FROM tblpalivelihood_bdfe_supportmaterialphotodoc WHERE id_bdfesupportmatPhotoDoc = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function cepaactivityreportFetch()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcepaactivityreport($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removecepaactivityimg" data-id="'.$row->id_activity_img .'">-</button> <br>File attached :
           <a href="'.base_url().'bmb_assets2/upload/cepa_activity_report/'.$row->activity_img.'">'.$row->activity_img.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function add_cepa_event()
    {
        $output = array();
        $data['WEEAG'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'cepa_event' => $this->input->post('cepa_event',true),
            'cepa_event_others' => $this->input->post('cepa_event_other',true),
            'cepa_event_remarks' => $this->input->post('cepa_event_remarks',true),
            'cepa_event_month' => $this->input->post('date_event_month',true),
            'cepa_event_day' => $this->input->post('date_event_day',true),
            'cepa_event_year' => $this->input->post('date_event_year',true),
            'cepa_event_activity_file' => $this->input->post('event_report_span',true),
            ];

            $query = $this->pamain_model->createcepaevent($postData);
                if($query){
                    $output['message'] = 'Add';
                    $output['status'] = 'Add new CEPA environmental event';
                }
        echo json_encode($output);
    }

    public function fetchcepaevents()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallCEPAEvent($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_cepa_events; ?>" class="trow">
                    <td ><?php echo $row->month."/".$row->cepa_event_day."/".$row->year; ?></td>
                    <td ><?php echo (($row->cepa_event=="40")?$row->cepa_event_others:$row->cepa_event_details); ?></td>
                    <td ><?php echo '<a target="_blank" href="'.base_url().'bmb_assets2/upload/cepa_activity_event/'.$row->cepa_event_activity_file.'">'.$row->cepa_event_activity_file.'</a>' ?>
                    </td>
                    <td ><?php echo $row->cepa_event_remarks; ?></td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removeeventcepa" data-id="<?php echo $row->id_cepa_events; ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function deletecepaevents($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_event_details WHERE id_cepa_events = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function add_cepa_activity_report()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $output = array();
        $rel_data1 = $this->input->post('tblprint');
        $rel_data2 = $this->input->post('tblmultimed');
        $rel_data3 = $this->input->post('tblsocialmedia');
        $rel_data4 = $this->input->post('tblstation');
        $rel_data5 = $this->input->post('tvlsouvenir');

        $data['WEEAG'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'cepacode' => $this->input->post('CEPAGenCode',true),
            'activity_name' => $this->input->post('cepa_activity',true),
            'activity_month' => $this->input->post('date_cepa_month',true),
            'activity_day' => $this->input->post('date_cepa_day',true),
            'activity_year' => $this->input->post('date_cepa_year',true),
            'activity_venue' => $this->input->post('cepa_venue',true),
            'activity_objective' => $this->input->post('cepa_objective',true),
            'activity_summary' => $this->input->post('cepa_summary',true),
            'activity_male' => $this->input->post('cepa_male',true),
            'activity_female' => $this->input->post('cepa_female',true),
            'activity_total' => $this->input->post('cepa_total',true),
            'activity_audience_type' => $this->input->post('cepa_audience_type',true),
            'activity_audience_other' => $this->input->post('cepa_audience_type_others',true),
            'activity_details' => $this->input->post('cepa_details',true),
            'activity_chks1'  => $this->input->post('chk_s1')==null ? 0 : 1,
            'activity_chks2'  => $this->input->post('chk_s2')==null ? 0 : 1,
            'activity_chks3'  => $this->input->post('chk_s3')==null ? 0 : 1,
            'activity_chks4'  => $this->input->post('chk_s4')==null ? 0 : 1,
            'activity_chks5'  => $this->input->post('chk_s5')==null ? 0 : 1,
            'activity_chks6'  => $this->input->post('chk_s6')==null ? 0 : 1,
            'activity_chks7'  => $this->input->post('chk_s7')==null ? 0 : 1,
            'activity_chks8'  => $this->input->post('chk_s8')==null ? 0 : 1,
            'activity_chks9'  => $this->input->post('chk_s9')==null ? 0 : 1,
            'activity_chks10' => $this->input->post('chk_s10')==null ? 0 : 1,
            'activity_chks11' => $this->input->post('chk_s11')==null ? 0 : 1,
            'activity_chks12' => $this->input->post('chk_s12')==null ? 0 : 1,
            'activity_chks13' => $this->input->post('chk_s13')==null ? 0 : 1,
            'chk_s_others' => $this->input->post('chk_s_others',true),
            'activity_chkmm1' => $this->input->post('chk_mm1')==null ? 0 : 1,
            'activity_chkmm2' => $this->input->post('chk_mm2')==null ? 0 : 1,
            'activity_chkmm3' => $this->input->post('chk_mm3')==null ? 0 : 1,
            'activity_chkmm4' => $this->input->post('chk_mm4')==null ? 0 : 1,
            'activity_chkmm5' => $this->input->post('chk_mm5')==null ? 0 : 1,
            'activity_chkmm6' => $this->input->post('chk_mm6')==null ? 0 : 1,
            'activity_chkmm7' => $this->input->post('chk_mm7')==null ? 0 : 1,
            'activity_chkmm8' => $this->input->post('chk_mm8')==null ? 0 : 1,
            'activity_chkmm9' => $this->input->post('chk_mm9')==null ? 0 : 1,
            'activity_chkmm10' =>$this->input->post('chk_mm10')==null ? 0 : 1,
            'activity_chkmm11' =>$this->input->post('chk_mm11')==null ? 0 : 1,
            'activity_chkmm12' =>$this->input->post('chk_mm12')==null ? 0 : 1,
            'activity_chkmm13' =>$this->input->post('chk_mm13')==null ? 0 : 1,
            'activity_chkmm14' =>$this->input->post('chk_mm14')==null ? 0 : 1,
            'chk_mm_others' => $this->input->post('chk_mm_others',true),
            'chk_audience_1' => $this->input->post('chk_a1')==null ? 0 : 1,
            'chk_audience_2' => $this->input->post('chk_a2')==null ? 0 : 1,
            'chk_audience_3' => $this->input->post('chk_a3')==null ? 0 : 1,
            'chk_audience_4' => $this->input->post('chk_a4')==null ? 0 : 1,
            'chk_audience_5' => $this->input->post('chk_a5')==null ? 0 : 1,
            'chk_audience_6' => $this->input->post('chk_a6')==null ? 0 : 1,
            'chk_audience_7' => $this->input->post('chk_a7')==null ? 0 : 1,
            'chk_audience_8' => $this->input->post('chk_a8')==null ? 0 : 1,
            'chk_audience_9' => $this->input->post('chk_a9')==null ? 0 : 1,
            'chk_audience_10' =>$this->input->post('chk_a10')==null ? 0 : 1,
            'chk_audience_11' =>$this->input->post('chk_a11')==null ? 0 : 1,
            'chk_audience_12' =>$this->input->post('chk_a12')==null ? 0 : 1,
            'chk_audience_13' =>$this->input->post('chk_a13')==null ? 0 : 1,
            'chk_audience_14' =>$this->input->post('chk_a14')==null ? 0 : 1,
            'chk_audience_15' =>$this->input->post('chk_a15')==null ? 0 : 1,
            'chk_audience_16' =>$this->input->post('chk_a16')==null ? 0 : 1,
            'chk_audience_17' =>$this->input->post('chk_a17')==null ? 0 : 1,
            'chk_audience_18' =>$this->input->post('chk_a18')==null ? 0 : 1,
            'chk_audience_19' =>$this->input->post('chk_a19')==null ? 0 : 1,
            'chk_audience_18_others' => $this->input->post('chk_a1_others',true),
            'upload_on' => $now,
        ];

                $query = $this->pamain_model->createcepaactivity($postData,$rel_data1,$rel_data2,$rel_data3,$rel_data4,$rel_data5);
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Add new CEPA Activity';
                }else{

                }
        echo json_encode($output);
    }


    public function fetchCEPAActivityReport(){

        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallCEPAActivityReportFetch($codegens);
        foreach($data as $row){
            $cepacode = $row->cepacode;
            $cepaimg = $this->pamain_model->get_cepa_activity_img($cepacode);
            $cepaprint = $this->pamain_model->get_cepa_print($cepacode);
            $cepamultimedia = $this->pamain_model->get_cepa_multimedia($cepacode);
            $cepasocialmedia = $this->pamain_model->get_cepa_socialmedia($cepacode);
            $ceparadio = $this->pamain_model->get_cepa_radio($cepacode);
            $cepasouvenir = $this->pamain_model->get_cepa_souvenir($cepacode);
            $text1="";
            $text2="";
            $text3="";
            $text4="";
            $text5="";
            $cepaprinti = $this->pamain_model->get_cepa_print_indi($cepacode);
            $cepamultimediai = $this->pamain_model->get_cepa_multimedia_indi($cepacode);
            $cepasocialmediai = $this->pamain_model->get_cepa_socialmedia_indi($cepacode);
            $ceparadioi = $this->pamain_model->get_cepa_radio_indi($cepacode);
            $cepasouveniri = $this->pamain_model->get_cepa_souvenir_indi($cepacode);
            foreach($cepaprint as $cepa1):
                if ($cepa1->print_name==14) {
                    $text1 = $cepa1->print_name_others;
                }else{
                    $text1 = $cepa1->print;
                }
            endforeach;
            foreach($cepamultimedia as $cepa2):
                if ($cepa2->multimedia==8) {
                    $text2 = $cepa2->cepa_multimedia_others;
                }else{
                    $text2 = $cepa2->multimedias;
                }
            endforeach;
            foreach($cepasocialmedia as $cepa3):
                if ($cepa3->multimedia==8) {
                    $text3 = $cepa3->other_socialmedia;
                }else{
                    $text3 = $cepa3->socialmedia;
                }
            endforeach;
            foreach($ceparadio as $cepa4):
                $text4 = $cepa4->radiostations;
            endforeach;
            foreach($cepasouvenir as $cepa5):
                if ($cepa5->souveniritem==15) {
                    $text5 = $cepa5->souvenir_other;
                }else{
                    $text5 = $cepa5->souvenir;
                }
            endforeach;
            ?>
            <tr id="<?php echo $row->id_cepa_activity; ?>" class="trow">
                <td>
                    <?php echo
                        "Activity Name : ".$row->activity_name.
                        "<br>Dated : ".$row->activity_month."/".$row->activity_day."/".$row->year.
                        "<br>Venue : ".$row->activity_venue.
                        "<br>Objective : ".$row->activity_objective.
                        "<br> Summary : ".$row->activity_summary.
                        "<br><b>Audience <br></b>".$row->activity_male."<b> Male</b><br>".$row->activity_female." <b> Female</b><br>".$row->activity_total." <b>Total</b>".
                        "<br><b>Audience Type : </b><br>".(($row->chk_audience_1==1)?"<i class='glyphicon glyphicon-ok'></i>Pre School":" ").
                        (($row->chk_audience_2==1)? "<br><i class='glyphicon glyphicon-ok'></i>Elementary School":" ").
                        (($row->chk_audience_3==1)? "<br><i class='glyphicon glyphicon-ok'></i>Junior High School":" ").
                        (($row->chk_audience_4==1)? "<br><i class='glyphicon glyphicon-ok'></i>Sr. High School":" ").
                        (($row->chk_audience_5==1)? "<br><i class='glyphicon glyphicon-ok'></i>Academe":" ").
                        (($row->chk_audience_6==1)? "<br><i class='glyphicon glyphicon-ok'></i>Media":" ").
                        (($row->chk_audience_7==1)? "<br><i class='glyphicon glyphicon-ok'></i>Policy Makers":" ").
                        (($row->chk_audience_8==1)? "<br><i class='glyphicon glyphicon-ok'></i>Brgy LGU":" ").
                        (($row->chk_audience_9==1)? "<br><i class='glyphicon glyphicon-ok'></i>City LGU":" ").
                        (($row->chk_audience_10==1)?"<br><i class='glyphicon glyphicon-ok'></i>Municipal LGU":" ").
                        (($row->chk_audience_11==1)?"<br><i class='glyphicon glyphicon-ok'></i>Provincial LGU":" ").
                        (($row->chk_audience_12==1)?"<br><i class='glyphicon glyphicon-ok'></i>Religious group":" ").
                        (($row->chk_audience_13==1)?"<br><i class='glyphicon glyphicon-ok'></i>Peoples Organization":" ").
                        (($row->chk_audience_14==1)?"<br><i class='glyphicon glyphicon-ok'></i>OGAs":" ").
                        (($row->chk_audience_15==1)?"<br><i class='glyphicon glyphicon-ok'></i>NGOs":" ").
                        (($row->chk_audience_16==1)?"<br><i class='glyphicon glyphicon-ok'></i>Local Communities":" ").
                        (($row->chk_audience_17==1)?"<br><i class='glyphicon glyphicon-ok'></i>Private sector":" ").
                        (($row->chk_audience_19==1)?"<br><i class='glyphicon glyphicon-ok'></i>ICCs/IPs":" ").
                        (($row->chk_audience_18==1)?"<br><i class='glyphicon glyphicon-ok'></i>Others, please specify (".$row->chk_audience_18_others.")":" ").
                        "<br><b>Details : </b>".$row->activity_details.
                        "<br><b>Strategy : </b>".
                        (($row->activity_chks1==1)? "<br><i class='glyphicon glyphicon-ok'></i>Lecture":" ").
                        (($row->activity_chks2==1)? "<br><i class='glyphicon glyphicon-ok'></i>Game/Competition":" ").
                        (($row->activity_chks3==1)? "<br><i class='glyphicon glyphicon-ok'></i>Theater":" ").
                        (($row->activity_chks4==1)? "<br><i class='glyphicon glyphicon-ok'></i>Educational Tour":" ").
                        (($row->activity_chks5==1)? "<br><i class='glyphicon glyphicon-ok'></i>Campaign":" ").
                        (($row->activity_chks6==1)? "<br><i class='glyphicon glyphicon-ok'></i>Research":" ").
                        (($row->activity_chks7==1)? "<br><i class='glyphicon glyphicon-ok'></i>Exhibit/Fair":" ").
                        (($row->activity_chks8==1)? "<br><i class='glyphicon glyphicon-ok'></i>Fun run/Walk-a-thon":" ").
                        (($row->activity_chks9==1)? "<br><i class='glyphicon glyphicon-ok'></i>Mass media":" ").
                        (($row->activity_chks10==1)?"<br><i class='glyphicon glyphicon-ok'></i>Printed Materials":" ").
                        (($row->activity_chks11==1)?"<br><i class='glyphicon glyphicon-ok'></i>Forum/Dialogue/Symposium":" ").
                        (($row->activity_chks12==1)?"<br><i class='glyphicon glyphicon-ok'></i>Interview/Focus Group Discussion":" ").
                        (($row->activity_chks13==1)?"<br><i class='glyphicon glyphicon-ok'></i>Others, please specify (".$row->chk_s_others.")":" ").
                        "<br>".
                        "<br><b>Methods and Materials Used : </b>".
                        "<br><b>Print : </b>".$text1.
                        "<br><b>Multimedia : </b>".$text2.
                        "<br><b>Social Media : </b>".$text3.
                        "<br><b>Broadcast Station : </b>".$text4.
                        "<br><b>Souvenir : </b>".$text5.
                        "<br><b>Image attached : </b>"?>

                        <?php foreach ($cepaimg as $rowimg) {
                            if ($row->cepacode == $rowimg->cepacode) {
                            echo "<a target='_blank' href=".base_url()."bmb_assets2/upload/cepa_activity_report/".$rowimg->activity_img.">".$rowimg->activity_img."</a><br>";
                            }
                        }
                        echo "<br><button type='button' value='".$row->id_cepa_activity."' class='btn btn-info btn-xs' onclick='edit_cepaActivityReport(this);'>Edit</button>".
                             "<button type='button' value='".$row->id_cepa_activity."' data-id='".$row->id_cepa_activity."' class='btn btn-danger btn-flat btn-xs removecepaactivityreports' title='Remove'>Remove</button><br>"
                    ?></td>
                    <td class="hide"><?php echo $row->activity_name; ?></td>
                    <td class="hide"><?php echo $row->cepacode; ?></td>
                    <td class="hide"><?php echo $row->activity_venue; ?></td>
                    <td class="hide"><?php echo $row->activity_objective; ?></td>
                    <td class="hide"><?php echo $row->activity_summary; ?></td>
                    <td class="hide"><?php echo $row->activity_male; ?></td>
                    <td class="hide"><?php echo $row->activity_female; ?></td>
                    <td class="hide"><?php echo $row->activity_total; ?></td>
                    <td class="hide"><?php echo $row->activity_audience_type; ?></td>
                    <td class="hide"><?php echo $row->activity_details; ?></td>
                    <td class="hide"><?php echo $row->chk_s_others; ?></td>
                    <td class="hide"><?php echo $row->chk_mm_others; ?></td>

                    <td class="hide"><?php echo $row->activity_chks1; ?></td>
                    <td class="hide"><?php echo $row->activity_chks2; ?></td>
                    <td class="hide"><?php echo $row->activity_chks3; ?></td>
                    <td class="hide"><?php echo $row->activity_chks4; ?></td>
                    <td class="hide"><?php echo $row->activity_chks5; ?></td>
                    <td class="hide"><?php echo $row->activity_chks6; ?></td>
                    <td class="hide"><?php echo $row->activity_chks7; ?></td>
                    <td class="hide"><?php echo $row->activity_chks8; ?></td>

                    <td class="hide"><?php echo $row->activity_chks9; ?></td>
                    <td class="hide"><?php echo $row->activity_chks10; ?></td>
                    <td class="hide"><?php echo $row->activity_chks11; ?></td>
                    <td class="hide"><?php echo $row->activity_chks12; ?></td>
                    <td class="hide"><?php echo $row->activity_chks13; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm1; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm2; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm3; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm4; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm5; ?></td>

                    <td class="hide"><?php echo $row->activity_chkmm6; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm7; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm8; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm9; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm10; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm11; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm12; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm13; ?></td>
                    <td class="hide"><?php echo $row->activity_chkmm14; ?></td>
                    <td class="hide"><?php echo $row->activity_audience_other; ?></td>
                    <td class="hide"><?php echo $row->chk_audience_18_others; ?></td>
                    <td class="hide">
                        <?php $rctr=0;foreach($cepaprinti as $ca):$rctr+=1;
                        ?>
                        <div id="bca<?php echo $ca->id_cepa_print_materials?>" class="showdata">
                        <button type="button" class="btn btn-danger removecepaprints" id="<?php echo $ca->id_cepa_print_materials ?>" data-id="<?php echo $ca->id_cepa_print_materials ?>" style="position: absolute;right: 3px">
                            Remove
                        </button>
                        <ul><li style="text-align:left;">
                            <?php echo  "<b>Print name : </b>".($ca->print_name==14?$ca->print_name_others."<br>":$ca->cepa_print_details."<br>").
                                        "<b>Title : </b>".(!empty($ca->title_print)?$ca->title_print."<br>":"").
                                        "<b>Year produced : </b>".(!empty($ca->year_produced)?$ca->year_produced."<br>":"").
                                        ($ca->print_name==8?"Volume/Issue number : ".$ca->volume:"")
                            ?>
                        </li></ul>
                        </div>
                        <?php endforeach;?>
                    </td>

                    <td class="hide">
                        <?php $rctr=0;foreach($cepamultimediai as $xa):$rctr+=1;
                        ?>
                        <div id="bca<?php echo $xa->id_multimedia?>" class="showdata">
                        <button type="button" class="btn btn-danger removecepamultimedias" id="<?php echo $xa->id_multimedia ?>" data-id="<?php echo $xa->id_multimedia ?>" style="position: absolute;right: 3px">
                            Remove
                        </button>
                            <ul><li style="text-align:left;">
                                <?php echo  "<b>Print name : </b>".($xa->multimedia==15?$xa->cepa_multimedia_other."<br>":$xa->cepa_multimedia_desc."<br>").
                                            "<b>Title : </b>".(!empty($xa->m_title)?$xa->m_title."<br>":"").
                                            "<b>Year produced : </b>".(!empty($xa->m_year)?$xa->m_year."<br>":"").
                                            "<b>URL/link : </b>".(!empty($xa->url_links)?$xa->url_links:"")
                                ?>
                            </li></ul>
                        </div>
                        <?php endforeach;?>
                    </td>
                    <td class="hide">
                        <?php $rctr=0;foreach($cepasocialmediai as $ya):$rctr+=1;
                        $textsm ="";
                        if ($ya->multimedia=="3") {
                            $textsm =  "Official name of Facebook page : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
                        }else if($ya->multimedia=="4"){
                            $textsm =  "Film name : ".$ya->film_name."<br>Year produced : ".$ya->social_year."<br>File atached : "."<a target='_blank' href=".base_url('bmb_assets2/upload/cepa_multimedia/').$ya->file_upload.">".$ya->file_upload."</a>"."<br>URL/link : ".$ya->film_upload;
                        }else if($ya->multimedia=="10"){
                            $textsm =  "Official handle : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
                        }else if($ya->multimedia=="6"){
                            $textsm =  "URL/link : ".$ya->socialmedia_links;;
                        }else if($ya->multimedia=="7"){
                            $textsm =  "Official handle : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
                        }else if($ya->multimedia=="8"){
                            $textsm =  "Specify others : ".$ya->other_socialmedia."<br>"."URL/link : ".$ya->socialmedia_links;
                        }
                        ?>
                        <div id="bca<?php echo $ya->id_socialmedia?>" class="showdata">
                        <button type="button" class="btn btn-danger removecepasocialmedias" id="<?php echo $ya->id_socialmedia ?>" data-id="<?php echo $ya->id_socialmedia ?>" style="position: absolute;right: 3px">
                            Remove
                        </button>
                        <ul><li style="text-align:left;">
                            <?php echo $textsm; ?>
                        </li></ul>
                        </div>
                        <?php endforeach;?>
                    </td>
                    <td class="hide">
                        <?php $rctr=0;foreach($ceparadioi as $za):$rctr+=1;
                        ?>
                        <div id="bca<?php echo $za->id_radiostation?>" class="showdata">
                            <button type="button" class="btn btn-danger removeceparadios" id="<?php echo $za->id_radiostation ?>" data-id="<?php echo $za->id_radiostation ?>" style="position: absolute;right: 3px">
                                Remove
                            </button>
                            <ul><li style="text-align:left;">
                                <?php echo  "<b>Station name : </b>".(!empty($za->radiostation)?$za->cepa_multimedia_desc."<br>":"").
                                            "<b>Name : </b>".(!empty($za->radio_program)?$za->radio_program."<br>":"").
                                            "<b>URL/Link : </b>".(!empty($za->radio_link)?$za->radio_link."<br>":"")
                            ?>
                            </li></ul>
                        </div>
                        <?php endforeach;?>
                    </td>
                    <td class="hide">
                        <?php $rctr=0;foreach($cepasouveniri as $ta):$rctr+=1;
                        ?>
                        <div id="bca<?php echo $ta->id_souvenir?>" class="showdata">
                            <button type="button" class="btn btn-danger removecepasouvenirs" id="<?php echo $ta->id_souvenir ?>" data-id="<?php echo $ta->id_souvenir ?>" style="position: absolute;right: 3px">
                                Remove
                            </button>
                            <ul><li style="text-align:left;">
                                <?php echo  "<b>Souvenir item : </b>".($ta->souveniritem==15?$ta->souvenir_other."<br>":$ta->cepa_souvenir_details."<br>").
                                            "<b>Event name : </b>".(!empty($ta->souvenir_name)?$ta->souvenir_name."<br>":"").
                                            "<b>Year produced : </b>".(!empty($ta->souvenir_year)?$ta->souvenir_year."<br>":"")
                            ?>
                            </li></ul>
                        </div>
                        <?php endforeach;?>
                    </td>

                    <input type="hidden" id="cepamonths<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_month; ?>" />
                    <input type="hidden" id="cepadays<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_day; ?>" />
                    <input type="hidden" id="cepayears<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_year; ?>" />
                    <input type="hidden" id="chks1<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks1; ?>" />
                    <input type="hidden" id="chks2<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks2; ?>" />
                    <input type="hidden" id="chks3<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks3; ?>" />
                    <input type="hidden" id="chks4<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks4; ?>" />
                    <input type="hidden" id="chks5<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks5; ?>" />
                    <input type="hidden" id="chks6<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks6; ?>" />
                    <input type="hidden" id="chks7<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks7; ?>" />
                    <input type="hidden" id="chks8<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks8; ?>" />
                    <input type="hidden" id="chks9<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chks9; ?>" />
                    <input type="hidden" id="chks10<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chks10; ?>" />
                    <input type="hidden" id="chks11<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chks11; ?>" />
                    <input type="hidden" id="chks12<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chks12; ?>" />
                    <input type="hidden" id="chks13<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chks13; ?>" />

                    <input type="hidden" id="chkmm1<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm1; ?>" />
                    <input type="hidden" id="chkmm2<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm2; ?>" />
                    <input type="hidden" id="chkmm3<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm3; ?>" />
                    <input type="hidden" id="chkmm4<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm4; ?>" />
                    <input type="hidden" id="chkmm5<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm5; ?>" />
                    <input type="hidden" id="chkmm6<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm6; ?>" />
                    <input type="hidden" id="chkmm7<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm7; ?>" />
                    <input type="hidden" id="chkmm8<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm8; ?>" />
                    <input type="hidden" id="chkmm9<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->activity_chkmm9; ?>" />
                    <input type="hidden" id="chkmm10<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chkmm10; ?>" />
                    <input type="hidden" id="chkmm11<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chkmm11; ?>" />
                    <input type="hidden" id="chkmm12<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chkmm12; ?>" />
                    <input type="hidden" id="chkmm13<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chkmm13; ?>" />
                    <input type="hidden" id="chkmm14<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_chkmm14; ?>" />
                    <input type="hidden" id="audience<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->activity_audience_type; ?>" />

                    <input type="hidden" id="chkaa1<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_1; ?>" />
                    <input type="hidden" id="chkaa2<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_2; ?>" />
                    <input type="hidden" id="chkaa3<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_3; ?>" />
                    <input type="hidden" id="chkaa4<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_4; ?>" />
                    <input type="hidden" id="chkaa5<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_5; ?>" />
                    <input type="hidden" id="chkaa6<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_6; ?>" />
                    <input type="hidden" id="chkaa7<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_7; ?>" />
                    <input type="hidden" id="chkaa8<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_8; ?>" />
                    <input type="hidden" id="chkaa9<?php echo $row->id_cepa_activity;?>" value="<?php echo  $row->chk_audience_9; ?>" />
                    <input type="hidden" id="chkaa10<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_10; ?>" />
                    <input type="hidden" id="chkaa11<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_11; ?>" />
                    <input type="hidden" id="chkaa12<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_12; ?>" />
                    <input type="hidden" id="chkaa13<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_13; ?>" />
                    <input type="hidden" id="chkaa14<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_14; ?>" />
                    <input type="hidden" id="chkaa15<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_15; ?>" />
                    <input type="hidden" id="chkaa16<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_16; ?>" />
                    <input type="hidden" id="chkaa17<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_17; ?>" />
                    <input type="hidden" id="chkaa18<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_18; ?>" />
                    <input type="hidden" id="chkaa19<?php echo $row->id_cepa_activity;?>" value="<?php echo $row->chk_audience_19; ?>" />

            </tr>
            <?php
        }
    }

    public function deletecepaavtivityreportimg($id = null)
    {
            $sql1 = $this->db->where('id_activity_img',$id)
                                            ->get('tblpamaincepa_activity_img')
                                            ->row();

        if ($sql1->activity_img == "nophoto.jpg" || empty($sql1->activity_img)) {

            }elseif (!empty($sql1->activity_img)) {
                unlink('bmb_assets2/upload/cepa_activity_report/'.$sql1->activity_img);
            }

        $output = array();
         $sql = "DELETE FROM tblpamaincepa_activity_img WHERE id_activity_img = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshcepaprint()
    {
        $cepacode = $this->input->post('codegens');
        $cepaprinti = $this->pamain_model->get_cepa_print_indi($cepacode);
        $rctr=0;foreach($cepaprinti as $ca):$rctr+=1;
            ?>
            <div id="bca<?php echo $ca->id_cepa_print_materials?>" class="showdata">
            <button type="button" class="btn btn-danger removecepaprints" id="<?php echo $ca->id_cepa_print_materials ?>" data-id="<?php echo $ca->id_cepa_print_materials ?>" style="position: absolute;right: 3px">
                    Remove
                </button>
            <ul><li style="text-align:left">
                <?php echo  "<b>Print name : </b>".($ca->print_name==14?$ca->print_name_others."<br>":$ca->cepa_print_details."<br>").
                            "<b>Title : </b>".(!empty($ca->title_print)?$ca->title_print."<br>":"").
                            "<b>Year produced : </b>".(!empty($ca->year_produced)?$ca->year_produced."<br>":"").
                            ($ca->print_name==8?"Volume/Issue number : ".$ca->volume:"")
                ?>
            </li></ul>
            </div>
        <?php endforeach;
    }

    public function deletecepaprintindi($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_print_materials WHERE id_cepa_print_materials = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletecepamultimediai($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_multimedia_materials WHERE id_multimedia = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    // public function deletecepasocialmediai($id = null)
    // {
    //     $output = array();
    //      $sql = "DELETE FROM tblpamaincepa_socialmedia_materials WHERE id_socialmedia = '$id'";

    //     if($this->db->query($sql)){
    //         $output['status'] = 'success';
    //         $output['message'] = 'Data Removed successfully';
    //     }
    //     else{
    //         $output['status'] = 'error';
    //         $output['message'] = 'Something went wrong in deleting the data';
    //     }
    //     echo json_encode($output);
    // }

    public function deletecepaavtivityreport($id = null)
    {
         $sql = "DELETE FROM tblpamaincepa_activity_details WHERE id_cepa_activity = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshcepamultimedia()
    {
        $cepacode = $this->input->post('codegens');
        $data = $this->pamain_model->get_cepa_multimedia_indi($cepacode);
        $rctr=0;foreach($data as $xa):$rctr+=1;
            ?>
            <div id="bca<?php echo $xa->id_multimedia?>" class="showdata">
                <button type="button" class="btn btn-danger removecepamultimedia" id="<?php echo $xa->id_multimedia ?>" data-id="<?php echo $xa->id_multimedia ?>" style="position: absolute;right: 3px">
                    Remove
                </button>
                <ul><li style="text-align:left;">
                    <?php echo  "<b>Print name : </b>".($xa->film_name==15?$xa->cepa_multimedia_other."<br>":$xa->cepa_multimedia_desc."<br>").
                                "<b>Title : </b>".(!empty($xa->m_title)?$xa->m_title."<br>":"").
                                "<b>Year produced : </b>".(!empty($xa->m_year)?$xa->m_year."<br>":"").
                                "<b>File : </b>".(!empty($xa->file_upload)?"<a target='_blank' href=".base_url('bmb_assets2/upload/cepa_multimedia/').$xa->file_upload.">".$xa->file_upload."</a><br>":"").
                                // $textsm =  "Film name : ".$ya->film_name."<br>Year produced : ".$ya->social_year."<br>File atached : "."<a target='_blank' href=".base_url('bmb_assets2/upload/cepa_multimedia/').$ya->file_upload.">".$ya->file_upload."</a>"."<br>URL/link : ".$ya->film_upload;
                                "<b>URL/link : </b>".(!empty($xa->url_links)?$xa->url_links:"")
                    ?>
                </li></ul>
            </div>
        <?php endforeach;
    }

    public function deletecepasocialmediai($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_socialmedia_materials WHERE id_socialmedia = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshcepasocialmedia()
    {
        $cepacode = $this->input->post('codegens');
        $data = $this->pamain_model->get_cepa_socialmedia_indi($cepacode);
            $rctr=0;foreach($data as $ya):$rctr+=1;
            $textsm ="";
            if ($ya->multimedia=="3") {
             $textsm =  "Official name of Facebook page : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
            }else if($ya->multimedia=="4"){
             $textsm =  "Film name : ".$ya->film_name."<br>Year produced : ".$ya->social_year."<br>File atached : "."<a target='_blank' href=".base_url('bmb_assets2/upload/cepa_multimedia/').$ya->file_upload.">".$ya->file_upload."</a>"."<br>URL/link : ".$ya->film_upload;
            }else if($ya->multimedia=="10"){
             $textsm =  "Official handle : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
            }else if($ya->multimedia=="6"){
             $textsm =  "URL/link : ".$ya->socialmedia_links;;
            }else if($ya->multimedia=="7"){
             $textsm =  "Official handle : ".$ya->film_name."<br>"."URL/link : ".$ya->socialmedia_links;
            }else if($ya->multimedia=="8"){
             $textsm =  "Specify others : ".$ya->other_socialmedia."<br>"."URL/link : ".$ya->socialmedia_links;
            }
            ?>
            <div id="bca<?php echo $ya->id_socialmedia?>" class="showdata">
            <button type="button" class="btn btn-danger removecepasocialmedias" id="<?php echo $ya->id_socialmedia ?>" data-id="<?php echo $ya->id_socialmedia ?>" style="position: absolute;right: 3px">
             Remove
            </button>
            <ul><li style="text-align:left;">
             <?php echo $textsm; ?>
            </li></ul>
            </div>
        <?php endforeach;
    }

    public function deleteceparadioi($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_radiostation WHERE id_radiostation = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshceparadio()
    {
        $cepacode = $this->input->post('codegens');
        $data = $this->pamain_model->get_cepa_radio_indi($cepacode);
        $rctr=0;foreach($data as $za):$rctr+=1;
            ?>
            <div id="bca<?php echo $za->id_radiostation?>" class="showdata">
                <button type="button" class="btn btn-danger removeceparadios" id="<?php echo $za->id_radiostation ?>" data-id="<?php echo $za->id_radiostation ?>" style="position: absolute;right: 3px">
                    Remove
                </button>
                <ul><li style="text-align:left;">
                    <?php echo  "<b>Station name : </b>".(!empty($za->radiostation)?$za->cepa_multimedia_desc."<br>":"").
                                "<b>Name : </b>".(!empty($za->radio_program)?$za->radio_program."<br>":"").
                                "<b>URL/Link : </b>".(!empty($za->radio_link)?$za->radio_link."<br>":"")
                ?>
                </li></ul>
            </div>
        <?php endforeach;
    }


    public function deletecepasouveniri($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_souvenir WHERE id_souvenir = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshcepasouvenir()
    {
        $cepacode = $this->input->post('codegens');
        $data = $this->pamain_model->get_cepa_souvenir_indi($cepacode);
        $rctr=0;foreach($data as $ta):$rctr+=1;
            ?>
            <div id="bca<?php echo $ta->id_souvenir?>" class="showdata">
                <button type="button" class="btn btn-danger removecepasouvenirs" id="<?php echo $ta->id_souvenir ?>" data-id="<?php echo $ta->id_souvenir ?>" style="position: absolute;right: 3px">
                    Remove
                </button>
                <ul><li style="text-align:left;">
                    <?php echo  "<b>Print name : </b>".($ta->souveniritem==15?$ta->souvenir_other."<br>":$ta->cepa_souvenir_details."<br>").
                                "<b>Event name : </b>".(!empty($ta->souvenir_name)?$ta->souvenir_name:"").
                                "<b>Year produced : </b>".(!empty($ta->souvenir_year)?$ta->souvenir_year."<br>":"")
                ?>
                </li></ul>
            </div>
        <?php endforeach;
    }

    public function cepaactivityreportEdit()
    {
        if(isset($_FILES["edit-cepa_activity_img"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_activity_report';
            $config['allowed_types'] = 'jpeg|jpg|png';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-cepa_activity_img'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('cepaact-gencode',true),
                    'cepacode'    => $this->input->post('edit-CEPAGenCode',true),
                    'activity_img'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                    'upload_on'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertcepaactivityreportImage($postDataImage);
            }
        }
    }
    public function cepaactivityreportimg()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallCEPAActivityimg($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removecepaactivityimg" data-id="'.$row->id_activity_img.'">-</button>
           <a href="'.base_url().'bmb_assets2/upload/cepa_activity_report/'.$row->activity_img.'">'.$row->activity_img.'</a>
           </div>
           ';
        }
         echo $output;
    }

    public function update_cepareportactivity(){
        $gencode = $this->input->post("cepaact-gencode");
        if($this->session->userdata('email')){
            $ids = $this->input->post("cepaact-id");
            $details = array('activity_name' => $this->input->post("edit-cepa_activity"),
                             'activity_month' => $this->input->post("edit-date_cepa_month"),
                             'activity_day' => $this->input->post("edit-date_cepa_day"),
                             'activity_year' => $this->input->post("edit-date_cepa_year"),
                             'activity_venue' => $this->input->post("edit-cepa_venue"),
                             'activity_objective' => $this->input->post("edit-cepa_objective"),
                             'activity_summary' => $this->input->post("edit-cepa_summary"),
                             'activity_male' => $this->input->post("edit-cepa_male"),
                             'activity_female' => $this->input->post("edit-cepa_female"),
                             'activity_total' => $this->input->post("edit-cepa_total"),
                             'activity_audience_type' => $this->input->post("edit-cepa_audience_type"),
                             'activity_details' => $this->input->post("edit-cepa_details"),
                             'chk_s_others' => $this->input->post("edit-chk_s_others"),
                             'chk_mm_others' => $this->input->post("edit-chk_mm_others"),
                             'activity_chks1' => $this->input->post("edit-chk_s1"),
                             'activity_chks2' => $this->input->post("edit-chk_s2"),
                             'activity_chks3' => $this->input->post("edit-chk_s3"),
                             'activity_chks4' => $this->input->post("edit-chk_s4"),
                             'activity_chks5' => $this->input->post("edit-chk_s5"),
                             'activity_chks6' => $this->input->post("edit-chk_s6"),
                             'activity_chks7' => $this->input->post("edit-chk_s7"),
                             'activity_chks8' => $this->input->post("edit-chk_s8"),
                             'activity_chks9' => $this->input->post("edit-chk_s9"),
                             'activity_chks10' => $this->input->post("edit-chk_s10"),
                             'activity_chks11' => $this->input->post("edit-chk_s11"),
                             'activity_chks12' => $this->input->post("edit-chk_s12"),
                             'activity_chks13' => $this->input->post("edit-chk_s13"),
                             'activity_chkmm1' => $this->input->post("edit-chk_mm1"),
                             'activity_chkmm2' => $this->input->post("edit-chk_mm2"),
                             'activity_chkmm3' => $this->input->post("edit-chk_mm3"),
                             'activity_chkmm4' => $this->input->post("edit-chk_mm4"),
                             'activity_chkmm5' => $this->input->post("edit-chk_mm5"),
                             'activity_chkmm6' => $this->input->post("edit-chk_mm6"),
                             'activity_chkmm7' => $this->input->post("edit-chk_mm7"),
                             'activity_chkmm8' => $this->input->post("edit-chk_mm8"),
                             'activity_chkmm9' => $this->input->post("edit-chk_mm9"),
                             'activity_chkmm10' => $this->input->post("edit-chk_mm10"),
                             'activity_chkmm11' => $this->input->post("edit-chk_mm11"),
                             'activity_chkmm12' => $this->input->post("edit-chk_mm12"),
                             'activity_chkmm13' => $this->input->post("edit-chk_mm13"),
                             'activity_chkmm13' => $this->input->post("edit-chk_mm14"),
                             'activity_audience_other' => $this->input->post("edit-cepa_audience_type_others"),
                             'chk_audience_1' => $this->input->post('edit-chk_au1'),
                             'chk_audience_2' => $this->input->post('edit-chk_au2'),
                             'chk_audience_3' => $this->input->post('edit-chk_au3'),
                             'chk_audience_4' => $this->input->post('edit-chk_au4'),
                             'chk_audience_5' => $this->input->post('edit-chk_au5'),
                             'chk_audience_6' => $this->input->post('edit-chk_au6'),
                             'chk_audience_7' => $this->input->post('edit-chk_au7'),
                             'chk_audience_8' => $this->input->post('edit-chk_au8'),
                             'chk_audience_9' => $this->input->post('edit-chk_au9'),
                             'chk_audience_10' =>$this->input->post('edit-chk_au10'),
                             'chk_audience_11' =>$this->input->post('edit-chk_au11'),
                             'chk_audience_12' =>$this->input->post('edit-chk_au12'),
                             'chk_audience_13' =>$this->input->post('edit-chk_au13'),
                             'chk_audience_14' =>$this->input->post('edit-chk_au14'),
                             'chk_audience_15' =>$this->input->post('edit-chk_au15'),
                             'chk_audience_16' =>$this->input->post('edit-chk_au16'),
                             'chk_audience_17' =>$this->input->post('edit-chk_au17'),
                             'chk_audience_18' =>$this->input->post('edit-chk_au18'),
                             'chk_audience_18_others' => $this->input->post('edit-chk_au1_others',true),
                             'chk_audience_19' =>$this->input->post('edit-chk_au19'),
                                );
            $this->pamain_model->update_cepaactivityreport($details,$ids);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function KAPSurveyedReport()
    {
        if(isset($_FILES["surveyed_report"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_surveyed_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('surveyed_report'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function KAPSummarySurveyedReport()
    {
        if(isset($_FILES["summarysurveyed_report"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_summary_surveyed_report';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('summarysurveyed_report'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }

    public function EventactivityReport()
    {
        if(isset($_FILES["event_report"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/cepa_activity_event';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('event_report'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }


        }
    }



    // public function KAPSurveyedReport()
    // {
    //     if(isset($_FILES["surveyed_report"]["name"]))
    //        {
    //         $config['upload_path'] = 'bmb_assets2/upload/cepa_surveyed_report';
    //         $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
    //         $this->load->library('upload', $config);
    //         $this->upload->initialize($config);
    //         if(!$this->upload->do_upload('surveyed_report'))
    //         {
    //              echo $this->upload->display_errors();
    //         }
    //         else
    //         {
    //              $data = $this->upload->data();
    //              $this->load->library('image_lib', $config);
    //              $this->image_lib->initialize($config);
    //                 $filenames = $data['file_name'];
    //                 $output['status'] = $filenames;
    //                 echo json_encode($output);

    //             $data['mainproj'] = (object)$postDataImage = [
    //                 'generatedcode'    => $this->input->post('gencode',true),
    //                 'kap_month'    => $this->input->post('date_kap_month',true),
    //                 'kap_day'    => $this->input->post('date_kap_day',true),
    //                 'kap_year'    => $this->input->post('date_kap_year',true),
    //                 'kap_respondents'    => $this->input->post('kap_respondents',true),
    //                 'kap_remarks'    => $this->input->post('kap_remarks',true),
    //                 'surveyed_report'      => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
    //                 'uploaded_on'       =>  date("Y-m-d H:i:s")
    //             ];

    //             $this->pamain_model->insertKAPReport($postDataImage);
    //         }
    //     }
    // }

    public function kapsurveyreportFetch()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallKapSurveyReport($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_kap; ?>" class="trow">
                    <td ><?php echo $row->kap_month."/".$row->kap_day."/".$row->year; ?></td>
                    <td ><?php echo $row->kap_respondents; ?></td>
                    <td ><?php echo number_format($row->no_respondents); ?></td>
                    <td ><?php echo $row->proponent_name; ?></td>
                    <td ><?php echo '<label>Survey Report : </label><a target="_blank" href="'.base_url().'bmb_assets2/upload/cepa_surveyed_report/'.$row->surveyed_report.'">'.$row->surveyed_report.'</a><br>'.'<label>Summary of Survey Report : </label><a target="_blank" href="'.base_url().'bmb_assets2/upload/cepa_summary_surveyed_report/'.$row->summary_surveyed_report.'">'.$row->summary_surveyed_report.'</a>' ?></td>
                    <td ><?php echo $row->kap_remarks; ?></td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removekapsurvey" data-id="<?php echo $row->id_kap; ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function deletekapsurveyedreport($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpamaincepa_kap_surveyed WHERE id_kap = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    function numeric_wcomma ($str)
    {
        return preg_match('/^[0-9,]+$/', $str);
    }

    function insertbdfeimages()
 {
    sleep(3);
        if($_FILES["files_bdfe_image"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["files_bdfe_image"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["files_bdfe_image"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["files_bdfe_image"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["files_bdfe_image"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["files_bdfe_image"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["files_bdfe_image"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/bdfe_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('gencode',true),
            'bdfe_codegen' => $this->input->post('bdfe-gencode',true),
            'bdfe_image_upload' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d"),

          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createbdfeimagesupload($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

 function insertbdfeimagesEdit()
 {
    sleep(3);
        if($_FILES["editfiles_bdfe_image"]["name"] != '')
        {
         $output = '';
         $config["upload_path"] = 'bmb_assets2/upload/bdfe_img';
         $config["allowed_types"] = 'gif|jpg|png';
         $this->load->library('upload', $config);
         $this->upload->initialize($config);
         for($count = 0; $count<count($_FILES["editfiles_bdfe_image"]["name"]); $count++)
         {
          $_FILES["file"]["name"] = $_FILES["editfiles_bdfe_image"]["name"][$count];
          $_FILES["file"]["type"] = $_FILES["editfiles_bdfe_image"]["type"][$count];
          $_FILES["file"]["tmp_name"] = $_FILES["editfiles_bdfe_image"]["tmp_name"][$count];
          $_FILES["file"]["error"] = $_FILES["editfiles_bdfe_image"]["error"][$count];
          $_FILES["file"]["size"] = $_FILES["editfiles_bdfe_image"]["size"][$count];

          if($this->upload->do_upload('file'))
          {
           $uploadData = $this->upload->data();
           $filenames = $uploadData['file_name'];

           $data = $this->upload->data();
           $output .= '
           <div class="col-md-3">
            <img src="'.base_url().'bmb_assets2/upload/bdfe_img/'.$data["file_name"].'" class="img-responsive img-thumbnail img-gallery" />
           </div>
           ';

          }
          $data['pamainPambFile'] = (object)$postDataPambGallery = [
            'generatedcode' => $this->input->post('bdfe-gencode',true),
            'bdfe_codegen' => $this->input->post('bdfe-gencode2',true),
            'bdfe_image_upload' => (!empty($filenames)?$filenames:""),
            'date_uploaded' => date("Y-m-d"),

          ];
            if (empty($filenames)) {
                $output['error'] = true;
            } else {
                $query = $this->pamain_model->createbdfeimagesupload($postDataPambGallery);
                if($query){
                }else{
                $output['error'] = true;
                }
            }
         }
         echo $output;
        }
 }

    public function insertbdfetechass()
    {

                date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
                $now = date('Y-m-d');
                $output = array();
                // $rel_data1 = $this->input->post('tablbdfeponame');
                // $rel_data2 = $this->input->post('tablbdfeponamehistory');
                $data['data'] = (object)$postData = [
                    'generatedcode' => $this->input->post('bdfecodesgen',true),
                    'bdfe_codegen' => $this->input->post('bdfe-gencode',true),
                    'enterprise_name' => $this->input->post('lhName',true),
                    // 'lh_po_assisted' => $this->input->post('lh_po_assisted',true),
                    // 'lh_contact' => $this->input->post('lh_mobile',true),
                    'dor_month' => $this->input->post('dateregismonth',true),
                    'dor_day' => $this->input->post('dateregisday',true),
                    'dor_year' => $this->input->post('dateregisyear',true),
                    'type_registration' => $this->input->post('typeregis',true),
                    'other_registration' => $this->input->post('typeregis_others',true),
                    'lh_category' => $this->input->post('liveproducts',true),
                    'lh_sub_category' => $this->input->post('lh_type',true),
                    'lh_category_others' => $this->input->post('lh_cat_others',true),
                    'lh_desc' => $this->input->post("lh_type_desc"),
                    'bdfe_map_img_file' => $this->input->post("files_bdfe_imagetext"),
                    'lh_region' => $this->input->post("lh_reg_office"),
                    'lh_province' => $this->input->post("lh_prov_office"),
                    'lh_municipal' => $this->input->post("lh_mun_office"),
                    'lh_barangay' => $this->input->post("lh_barangay_office"),
                    'lh_month_inclusion' => $this->input->post('lh_month_inclusion',true),
                    'lh_day_inclusion' => $this->input->post('lh_day_inclusion',true),
                    'lh_year_inclusion' => $this->input->post('lh_year_inclusion',true),
                    'date_rapidassess_month' => $this->input->post('lh_month_rapassess',true),
                    'date_rapidassess_day' => $this->input->post('lh_day_rapassess',true),
                    'date_rapidassess_year' => $this->input->post('lh_year_rapassess',true),
                    'lh_po_male' => str_replace(',','',$this->input->post('no_male_lh',true)),
                    'lh_po_female' => str_replace(',','',$this->input->post('no_female_lh',true)),
                    'bdfe_score' => str_replace(',','',$this->input->post('lh_score',true)),
                    'bdfe_enterprise_shpfile' => $this->input->post('zip_shpfile_bdferesource_text')

                ];
                        $query = $this->pamain_model->createPAbdfe($postData);
                        // }
                        if($query){
                        $output['message'] = 'Add';
                        $output['status'] = 'Successfully added new Biodiversity-friendly enterprise';
                        }else{

                        }
                echo json_encode($output);
    }

    public function fetchbdfeInfo(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllpdfeinfo($codegens);
        foreach($data as $row){
            $code2 = $row->bdfe_codegen;
            $data2 = $this->pamain_model->getAllbdfeponameinfo($code2);
            $data3 = $this->pamain_model->getAllbdfeponameinfo2($code2);
            $total = $row->lh_po_male + $row->lh_po_female;
            $name="";
            foreach($data3 as $tt):
                $name=$tt->pomem;
            endforeach;

        ?>
            <tr id="<?php echo $row->id_livelihood; ?>" class="trow">
                <td><?php echo '<img src="'.base_url('bmb_assets2/upload/bdfe_img/').(!empty($row->bdfe_map_img_file)?$row->bdfe_map_img_file:"nophoto.jpg").'" style="max-height: 250px; max-width: 250px;"></img>'; ?><br>
                    <b>Shapefile : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/bdfe_resource_shpfile/').$row->bdfe_enterprise_shpfile ?>"><?php echo $row->bdfe_enterprise_shpfile ?></a>
                </td>
                <td>
                    <?php echo '<b>Name of Enterprise : </b>'.$row->enterprise_name.
                               // '<br><b>Name of PO : </b><br>'.$name.
                               '<br><b>Date Registered : </b>'.$row->dor_month."/".$row->dor_day."/".$row->dor_year.
                               '<br><b>Type Registered : </b>'.($row->type_registration=="4"?$row->other_registration:$row->bdfe_registration_type).
                               '<br><b>Type of Enterprise : </b>'.$row->products_desc.(($row->lh_sub_category=="6" || $row->lh_sub_category=="16" || $row->lh_sub_category=="23" || $row->lh_sub_category=="33" || $row->lh_sub_category=="41")?'('.$row->lh_category_others.')':'('.$row->lh_type.')').
                               '<br><b>PO Office Location : </b>'.(!empty($row->lh_barangay)?$row->barangayName.', ':"").(!empty($row->lh_municipal)?$row->municipalName.', ':"").(!empty($row->lh_province)?$row->provinceName:"")
                    ?>
                </td>
                <td class="hidden"><?php echo $row->generatedcode ?></td>
                <td class="hidden"><?php echo $row->bdfe_codegen ?></td>
                <td class="hidden"><?php echo $row->id_livelihood ?></td>
                <td class="hidden"><?php echo $row->enterprise_name ?></td>
                <td class="hidden"><?php echo $row->lh_po_male ?></td>
                <td class="hidden"><?php echo $row->lh_po_female ?></td>
                <td class="hidden"><?php echo $row->lh_po_male + $row->lh_po_female ?></td>
                <td class="hidden"><?php echo number_format($row->poassetval,2) ?></td>
                <td class="hidden"><?php echo number_format($row->avgnetmonthincome,2) ?></td>
                <td class="hidden"><?php echo $row->date_profile_month ?></td>
                <td class="hidden"><?php echo $row->date_profile_day ?></td>
                <td class="hidden"><?php echo $row->date_profile_year ?></td>
                <td class="hidden"><?php echo $row->size_enterprise ?></td>
                <td class="hidden"><?php echo $row->lh_enteprise_other ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_month ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_day ?></td>
                <td class="hidden"><?php echo $row->date_appraisal_year ?></td>
                <td class="hidden"><?php echo $row->bdfe_level ?></td>
                <td class="hidden"><?php echo $row->rapidhabitatassess_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->rapidhabitatassess_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/appraisal_file/').$row->rapidhabitatassess_file.'">'.$row->rapidhabitatassess_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->businesspermit_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->businesspermit_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/appraisal_file/').$row->businesspermit_file.'">'.$row->businesspermit_file.'</a>':"" )?></td>
                <td class="hidden"><?php echo $row->poinventory_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->poinventory_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/appraisal_file/').$row->poinventory_file.'">'.$row->poinventory_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->bamsresult_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->bamsresult_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/strengthened_file/').$row->bamsresult_file.'">'.$row->bamsresult_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->businessplan_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->businessplan_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/strengthened_file/').$row->businessplan_file.'">'.$row->businessplan_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->seamsresult_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->seamsresult_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/strengthened_file/').$row->seamsresult_file.'">'.$row->seamsresult_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->updatebusinessplan_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->updatebusinessplan_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/developed_file/').$row->updatebusinessplan_file.'">'.$row->updatebusinessplan_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->bamsresultdeveloped_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->bamsresultdeveloped_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/developed_file/').$row->bamsresultdeveloped_file.'">'.$row->bamsresultdeveloped_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->businesspermitdeveloped_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->businesspermitdeveloped_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/developed_file/').$row->businesspermitdeveloped_file.'">'.$row->businesspermitdeveloped_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->pppagreementdeveloped_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->pppagreementdeveloped_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/developed_file/').$row->pppagreementdeveloped_file.'">'.$row->pppagreementdeveloped_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->lguresolution_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->lguresolution_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/sustained_file/').$row->lguresolution_file.'">'.$row->lguresolution_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->bamsresultsustained_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->bamsresultsustained_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/sustained_file/').$row->bamsresultsustained_file.'">'.$row->bamsresultsustained_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->seamsresultsustained_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->seamsresultsustained_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/sustained_file/').$row->seamsresultsustained_file.'">'.$row->seamsresultsustained_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->submissionappraisalpdf_file; ?></td>
                <td class="hidden"><?php echo (!empty($row->submissionappraisalpdf_file)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/submission_appraisal_pdf/').$row->submissionappraisalpdf_file.'">'.$row->submissionappraisalpdf_file.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->qualifiesrecog; ?></td>
                <td class="hidden"><?php echo $row->date_recog_endorsement_month; ?></td>
                <td class="hidden"><?php echo $row->date_recog_endorsement_day; ?></td>
                <td class="hidden"><?php echo $row->date_recog_endorsement_year; ?></td>
                <td class="hidden"><?php echo $row->date_recog_validation_month; ?></td>
                <td class="hidden"><?php echo $row->date_recog_validation_day; ?></td>
                <td class="hidden"><?php echo $row->date_recog_validation_year; ?></td>
                <td class="hidden"><?php echo $row->resultvalidation; ?></td>
                <td class="hidden"><?php echo $row->dateCOR_month; ?></td>
                <td class="hidden"><?php echo $row->dateCOR_day; ?></td>
                <td class="hidden"><?php echo $row->dateCOR_year; ?></td>
                <td class="hidden"><?php echo $row->recogfindingsdocupload; ?></td>
                <td class="hidden"><?php echo (!empty($row->recogfindingsdocupload)?'<label>File Attached : </label><a href="'.base_url('bmb_assets2/upload/bdfe_recognition_file/').$row->recogfindingsdocupload.'">'.$row->recogfindingsdocupload.'</a>':"") ?></td>
                <td class="hidden"><?php echo $row->lh_po_assisted; ?></td>
                <td class="hidden"><?php echo $row->lh_contact; ?></td>
                <td class="hidden"><?php echo $row->dor_month; ?></td>
                <td class="hidden"><?php echo $row->dor_day; ?></td>
                <td class="hidden"><?php echo $row->dor_year; ?></td>
                <td class="hidden"><?php echo $row->type_registration; ?></td>
                <td class="hidden"><?php echo $row->other_registration; ?></td>
                <td class="hidden"><?php echo $row->lh_category_others; ?></td>
                <td class="hidden"><?php echo $row->lh_long_dms_direction; ?></td>
                <td class="hidden"><?php echo $row->lh_long_dms_degree; ?></td>
                <td class="hidden"><?php echo $row->lh_long_dms_minute; ?></td>
                <td class="hidden"><?php echo $row->lh_long_dms_second; ?></td>
                <td class="hidden"><?php echo $row->lh_long_dd; ?></td>
                <td class="hidden"><?php echo $row->lh_lat_dms_direction; ?></td>
                <td class="hidden"><?php echo $row->lh_lat_dms_degree; ?></td>
                <td class="hidden"><?php echo $row->lh_lat_dms_minute; ?></td>
                <td class="hidden"><?php echo $row->lh_lat_dms_second; ?></td>
                <td class="hidden"><?php echo $row->lh_lat_dd; ?></td>
                <td class="hidden"><?php echo $row->lh_month_inclusion; ?></td>
                <td class="hidden"><?php echo $row->lh_day_inclusion; ?></td>
                <td class="hidden"><?php echo $row->lh_year_inclusion; ?></td>
                <td class="hidden"><?php echo $row->lh_desc; ?></td>
                <td class="hidden"><?php echo $row->bdfe_map_img_file; ?></td>
                <td class="hidden"><?php echo $row->bdfe_score; ?></td>
                <td class="hidden">
                    <?php foreach($data2 as $cc):
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_bdfe_po?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebdfeponame" id="<?php echo $cc->id_bdfe_po ?>" data-id="<?php echo $cc->id_bdfe_po ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                        <?php echo "<b>PO name : </b>".$cc->bdfe_po_name."<br>"; ?>
                        <?php echo "<b>Contact No. : </b>".$cc->bdfe_contact."<br>"; ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/bdfe_resource_shpfile/').$row->bdfe_enterprise_shpfile ?>"><?php echo $row->bdfe_enterprise_shpfile ?></a></td>
                <td class="hide"><?php echo $row->bdfe_enterprise_shpfile; ?></td>
                <td>
                    <?php echo  "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-success btn-edit-prog btn-xs' onclick='addbdfe_po_names(this);'> &nbsp;Name of PO's&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-primary btn-edit-prog btn-xs' onclick='addbdfe_po_product(this);'> &nbsp;PO Products&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-success btn-edit-prog btn-xs' onclick='addbdfe_po_resource_loc(this);'>  &nbsp;PO Resources&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-primary btn-edit-prog btn-xs' onclick='edit_bdfe_profiling(this);'>  &nbsp;Profiling&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-success btn-edit-prog btn-xs' onclick='edit_bdfe_appraisal(this);'  id='appraisalidbutton'> &nbsp;Appraisal&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-primary btn-edit-prog btn-xs' onclick='edit_bdfe_enhancement(this);'>  &nbsp;Enhancement&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-success btn-edit-prog btn-xs' onclick='edit_bdfe_recognition(this);'>  &nbsp;Recognition&nbsp;</a><br>".
                                "<a style='margin-top:5px; width:150px' value='".$row->id_livelihood."' class='btn btn-primary btn-edit-prog btn-xs' onclick='edit_bdfe_supportingfile(this);'> &nbsp;Supporting Material&nbsp;</a><br>"
                    ?>
                    <input class="hidden" id="bdfepoprod_id<?php echo $row->id_livelihood;?>" value="<?php echo $row->id_livelihood ?>" />
                    <input class="hidden" id="bdfetor_id<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_category ?>" />
                    <input class="hidden" id="bdfetor_id2<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_sub_category ?>" />
                    <input class="hidden" id="bdfeloc_1<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_region ?>" />
                    <input class="hidden" id="bdfeloc_2<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_province ?>" />
                    <input class="hidden" id="bdfeloc_3<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_municipal ?>" />
                    <input class="hidden" id="bdfeloc_4<?php echo $row->id_livelihood;?>" value="<?php echo $row->lh_barangay ?>" />
                    <input class="hidden" id="bdfeloc_5<?php echo $row->id_livelihood;?>" value="<?php echo $row->date_rapidassess_month ?>" />
                    <input class="hidden" id="bdfeloc_6<?php echo $row->id_livelihood;?>" value="<?php echo $row->date_rapidassess_day ?>" />
                    <input class="hidden" id="bdfeloc_7<?php echo $row->id_livelihood;?>" value="<?php echo $row->date_rapidassess_year ?>" />
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_livelihood;?>" id="btn-edit" class="btn btnbtn btn-info btn-xs" onclick="editbdfe(this);"> View|Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removebdfelivelihood" data-id="<?php echo $row->bdfe_codegen ?>" title="Remove">Remove</button>
                </td>
            </tr>
        <?php
        }
    }

    public function insertbdfepoinfo(){

    $rel_data1 = $this->input->post('tablbdfeponamehistory');
    $output = array();
        $data['IncomeGenerated'] = (object)$postData = [
            'generatedcode' => $this->input->post('bdfeponame-gencode',true),
            'bdfe_codegen'    =>  $this->input->post('bdfeponame-gencode2',true),
            'bdfe_po_codegen' => $this->input->post('bdfepocodesgen',true),
            'bdfe_po_name' => $this->input->post('lh_po_assisted',true),
            'bdfe_contact' => $this->input->post('lh_mobile'),
            'bdfe_email' => $this->input->post('lh_emailaddress'),
            'bdfe_socialmedia' => $this->input->post('lh_socialmedia')
        ];

        $query = $this->pamain_model->createPAbdfepoInformation($postData,$rel_data1);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added PO Name!';
        }else{

        }
        echo json_encode($output);
    }

    public function fetchBDFEPOnames(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallpabdfeponames($codegens);
        foreach($data as $row){
            $code2 = $row->bdfe_po_codegen;
            $data2 = $this->pamain_model->getallpabdfeponamesStatHistory($code2);
            $data3 = $this->pamain_model->getallpabdfeponamesStatHistorys($code2);
            ?>
            <tr id="<?php echo $row->id_bdfe_po; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode; ?></td>
                <td class="hide"><?php echo $row->bdfe_codegen; ?></td>
                <td class="hide"><?php echo $row->bdfe_po_codegen; ?></td>
                <td class=""><?php echo $row->bdfe_po_name; ?></td>
                <td class=""><?php echo $row->bdfe_contact; ?></td>
                <td>
                    <?php foreach($data3 as $row2): ?>
                        <div id="divdevelopmentedit<?php echo $row2->id_bdfe_pohistory?>" class="showdata">
                            <fieldset>
                                <div class="col-xs-12" style="display: table-cell;">
                                    <!-- <?php echo $row2->postathis; ?> -->
                                    <?php echo "Status : ".$row2->po_status."<br>As of (Year) : ".$row2->bdfe_po_year."<br>Remarks : ".$row2->bdfe_po_remarks."<br>"; ?>

                                </div>
                            </fieldset>
                        </div>
                    <?php endforeach; ?>
                </td>
                <td class="hide">
                    <?php $pctr=0;foreach($data3 as $cc):$pctr+=1;
                        // if(!empty($cc->bdfe_po_codegen)):
                        ?>
                       <div id="divdevelopmentedit<?php echo $cc->id_bdfe_pohistory?>" class="showdata" style="display: inline-block;">
                        <fieldset>
                            <div class="col-xs-12" style="display: table-cell;">
                                    <?php echo "Status : ".$cc->po_status."<br>As of (Year) : ".$cc->bdfe_po_year."<br>Remarks : ".$cc->bdfe_po_remarks."<br>"; ?>

                                </div>
                                <button type="button" class="btn btn-danger btn-xs removebdfeponamehistory" id="<?php echo $cc->id_bdfe_pohistory ?>" data-id="<?php echo $cc->id_bdfe_pohistory ?>">Remove
                            </button>
                            </fieldset>
                        </div>
                    <?php endforeach; ?>
                </td>
                <td class="hide"><?php echo $row->bdfe_email; ?></td>
                <td class="hide"><?php echo $row->bdfe_socialmedia; ?></td>
                <td>
                    <button type="button" style="float: right" class="btn btnbtn btn-danger btn-xs removrponame" data-id="<?php echo $row->bdfe_po_codegen ?>" title="Remove">Remove</button>
                    <button type="button" style="float: right" value="<?php echo $row->id_bdfe_po;?>" class="btn btnbtn btn-info btn-xs" onclick="editbdfeponameshistoryform(this)">Edit </button>
                </td>
            <input type="hidden" id="bdfeponame1<?php echo $row->id_bdfe_po;?>" value="<?php echo $row->id_bdfe_po ?>" />

            </tr>

            <?php
        }
    }

    public function update_bdfeponames(){
        if($this->session->userdata('email')){
            $ipaf_id = $this->input->post("editbdfeponame-id");
            $ipafdetails = array('bdfe_po_name' => $this->input->post('edit-lh_po_assisteds',true),
                                 'bdfe_contact' => $this->input->post('edit-lh_mobiles',true),
                                 'bdfe_email' => $this->input->post('edit-lh_emailaddress',true),
                                 'bdfe_socialmedia' => $this->input->post('edit-lh_socialmedia',true));
            $this->pamain_model->update_bdfeponames($ipafdetails,$ipaf_id);
            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function deletepohistorystat($id = null)
    {
        $output = array();
        $sql = "DELETE tblpalivelihood_pohistory
                FROM tblpalivelihood_pohistory
                WHERE tblpalivelihood_pohistory.id_bdfe_pohistory = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteponamesa($id = null)
    {
        $output = array();
        $sql = "DELETE tblpalivelihood_poname,tblpalivelihood_pohistory
                FROM tblpalivelihood_poname
                LEFT JOIN tblpalivelihood_pohistory ON tblpalivelihood_poname.bdfe_po_codegen = tblpalivelihood_pohistory.bdfe_po_codegen
                WHERE tblpalivelihood_poname.bdfe_po_codegen = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function refreshbdfeponamehistorys()
    {

        $code2 = $this->input->post('codegens');
        $data2 = $this->pamain_model->getallpabdfeponamesStatHistorys($code2);

        $pctr=0;foreach($data2 as $cc):$pctr+=1;
        // if(!empty($cc->bdfe_po_codegen)):
        ?>
        <div id="divdevelopmentedit<?php echo $cc->id_bdfe_pohistory?>" class="showdata" style="display: inline-block;">
            <fieldset>
                <div class="col-xs-12" style="display: table-cell;">
                    <?php echo "Status : ".$cc->po_status."<br>As of (Year) : ".$cc->bdfe_po_year."<br>Remarks : ".$cc->bdfe_po_remarks."<br>"; ?>
                </div>
                <button type="button" class="btn btn-danger btn-xs removebdfeponamehistory" id="<?php echo $cc->id_bdfe_pohistory ?>" data-id="<?php echo $cc->id_bdfe_pohistory ?>">Remove
            </button>
            </fieldset>
        </div>
        <?php endforeach;

    }

    public function deletebdfelivelihoods($id = null)
        {

        $sql = "DELETE tblpalivelihood,tblpalivelihood_poname,tblpalivelihood_po_product,tblpalivelihoodpolocation,tblpalivelihood_appraisal,tblpalivelihood_enhancement,tblpalivelihood_enhancement_financial,tblpalivelihood_enhancement_oss,tblpalivelihoodmultiimage,tblpalivelihoodmultivideo
                FROM tblpalivelihood
                LEFT JOIN tblpalivelihood_poname ON tblpalivelihood_poname.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihood_po_product ON tblpalivelihood_po_product.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihoodpolocation ON tblpalivelihoodpolocation.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihood_appraisal ON tblpalivelihood_appraisal.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihood_enhancement ON tblpalivelihood_enhancement.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihood_enhancement_financial ON tblpalivelihood_enhancement_financial.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihood_enhancement_oss ON tblpalivelihood_enhancement_oss.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihoodmultiimage ON tblpalivelihoodmultiimage.bdfe_codegen = tblpalivelihood.bdfe_codegen
                LEFT JOIN tblpalivelihoodmultivideo ON tblpalivelihoodmultivideo.bdfe_codegen = tblpalivelihood.bdfe_codegen
                WHERE tblpalivelihood.bdfe_codegen = '$id'
                ";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function deleteponamebdfe($id = null)
    {
    $sql = "DELETE FROM tblpalivelihood_poname WHERE id_bdfe_po = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function refreshbdfeponames()
    {
        $code2 = $this->input->post('codegens');
        $data2 = $this->pamain_model->getAllbdfeponameinfo($code2);
        foreach($data2 as $cc):?>
            <div id="divdevelopmentedit<?php echo $cc->id_bdfe_po?>" class="showdata">
                <button type="button" class="btn btnbtn btn-danger btn-xs removebdfeponame" id="<?php echo $cc->id_bdfe_po ?>" data-id="<?php echo $cc->id_bdfe_po ?>" style="position: absolute;right: 25px">
                    Remove
                </button>
            <fieldset>
                <?php echo "<b>PO name : </b>".$cc->bdfe_po_name."<br>"; ?>
                <?php echo "<b>Contact No. : </b>".$cc->bdfe_contact."<br>"; ?>
            </fieldset>
            </div>
        <?php endforeach;
    }

    public function AddbdfeponamesEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('bdfeform-gencode',true),
            'bdfe_codegen'    => $this->input->post('bdfeform-gencode2',true),
            'bdfe_po_name'    => $this->input->post('edit-lh_po_assisted',true),
            'bdfe_contact'    => $this->input->post('edit-lh_mobile',true)
        ];

        $query = $this->pamain_model->insertbdfeponames($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO Name';
                }
        echo json_encode($output);
    }

    public function AddbdfeponamesHistorystatEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('editbdfeponame-gencode',true),
            'bdfe_codegen'    => $this->input->post('editbdfeponame-gencode2',true),
            'bdfe_po_codegen'    => $this->input->post('editbdfepocodesgen',true),
            'bdfe_po_status'    => $this->input->post('edit-lh_po_status',true),
            'bdfe_po_year'    => $this->input->post('edit-lh_po_asyear',true),
            'bdfe_po_remarks'    => $this->input->post('edit-lh_pos_remarks',true)
        ];

        $query = $this->pamain_model->insertbdfeponamesStatusHistory($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added PO Name';
                }
        echo json_encode($output);
    }

    public function insertbdfetatechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'ta_enhancement_code' => $this->input->post('enhancement-gencode3',true),
            'ta_type_assistance' => $this->input->post('ta_type_assistance',true),
            'ta_type_assistance_status' => 1
        ];
                $query = $this->pamain_model->createbdfeenhancementTA_techassist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded types of assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeTAtechassist()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementTA_techassist($codegens);
        foreach ($data as $row) { ?>
           <tr id="<?php echo $row->id_ta_type_assist; ?>" class="trow">
                <td><?php echo $row->ta_type_assistance; ?></td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdfetatechassist" data-id="<?php echo $row->id_ta_type_assist ?>" title="Remove">Remove</button></td>
                <td class="hide"><?php $row->ta_type_assistance; ?></td>
                <td class="hide"><?php $row->ta_type_assistance; ?></td>
            </tr>
            <?php
        }
    }

    public function deteletatechassistenhancement($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpalivelihood_enhancement_ta_type_assistance WHERE id_ta_type_assist = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function insertbdfefatechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'fa_enhancement_code' => $this->input->post('enhancement-gencode3',true),
            'fa_type_assistance' => $this->input->post('fa_type_assistance',true),
            'fa_amount' => str_replace(',','',$this->input->post('fa_amount',true)),
            'fa_type_assistance_status' => 1
        ];
                $query = $this->pamain_model->createbdfeenhancementFA_techassist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded types of assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeFAtechassist()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementFA_techassist($codegens);
        foreach ($data as $row) { ?>
           <tr id="<?php echo $row->id_fa_type_assist; ?>" class="trow">
                <td><?php echo $row->fa_type_assistance."<br> Amount : ".number_format($row->fa_amount,2); ?></td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdfetatechassist" data-id="<?php echo $row->id_fa_type_assist ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function insertbdfeenhancementtechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'enhancement_code' => $this->input->post('enhancement-gencode3',true),
            // 'technical_assitance' => $this->input->post('tech_assistance_chk',true),
            'ta_assisting_org' => $this->input->post('ta_ao_txt',true),
            'ta_duration' => $this->input->post('ta_duration',true),
            'ta_date_month' => $this->input->post('ta_date_month',true),
            'ta_date_year' => $this->input->post('ta_date_year',true),
            'ta_male' => $this->input->post('ta_male',true),
            'ta_female' => $this->input->post('ta_female',true),
        ];
                $query = $this->pamain_model->createbdfeenhancementTA($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded technical assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeenhanceTA()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementTA($codegens);
        foreach ($data as $row) {
            $code = $row->enhancement_code;
            $data2 = $this->pamain_model->getspecifictechnicalassistance($code);
            ?>
           <tr id="<?php echo $row->id_enhancement; ?>" class="trow">
                <td>
                    <?php echo "Assisting Organization : ".$row->ta_assisting_org."<br>Duration : ".$row->ta_duration."<br>Date provided : ".$row->month1." ".$row->year1."<br>Male : ".$row->ta_male."<br>Female : ".$row->ta_female; ?>
                </td>
                <td>
                    <?php
                    foreach ($data2 as $rowt) {
                        echo $rowt->ta_type_assistance."<br>";
                    }
                    ?>
                </td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdtatechassist" data-id="<?php echo $row->id_enhancement ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deteletaenhancement($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpalivelihood_enhancement WHERE id_enhancement = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function insertbdfeFAenhancementtechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'enhancement_code' => $this->input->post('enhancement-gencode3',true),
            // 'technical_assitance' => $this->input->post('tech_assistance_chk',true),
            'fa_assisting_org' => $this->input->post('fa_ao_txt',true),
            'fa_duration' => $this->input->post('fa_duration',true),
            'fa_date_month' => $this->input->post('fa_date_month',true),
            'fa_date_year' => $this->input->post('fa_date_year',true),
            'financial_proposal_file' => $this->input->post('efaproposal_span',true),
            'financial_wfp_file' => $this->input->post('efawfpfile_span',true),

        ];
                $query = $this->pamain_model->createbdfeenhancementFA($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded financial assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeenhanceFA()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementFA($codegens);
        foreach ($data as $row) {
            $code = $row->enhancement_code;
            $data2 = $this->pamain_model->getspecifictechnicalassistanceFA($code);
            ?>
           <tr id="<?php echo $row->id_enhancement_financial; ?>" class="trow">
                <td>
                    <?php echo "Assisting Organization : ".$row->fa_assisting_org."<br>Duration : ".$row->fa_duration."<br>Date provided : ".$row->month1." ".$row->year1; ?>
                </td>
                <td>
                    <?php
                    foreach ($data2 as $rowt) {
                        echo $rowt->fa_type_assistance."<br> Amount : ".number_format($rowt->fa_amount,2)."<br>";
                    }
                    ?>
                </td>
                <td class="">
                    <?php echo (!empty($row->financial_proposal_file)?'<label>Proposal file : </label><a href="'.base_url('bmb_assets2/upload/bdfe_financial_proposal/').$row->financial_proposal_file.'">'.$row->financial_proposal_file.'</a>':"").(!empty($row->financial_wfp_file)?'<br><label>WFP file : </label><a href="'.base_url('bmb_assets2/upload/bdfe_financial_wfp/').$row->financial_wfp_file.'">'.$row->financial_wfp_file.'</a>':"") ?>

                </td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdfatechassist" data-id="<?php echo $row->id_enhancement_financial ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function detelefaenhancement($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpalivelihood_enhancement_financial WHERE id_enhancement_financial = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function insertbdfeosstechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'oss_enhancement_code' => $this->input->post('enhancement-gencode3',true),
            'oss_type_assistance' => $this->input->post('oss_type_assistance',true),
            'oss_amount' => str_replace(',','',$this->input->post('oss_amount',true)),
            'oss_type_assistance_status' => 1
        ];
                $query = $this->pamain_model->createbdfeenhancementoss_techassist($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded types of assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeosstechassist()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementoss_techassist($codegens);
        foreach ($data as $row) { ?>
           <tr id="<?php echo $row->id_oss_type_assist; ?>" class="trow">
                <td><?php echo $row->oss_type_assistance."<br> Monetary value : ".$row->oss_amount; ?></td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdfetatechassist" data-id="<?php echo $row->id_oss_type_assist ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function insertbdfeOSSenhancementtechassistance()
    {
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('enhancement-gencode',true),
            'bdfe_codegen' => $this->input->post('enhancement-gencode2',true),
            'enhancement_code' => $this->input->post('enhancement-gencode3',true),
            // 'technical_assitance' => $this->input->post('tech_assistance_chk',true),
            'oss_assisting_org' => $this->input->post('oss_ao_txt',true),
            'oss_duration' => $this->input->post('oss_duration',true),
            'oss_date_month' => $this->input->post('oss_date_month',true),
            'oss_date_year' => $this->input->post('oss_date_year',true)
        ];
                $query = $this->pamain_model->createbdfeenhancementOSS($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully addeded financial assistance';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchbdfeenhanceoss()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallbdfeenahancementoss($codegens);
        foreach ($data as $row) {
            $code = $row->enhancement_code;
            $data2 = $this->pamain_model->getspecifictechnicalassistanceoss($code);
            ?>
           <tr id="<?php echo $row->id_enhancement_oss; ?>" class="trow">
                <td>
                    <?php echo "Assisting Organization : ".$row->oss_assisting_org."<br>Duration : ".$row->oss_duration."<br>Date provided : ".$row->month1." ".$row->year1; ?>
                </td>
                <td>
                    <?php
                    foreach ($data2 as $rowt) {
                        echo $rowt->oss_type_assistance."<br> Monetary value : ".$rowt->oss_amount;
                    }
                    ?>
                </td>
                <td><button type="button" class="btn btnbtn btn-danger btn-xs removebdosstechassist" data-id="<?php echo $row->id_enhancement_oss ?>" title="Remove">Remove</button></td>
            </tr>
            <?php
        }
    }

    public function deteleossenhancement($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblpalivelihood_enhancement_oss WHERE id_enhancement_oss = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }


    public function fetchurbaneco(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllUrbanEco($codegens);
        foreach($data as $row){
            if ($row->citybioindex == 1) {
                $chkyesno = "Yes";
            }else if($row->citybioindex == 2){
                $chkyesno = "No";
            }else{
                $chkyesno = "No";
            }

            if ($row->cityurbanarea == 1) {
                $chkyesno1 = "Yes";
            }else if($row->cityurbanarea == 2){
                $chkyesno1 = "No";
            }else{
                $chkyesno1 = "No";
            }
            ?>
             <tr id="<?php echo $row->id_urbaneco; ?>" class="trow">
                <td class="hidden"><?php echo $row->cityurbanarea; ?></td>
                <td class="hidden"><?php echo $row->cityurbanarea_specify; ?></td>
                <td class="hidden"><?php echo $row->citybioindex; ?></td>
                <td class="hidden"><?php echo $row->lgu_reso_file; ?></td>
                <td class="hidden"><?php echo base_url('bmb_assets2/upload/urbaneco_file/').$row->lgu_reso_file ?></td>
                <td class="hidden"><?php echo $row->lgu_reso_file ?></td>
                <td><?php echo "Cities/Urban area within protected areas <br>Specify Cities/Urban areas : ".$row->cityurbanarea_specify ?></td>
                <td ><?php echo "City Biodiversity Index (CBI)/Urban Biodiversity Index adopted<br>File Attached : ".'<a href="'.base_url().'bmb_assets2/upload/urbaneco_file/'.$row->lgu_reso_file.'">'.$row->lgu_reso_file.'</a>' ?>
                <td class=""><b>Shapefile : </b><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/urbaneco_shpfile/').$row->urbaneco_shpfile ?>"><?php echo $row->urbaneco_shpfile ?></a></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/urbaneco_shpfile/').$row->urbaneco_shpfile ?>"><?php echo $row->urbaneco_shpfile ?></a></td>
                <td class="hide"><?php echo $row->urbaneco_shpfile; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_urbaneco;?>" class="btn btnbtn btn-info btn-xs" onclick="editUrbanEco(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeUrbanEco" data-id="<?php echo $row->id_urbaneco ?>" title="Remove">Remove</button>
                    <input class="hidden" id="cupachk<?php echo $row->id_urbaneco;?>" value="<?php echo $row->cityurbanarea ?>" />
                    <input class="hidden" id="cbichk<?php echo $row->id_urbaneco;?>" value="<?php echo $row->citybioindex ?>" />
                </td>


            </tr>
            <?php } ?>
            <?php
    }

    public function update_urbaneco(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        if(!empty($_FILES['edit-lguresolutions']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/urbaneco_file';
            $config['file_name'] = $_FILES['edit-lguresolutions']['name'];
            $config['allowed_types'] = 'pdf|csv';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-lguresolutions')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("urbaneco-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("urbaneco-id");
            $details = array('cityurbanarea' => $this->input->post('edit-chk_cupa',true)==null ? 0 : 1,
                             'cityurbanarea_specify' => $this->input->post("edit-cupa_details"),
                             'citybioindex' =>  $this->input->post('edit-chk_cbi',true)==null ? 0 : 1,
                             'urbaneco_shpfile'    => (empty($this->input->post('edit-shp_urbaneco_txt'))?$this->input->post('edit-shp_urbaneco_old'):$this->input->post('edit-shp_urbaneco_txt')),
                             'lgu_reso_file' => (!empty($filenames)?$filenames:$this->input->post('edit-oldlgureso')));
            $this->pamain_model->updatequeryUrbanEco($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function deleteUrbanEco($id = null)
    {
            $sql1 = $this->db->where('id_urbaneco',$id)
                                            ->get('tblurbaneco')
                                            ->row();
        if (!empty($sql1->lgu_reso_file)) {
            unlink('bmb_assets2/upload/urbaneco_file/'.$sql1->lgu_reso_file);
        }

        $output = array();
         $sql = "DELETE FROM tblurbaneco WHERE id_urbaneco = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function file_ecomngmtplan()
    {

        $output2 = array('error' => false);
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        #-------------------------------#

        if(!empty($_FILES['ecoplanfile']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_plan';
            $config['file_name'] = $_FILES['ecoplanfile']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('ecoplanfile')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_mgmt_ecotourism') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['maindata'] = (object)$postDataImage = [
            'generatedcode ' =>  $this->input->post('gencode',true),
            'upload_eco_plan'       => (!empty($filenames)?$filenames:$this->input->post('old_ecoplanfile')),
            'ecotourism_plan_dateM ' =>  $this->input->post('ecoplanM',true),
            'ecotourism_plan_dateD ' =>  $this->input->post('ecoplanD',true),
            'ecotourism_plan_dateY ' =>  $this->input->post('ecoplanY',true),
            'ecotourism_status ' =>  $this->input->post('ecoplanStatus',true),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No file upload';
            } else {
               if(empty($postDataImage['id_mgmt_ecotourism'])){
                $query = $this->pamain_model->insertecotourmngmtplanfile($postDataImage);
                if($query){
                $output['status'] = 'Successfull';
                $output['message'] = 'Successfully upload file';
                }else{
                $output['status'] = 'Failed';
                $output['message'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchecotourismmngmtplanfile(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getecotourismmngmtplansfile($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_mgmt_ecotourism; ?>" class="trow">
                <td><label>Management Plan : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmt_plan/').$row->upload_eco_plan ?>"><?php echo $row->upload_eco_plan ?></a><br>
                    <label>PAMB Resolution : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmntplan_pambreso/').$row->upload_eco_pambreso ?>"><?php echo $row->upload_eco_pambreso ?></a><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmt_shpfile/').$row->upload_eco_shpfile ?>"><?php echo $row->upload_eco_shpfile ?></a>
                </td>
                <td><?php echo "Date approved : ".$row->month." ".$row->year."<br>Status : ".$row->status_desc ?>
                    <button type="button" style="float:right" class="btn btnbtn btn-danger btn-xs removeEcotourmngmtplanfile" data-id="<?php echo $row->id_mgmt_ecotourism ?>" title="Remove">Remove</button>
                    <button type="button" style="float:right" value="<?php echo $row->id_mgmt_ecotourism;?>" class="btn btnbtn btn-info btn-xs" onclick="editecotourmgmtplan(this);">
                    Edit </button>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmt_plan/').$row->upload_eco_plan ?>"><?php echo $row->upload_eco_plan ?></a></td>
                <td class="hide"><?php echo $row->upload_eco_plan; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmntplan_pambreso/').$row->upload_eco_pambreso ?>"><?php echo $row->upload_eco_pambreso ?></a></td>
                <td class="hide"><?php echo $row->upload_eco_pambreso; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ecotourism_mgmt_shpfile/').$row->upload_eco_shpfile ?>"><?php echo $row->upload_eco_shpfile ?></a></td>
                <td class="hide"><?php echo $row->upload_eco_shpfile; ?></td>
            </tr>
            <input type="hidden" id="ecotourmgmtplanid<?php echo $row->id_mgmt_ecotourism ?>" value="<?php echo $row->id_mgmt_ecotourism ?>" />
            <input type="hidden" id="ecotourmgmtplanmonth<?php echo $row->id_mgmt_ecotourism ?>" value="<?php echo $row->ecotourism_plan_dateM ?>" />
            <input type="hidden" id="ecotourmgmtplanday<?php echo $row->id_mgmt_ecotourism ?>" value="<?php echo $row->ecotourism_plan_dateD ?>" />
            <input type="hidden" id="ecotourmgmtplanyear<?php echo $row->id_mgmt_ecotourism ?>" value="<?php echo $row->ecotourism_plan_dateY ?>" />
            <input type="hidden" id="ecotourmgmtplanstatus<?php echo $row->id_mgmt_ecotourism ?>" value="<?php echo $row->ecotourism_status ?>" />

            <?php
        }
    }

    public function update_ecotourismmgmtplant(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        if(!empty($_FILES['edit-ecoplanfile']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/ecotourism_mgmt_plan';
            $config['file_name'] = $_FILES['edit-ecoplanfile']['name'];
            $config['allowed_types'] = 'pdf|csv';
            // $config['max_size'] = '10000';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('edit-ecoplanfile')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }

        $gencode = $this->input->post("ecotourmgmtplan-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("ecotourmgmtplan-id");
            $details = array('ecotourism_plan_dateM' => $this->input->post("edit-ecoplanM"),
                             'ecotourism_plan_dateD' => $this->input->post("edit-ecoplanD"),
                             'ecotourism_plan_dateY' => $this->input->post("edit-ecoplanY"),
                             'ecotourism_status' => $this->input->post("edit-ecoplanStatus"),
                             'upload_eco_plan' =>  (empty($this->input->post("edit-ecoplanfilesload"))?$this->input->post("edit-old_ecoplanfile"):$this->input->post("edit-ecoplanfilesload")),
                             'upload_eco_pambreso' =>  (empty($this->input->post("edit-new_ecoplanfilesload"))?$this->input->post("edit-old_ecomgmtplanpambreso"):$this->input->post("edit-new_ecoplanfilesload")),
                             'upload_eco_shpfile' =>  (empty($this->input->post("edit-shp_mgmteco_txt"))?$this->input->post("edit-shp_mgmteco_old"):$this->input->post("edit-shp_mgmteco_txt")));
            $this->pamain_model->updateEcotourismMgmtPlan($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function deleteEcotourmngmtplanfile($id = null)
        {
            $sql1 = $this->db->where('id_mgmt_ecotourism',$id)
                                            ->get('tblpamanagementecotourim')
                                            ->row();
            // unlink('bmb_assets2/upload/ecotourism_mgmt_plan/'.$sql1->upload_eco_plan);
            $sql = "DELETE FROM tblpamanagementecotourim WHERE id_mgmt_ecotourism = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

public function wetlandlandfiless()
    {
        if(isset($_FILES["wetlandplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/wetland_management_plan';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('wetlandplanfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }
// public function file_wetlandmngmtplan()
//     {

//         $output2 = array('error' => false);
//         date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
//         $now = date('Y-m-d');
//         #-------------------------------#

//         if(!empty($_FILES['wetlandplanfile']['name'])){
//             $config ['upload_path'] = 'bmb_assets2/upload/wetland_management_plan';
//             $config['file_name'] = $_FILES['wetlandplanfile']['name'];
//             $config['allowed_types'] = 'pdf|csv';

//             $this->load->library('upload', $config);
//             $this->upload->initialize($config);
//              if($this->upload->do_upload('wetlandplanfile')){
//                 $uploadData = $this->upload->data();
//                 $filenames = $uploadData['file_name'];
//             }
//         }
//         if ($this->input->post('id_mgmt_wetland') == null)
//         {
//         $this->form_validation->set_rules('gencode','Code','required');
//         $data['maindata'] = (object)$postDataImage = [
//             'generatedcode ' =>  $this->input->post('gencode',true),
//             'upload_wetland_plan'       => (!empty($filenames)?$filenames:$this->input->post('old_wetlandplanfile')),
//             'wetland_plan_dateM ' =>  $this->input->post('wetlandplanM',true),
//             'wetland_plan_dateD ' =>  $this->input->post('wetlandplanD',true),
//             'wetland_plan_dateY ' =>  $this->input->post('wetlandplanY',true),
//             'wetland_plan_status ' =>  $this->input->post('wetlandplanStatus',true),
//         ];
//         }

//         if ($this->form_validation->run() == false) {
//             $output['error'] = true;
//             $output['status'] = validation_errors();
//         }else{
//             if (empty($filenames)) {
//                 $output['error'] = true;
//                 $output['status'] = 'No file upload';
//             } else {
//                if(empty($postDataImage['id_mgmt_wetland'])){
//                 $query = $this->pamain_model->insertwetlandmngmtplanfile($postDataImage);
//                 if($query){
//                 $output['status'] = 'Successfull';
//                 $output['message'] = 'Successfully upload file';
//                 }else{
//                 $output['status'] = 'Failed';
//                 $output['message'] = 'No image upload';
//                 }
//             }
//             }


//         }
//         echo json_encode($output);
//     }

    public function fetchwetlandmgmtplan(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getwetlandmngmtplansfile($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_mgmt_wetland; ?>" class="trow">
                <td>
                    <label>Management Plan : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_plan/').$row->upload_wetland_plan ?>"><?php echo $row->upload_wetland_plan ?></a><br>
                    <label>PAMB Resolution : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_pambreso/').$row->upload_wetland_pambreso ?>"><?php echo $row->upload_wetland_pambreso ?></a><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_shpfile/').$row->upload_wetland_shpfile ?>"><?php echo $row->upload_wetland_shpfile ?></a>
                </td>
                <td><?php echo "Date approved : ".$row->month." ".$row->year."<br>Status : ".$row->status_desc ?>
                    <button type="button" style="float:right" class="btn btnbtn btn-danger btn-xs removewetlandmngmtplanfile" data-id="<?php echo $row->id_mgmt_wetland ?>" title="Remove">Remove</button>
                    <button type="button" style="float:right" value="<?php echo $row->id_mgmt_wetland;?>" class="btn btnbtn btn-info btn-xs" onclick="editwetlandmgmtplan(this);">
                    Edit </button>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_plan/').$row->upload_wetland_plan ?>"><?php echo $row->upload_wetland_plan ?></a></td>
                <td class="hide"><?php echo $row->upload_wetland_plan; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_pambreso/').$row->upload_wetland_pambreso ?>"><?php echo $row->upload_wetland_pambreso ?></a></td>
                <td class="hide"><?php echo $row->upload_wetland_pambreso; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/wetland_management_shpfile/').$row->upload_wetland_shpfile ?>"><?php echo $row->upload_wetland_shpfile ?></a></td>
                <td class="hide"><?php echo $row->upload_wetland_shpfile; ?></td>
            </tr>
            <input type="hidden" id="wetlandmgmtplanid<?php echo $row->id_mgmt_wetland ?>" value="<?php echo $row->id_mgmt_wetland ?>" />
            <input type="hidden" id="wetlandmgmtplanmonth<?php echo $row->id_mgmt_wetland ?>" value="<?php echo $row->wetland_plan_dateM ?>" />
            <input type="hidden" id="wetlandmgmtplanday<?php echo $row->id_mgmt_wetland ?>" value="<?php echo $row->wetland_plan_dateD ?>" />
            <input type="hidden" id="wetlandmgmtplanyear<?php echo $row->id_mgmt_wetland ?>" value="<?php echo $row->wetland_plan_dateY ?>" />
            <input type="hidden" id="wetlandmgmtplanstatus<?php echo $row->id_mgmt_wetland ?>" value="<?php echo $row->wetland_plan_status ?>" />

            <?php
        }
    }

    public function update_wetlandmgmtplant(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("wetlandmgmtplan-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("wetlandmgmtplan-id");
            $details = array('wetland_plan_dateM' => $this->input->post("edit-wetlandplanM"),
                             'wetland_plan_dateD' => $this->input->post("edit-wetlandplanD"),
                             'wetland_plan_dateY' => $this->input->post("edit-wetlandplanY"),
                             'wetland_plan_status' => $this->input->post("edit-wetlandplanStatus"),
                             'upload_wetland_plan' =>(empty($this->input->post('edit-wetlandplanfilesload'))?$this->input->post('edit-old_wetlandplanfile'):$this->input->post('edit-wetlandplanfilesload')),
                             'upload_wetland_shpfile' =>(empty($this->input->post('edit-shp_mgmtwetland_txt'))?$this->input->post('edit-shp_mgmtwetland_old'):$this->input->post('edit-shp_mgmtwetland_txt')),
                             'upload_wetland_pambreso' =>(empty($this->input->post('edit-new_wetmgmtplanpambreso'))?$this->input->post('edit-old_wetmgmtplanpambreso'):$this->input->post('edit-new_wetmgmtplanpambreso')));
            $this->pamain_model->updateWetlandMgmtPlan($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

     public function update_bdfeinformation(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("bdfeform-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("bdfeform-id");
            $details = array(
                    'enterprise_name' => $this->input->post('edit-lhName',true),
                    // 'lh_po_assisted' => $this->input->post('edit-lh_po_assisted',true),
                    // 'lh_contact' => $this->input->post('edit-lh_mobile',true),
                    'dor_month' => $this->input->post('edit-dateregismonth',true),
                    'dor_day' => $this->input->post('edit-dateregisday',true),
                    'dor_year' => $this->input->post('edit-dateregisyear',true),
                    'type_registration' => $this->input->post('edit-typeregis',true),
                    'other_registration' => $this->input->post('edit-typeregis_others',true),
                    'lh_category' => $this->input->post('edit-liveproducts',true),
                    'lh_sub_category' => $this->input->post('edit-lh_type',true),
                    'lh_category_others' => $this->input->post('edit-lh_cat_others',true),
                    'lh_desc' => $this->input->post("edit-lh_type_desc"),
                    'lh_region' => $this->input->post("edit-lh_reg_office"),
                    'lh_province' => $this->input->post("edit-lh_prov_office"),
                    'lh_municipal' => $this->input->post("edit-lh_mun_office"),
                    'lh_barangay' => $this->input->post("edit-lh_barangay_office"),
                    'lh_month_inclusion' => $this->input->post('edit-lh_month_inclusion',true),
                    'lh_day_inclusion' => $this->input->post('edit-lh_day_inclusion',true),
                    'lh_year_inclusion' => $this->input->post('edit-lh_year_inclusion',true),
                    'lh_long_dd' => $this->input->post('edit-lh_dmstodd_indi',true),
                    'lh_long_dms_direction' => $this->input->post('edit-lh_long_direction_indi',true),
                    'lh_long_dms_degree' => $this->input->post('edit-lh_long_deg_indi',true),
                    'lh_long_dms_minute' => $this->input->post('edit-lh_long_min_indi',true),
                    'lh_long_dms_second' => $this->input->post('edit-lh_long_sec_indi',true),
                    'lh_lat_dd' => $this->input->post('edit-lh_dmstodd2_indi',true),
                    'lh_lat_dms_direction' => $this->input->post('edit-lh_lat_direction_indi',true),
                    'lh_lat_dms_degree' => $this->input->post('edit-lh_lat_deg_indi',true),
                    'lh_lat_dms_minute' => $this->input->post('edit-lh_lat_min_indi',true),
                    'lh_lat_dms_second' => $this->input->post('edit-lh_lat_sec_indi',true),
                    'date_rapidassess_month' => $this->input->post('edit-lh_month_rapassess',true),
                    'date_rapidassess_day' => $this->input->post('edit-lh_day_rapassess',true),
                    'date_rapidassess_year' => $this->input->post('edit-lh_year_rapassess',true),
                    'bdfe_score' => str_replace(',','',$this->input->post('edit-lh_score',true)),
                    'bdfe_map_img_file' => (empty($this->input->post("edit-files_bdfe_imagetext"))?$this->input->post("edit-files_bdfe_imagetext_old"):$this->input->post("edit-files_bdfe_imagetext")),
                    'bdfe_enterprise_shpfile' =>(empty($this->input->post('edit-zip_shpfile_bdferesource_text'))?$this->input->post('edit-zip_shpfile_bdferesource_old'):$this->input->post('edit-zip_shpfile_bdferesource_text')));
            $this->pamain_model->updatebdfeinformation2($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }


      public function deleteWetlandmngmtplanfile($id = null)
        {
            $sql1 = $this->db->where('id_mgmt_wetland',$id)
                                            ->get('tblpamanagementwetland')
                                            ->row();
            // unlink('bmb_assets2/upload/wetland_management_plan/'.$sql1->upload_wetland_plan);
            $sql = "DELETE FROM tblpamanagementwetland WHERE id_mgmt_wetland = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function file_cavemngmtplan()
    {

        $output2 = array('error' => false);
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        #-------------------------------#

        if(!empty($_FILES['caveplanfile']['name'])){
            $config ['upload_path'] = 'bmb_assets2/upload/cave_management_plan';
            $config['file_name'] = $_FILES['caveplanfile']['name'];
            $config['allowed_types'] = 'pdf|csv';

            $this->load->library('upload', $config);
            $this->upload->initialize($config);
             if($this->upload->do_upload('caveplanfile')){
                $uploadData = $this->upload->data();
                $filenames = $uploadData['file_name'];
            }
        }
        if ($this->input->post('id_mgmt_cave') == null)
        {
        $this->form_validation->set_rules('gencode','Code','required');
        $data['maindata'] = (object)$postDataImage = [
            'generatedcode ' =>  $this->input->post('gencode',true),
            'upload_cave_plan'       => (!empty($filenames)?$filenames:$this->input->post('old_caveplanfile')),
            'cave_plan_dateM ' =>  $this->input->post('caveplanM',true),
            'cave_plan_dateD ' =>  $this->input->post('caveplanD',true),
            'cave_plan_dateY ' =>  $this->input->post('caveplanY',true),
            'cave_plan_status ' =>  $this->input->post('caveplanStatus',true),
        ];
        }

        if ($this->form_validation->run() == false) {
            $output['error'] = true;
            $output['status'] = validation_errors();
        }else{
            if (empty($filenames)) {
                $output['error'] = true;
                $output['status'] = 'No file upload';
            } else {
               if(empty($postDataImage['id_mgmt_cave'])){
                $query = $this->pamain_model->insertcavemngmtplanfile($postDataImage);
                if($query){
                $output['status'] = 'Successfull';
                $output['message'] = 'Successfully upload file';
                }else{
                $output['status'] = 'Failed';
                $output['message'] = 'No image upload';
                }
            }
            }


        }
        echo json_encode($output);
    }

    public function fetchcavesmgmtplan(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getcavesmngmtplansfile($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_mgmt_cave; ?>" class="trow">
                <td>
                    <label>Management Plan : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_plan/').$row->upload_cave_plan ?>"><?php echo $row->upload_cave_plan ?></a><br>
                    <label>PAMB Resolution : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_pambreso/').$row->upload_cave_pambreso ?>"><?php echo $row->upload_cave_pambreso ?></a><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_shpfile/').$row->upload_cave_shpfile ?>"><?php echo $row->upload_cave_shpfile ?></a>
                </td>
                <td><?php echo "Date approved : ".$row->month." ".$row->year."<br>Status : ".$row->status_desc ?>
                    <button type="button" style="float:right" class="btn btnbtn btn-danger btn-xs removecavemngmtplanfile" data-id="<?php echo $row->id_mgmt_cave ?>" title="Remove">Remove</button>
                    <button type="button" style="float:right" value="<?php echo $row->id_mgmt_cave;?>" class="btn btnbtn btn-info btn-xs" onclick="editcavesmgmtplan(this);">
                    Edit </button>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_plan/').$row->upload_cave_plan ?>"><?php echo $row->upload_cave_plan ?></a></td>
                <td class="hide"><?php echo $row->upload_cave_plan; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_pambreso/').$row->upload_cave_pambreso ?>"><?php echo $row->upload_cave_pambreso ?></a></td>
                <td class="hide"><?php echo $row->upload_cave_pambreso; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/cave_management_shpfile/').$row->upload_cave_shpfile ?>"><?php echo $row->upload_cave_shpfile ?></a></td>
                <td class="hide"><?php echo $row->upload_cave_shpfile; ?></td>
            </tr>
            <input type="hidden" id="cavemgmtplanid<?php echo $row->id_mgmt_cave ?>" value="<?php echo $row->id_mgmt_cave ?>" />
            <input type="hidden" id="cavemgmtplanmonth<?php echo $row->id_mgmt_cave ?>" value="<?php echo $row->cave_plan_dateM ?>" />
            <input type="hidden" id="cavemgmtplanday<?php echo $row->id_mgmt_cave ?>" value="<?php echo $row->cave_plan_dateD ?>" />
            <input type="hidden" id="cavemgmtplanyear<?php echo $row->id_mgmt_cave ?>" value="<?php echo $row->cave_plan_dateY ?>" />
            <input type="hidden" id="cavemgmtplanstatus<?php echo $row->id_mgmt_cave ?>" value="<?php echo $row->cave_plan_status ?>" />

            <?php
        }
    }

    public function update_cavemgmtplant(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $gencode = $this->input->post("cavemgmtplan-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("cavemgmtplan-id");
            $details = array('cave_plan_dateM' => $this->input->post("edit-caveplanM"),
                             'cave_plan_dateD' => $this->input->post("edit-caveplanD"),
                             'cave_plan_dateY' => $this->input->post("edit-caveplanY"),
                             'cave_plan_status' => $this->input->post("edit-caveplanStatus"),
                             'upload_cave_plan' => (empty($this->input->post("edit-caveplanfilesload"))?$this->input->post("edit-old_caveplanfile"):$this->input->post("edit-caveplanfilesload")),
                             'upload_cave_shpfile' => (empty($this->input->post("edit-shp_mgmtcave_txt"))?$this->input->post("edit-shp_mgmtcave_old"):$this->input->post("edit-shp_mgmtcave_txt")),
                             'upload_cave_pambreso' => (empty($this->input->post("edit-new_cavemgmtplanpambreso"))?$this->input->post("edit-old_cavemgmtplanpambreso"):$this->input->post("edit-new_cavemgmtplanpambreso")));
            $this->pamain_model->updateCavesMgmtPlan($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_othermgmtplant(){
        $gencode = $this->input->post("othermgmtplan-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("othermgmtplan-id");
            $details = array('specify_otherplan' => $this->input->post("edit-sotherplan"),
                             // 'upload_other_plan' => (!empty($this->input->post('edit-old_otherplanfile'))?$this->input->post('edit-old_otherplanfile'):$this->input->post('edit-current_otherplanfile')),
                             'other_plan_dateM' => $this->input->post("edit-otherplanM"),
                             'other_plan_dateD' => $this->input->post("edit-otherplanD"),
                             'other_plan_dateY' => $this->input->post("edit-otherplanY"),
                             'other_plan_status' => $this->input->post("edit-otherplanStatus"),
                            'upload_other_plan_shpfile' => (empty($this->input->post("edit-shp_mgmtotherplan_txt"))?$this->input->post("edit-shp_mgmtotherplan_old"):$this->input->post("edit-shp_mgmtotherplan_txt")),
                            'upload_other_plan' => (empty($this->input->post("edit-current_otherplanfile"))?$this->input->post("edit-old_otherplanfile"):$this->input->post("edit-current_otherplanfile")),
                            'upload_other_plan_pambreso' => (empty($this->input->post("edit-new_otherplanpambreso"))?$this->input->post("edit-old_otherplanpambreso"):$this->input->post("edit-new_otherplanpambreso")));

            $this->pamain_model->updateOthersMgmtPlan($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function deleteCavesmngmtplanfile($id = null)
    {
        $sql1 = $this->db->where('id_mgmt_cave',$id)
                                        ->get('tblpamanagementcaves')
                                        ->row();
        // unlink('bmb_assets2/upload/cave_management_plan/'.$sql1->upload_cave_plan);
        $sql = "DELETE FROM tblpamanagementcaves WHERE id_mgmt_cave = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteOthermngmtplanfile($id = null)
    {
        $sql1 = $this->db->where('id_mgmt_other',$id)
                                        ->get('tblpamanagementothers')
                                        ->row();

        // unlink('bmb_assets2/upload/other_management_plan_file/'.$sql1->upload_other_plan);

        $sql = "DELETE FROM tblpamanagementothers WHERE id_mgmt_other = '$id'";
        if ($this->db->query($sql)) {
            $output['status'] = 'success';
            $output['message'] = 'Successfully removed';
        } else {
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchothermgmtplan(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getothermngmtplansfile($codegens);
        foreach($data as $row){
            ?>
            <tr id="<?php echo $row->id_mgmt_other; ?>" class="trow">
                <td>
                    <label>Management Plan : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_plan_file/').$row->upload_other_plan ?>"><?php echo $row->upload_other_plan ?></a><br>
                    <label>PAMB Resolution : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_pamb_reso/').$row->upload_other_plan_pambreso ?>"><?php echo $row->upload_other_plan_pambreso ?></a><br>
                    <label>Shapefile : </label><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_plan_shpfile/').$row->upload_other_plan_shpfile ?>"><?php echo $row->upload_other_plan_shpfile ?></a>
                </td>
                <td><?php echo "Specify other plan : ".$row->specify_otherplan.
                    "<br>Date approved : ".$row->month." ".$row->year."<br>Status : ".$row->status_desc ?>
                    <button type="button" style="float:right" class="btn btnbtn btn-danger btn-xs removeothermngmtplanfile" data-id="<?php echo $row->id_mgmt_other ?>" title="Remove">Remove</button>
                    <button type="button" style="float:right" value="<?php echo $row->id_mgmt_other;?>" class="btn btnbtn btn-info btn-xs" onclick="editothermgmtplan(this);">
                    Edit </button>
                </td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_plan_file/').$row->upload_other_plan ?>"><?php echo $row->upload_other_plan ?></a></td>
                <td class="hide"><?php echo $row->upload_other_plan; ?></td>
                <td class="hide"><?php echo $row->specify_otherplan; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_pamb_reso/').$row->upload_other_plan_pambreso ?>"><?php echo $row->upload_other_plan_pambreso ?></a></td>
                <td class="hide"><?php echo $row->upload_other_plan_pambreso; ?></td>
                <td class="hide"><i class="cap-icon ci-paperclip"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/other_management_plan_shpfile/').$row->upload_other_plan_shpfile ?>"><?php echo $row->upload_other_plan_shpfile ?></a></td>
                <td class="hide"><?php echo $row->upload_other_plan_shpfile; ?></td>
            </tr>
            <input type="hidden" id="othermgmtplanid<?php echo $row->id_mgmt_other ?>" value="<?php echo $row->id_mgmt_other ?>" />
            <input type="hidden" id="othermgmtplanmonth<?php echo $row->id_mgmt_other ?>" value="<?php echo $row->other_plan_dateM ?>" />
            <input type="hidden" id="othermgmtplanday<?php echo $row->id_mgmt_other ?>" value="<?php echo $row->other_plan_dateD ?>" />
            <input type="hidden" id="othermgmtplanyear<?php echo $row->id_mgmt_other ?>" value="<?php echo $row->other_plan_dateY ?>" />
            <input type="hidden" id="othermgmtplanstatus<?php echo $row->id_mgmt_other ?>" value="<?php echo $row->other_plan_status ?>" />

            <?php
        }
    }

    public function sapamonitoringreportinsert()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('gencode',true),
            'sapa_generatedcode'    => $this->input->post('sapaCode',true),
            'monitoring_details'    => $this->input->post('sapamonitoringtext',true),
            'upload_monitoringreports'  => $this->input->post('old_sapamonitoringupload'),
            'date_upload'       =>  date("Y-m-d H:i:s")
        ];
        $query = $this->pamain_model->insertsapamonitoringreport($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added monitoring report';
                }
        echo json_encode($output);
    }

    public function sapamonitoringreportEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('sapa-gencode',true),
            'sapa_generatedcode'    => $this->input->post('sapa-gencode2',true),
            'monitoring_details'    => $this->input->post('edit-sapamonitoringtext',true),
            'upload_monitoringreports'  => $this->input->post('edit-old_sapamonitoringupload'),
            'date_upload'       =>  date("Y-m-d H:i:s")
        ];
        $query = $this->pamain_model->insertsapamonitoringreport($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added monitoring report';
                }
        echo json_encode($output);
    }

    public function moamonitoringreportaddEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('moa-gencode',true),
            'moa_generatedcode'    => $this->input->post('moa-gencode2',true),
            'monitoring_details'    => $this->input->post('edit-moamonitoringtext',true),
            'upload_monitoringreports'      => $this->input->post('edit-moamonitoringupload_span'),
            'date_upload'       =>  date("Y-m-d H:i:s")
        ];

        $query = $this->pamain_model->insertmoamonitoringreportEdit($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added monitoring report';
                }
        echo json_encode($output);
    }

    public function sapamonitoringrepotsfetch()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallsapamaterialreport($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_sapamonitoring; ?>" class="trow">
                    <td ><?php echo $row->monitoring_details ?></td>
                    <td ><?php echo '<a href="'.base_url().'bmb_assets2/upload/tenure_sapa_monitoringreport/'.$row->upload_monitoringreports.'">'.$row->upload_monitoringreports.'</a>' ?>
                    </td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removemonitoringreport" data-id="<?php echo $row->id_sapamonitoring ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function sapamonitoringreportinsertEdit()
    {
        if(isset($_FILES["edit-sapamonitoringupload"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_sapa_monitoringreport';
            $config['allowed_types'] = 'doc|docx|xls|xlsx|ppt|pptx|csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sapamonitoringupload'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);

                $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('sapa-gencode',true),
                    'sapa_generatedcode'    => $this->input->post('sapa-gencode2',true),
                    'monitoring_details'    => $this->input->post('edit-sapamonitoringtext',true),
                    'upload_monitoringreports'      => (!empty($filenames)?$filenames:$this->input->post('edit-old_sapamonitoringupload')),
                    'date_upload'       =>  date("Y-m-d H:i:s")
                ];

                $this->pamain_model->insertsapamonitoringreport($postDataImage);
            }
        }
    }

    public function sapamonitoringrepotsfetchEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallsapamaterialreport($codegens);
            $rctr=0;foreach($data as $ca):$rctr+=1;?>
                    <div id="bca<?php echo $ca->id_sapamonitoring ?>" class="showdata">
                        <button type="button" class="btn btn-danger removemonitoringreportEdit" id="<?php echo $ca->id_sapamonitoring  ?>" data-id="<?php echo $ca->id_sapamonitoring  ?>" style="position: absolute;right: 25px">
                        Remove
                        </button>
                        <fieldset>
                            <div class="col-xs-12">
                                <div class="col-xs-6 col-lg-6">Monitoring Report details : </div>
                                <div class="col-xs-6 col-lg-6"><?php echo $ca->monitoring_details; ?></div>
                            </div>
                            <div class="col-xs-12">
                                <div class="col-xs-6 col-lg-6">File Upload </div>
                                <div class="col-xs-6 col-lg-6"><?php echo '<a href="'.base_url().'bmb_assets2/upload/tenure_sapa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?></div>
                            </div>
                        </fieldset>
                    </div>
                    <?php endforeach;

    }

     public function deletemonitoringreports($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamaintenuresapamonitoring WHERE id_sapamonitoring = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function tenuremoapambapprove()
    {
        if(isset($_FILES["moapambapprove"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pambapprove';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('moapambapprove'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuremoapamreso()
    {
        if(isset($_FILES["moapambreso"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('moapambreso'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function tenuremoamonitoringreps()
    {
        if(isset($_FILES["moamonitoringupload"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_monitoringreport';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('moamonitoringupload'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


    public function moamonitoringreportinsert()
    {

    $data['mainproj'] = (object)$postDataImage = [
        'generatedcode'    => $this->input->post('gencode',true),
        'moa_generatedcode'    => $this->input->post('moaCode',true),
        'monitoring_details'    => $this->input->post('moamonitoringtext',true),
        'upload_monitoringreports'      => $this->input->post('old_moamonitoringupload'),
        'date_upload'       =>  date("Y-m-d H:i:s")
    ];

        $query = $this->pamain_model->insertmoamonitoringreport($postDataImage);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added monitoring report';
        }
        echo json_encode($output);
    }

    public function moamonitoringrepotsfetch()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallmoamaterialreport($codegens);

        foreach($data as $row){ ?>
                <tr id="<?php echo $row->id_moa_monitoring; ?>" class="trow">
                    <td ><?php echo $row->monitoring_details ?></td>
                    <td ><?php echo '<a href="'.base_url().'bmb_assets2/upload/tenure_moa_monitoringreport/'.$row->upload_monitoringreports.'">'.$row->upload_monitoringreports.'</a>' ?>
                    </td>
                    <td>
                        <button type="button" class="btn btnbtn btn-danger btn-xs removemoamonitoringreportmain" data-id="<?php echo $row->id_moa_monitoring ?>" title="Remove">Remove</button>
                    </td>

                </tr>
            <?php
        }
    }

    public function deletemonitoringreportsMoas($id = null)
    {

        $output = array();
         $sql = "DELETE FROM tblpamaintenuremoamonitoring WHERE id_moa_monitoring = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function moamgmtplanfilescannedEdit()
    {
        if(isset($_FILES["edit-moamgmtplanfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_proj';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-moamgmtplanfile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moapambapprovefilescannedEdit()
    {
        if(isset($_FILES["edit-moapambapprovefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pambapprove';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-moapambapprovefile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moapambresofilescannedEdit()
    {
        if(isset($_FILES["edit-moapambresofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_pambreso';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-moapambresofile'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                // $this->image_lib->resize();
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function moamonitoringreportEdit()
    {
        if(isset($_FILES["edit-moamonitoringuploads"]["name"]))
               {
                $config['upload_path'] = 'bmb_assets2/upload/tenure_moa_monitoringreport';
                $config['allowed_types'] = 'pdf';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if(!$this->upload->do_upload('edit-moamonitoringuploads'))
                {
                    echo $this->upload->display_errors();
                }
                else
                {
                    $data = $this->upload->data();
                    $this->load->library('image_lib', $config);
                    $this->image_lib->initialize($config);
                    // $this->image_lib->resize();
                        $filenames = $data['file_name'];
                        $output['status'] = $filenames;
                        echo json_encode($output);
                }
            }

    }

    public function moamonitoringrepotsfetchEdit()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallmoamaterialreport($codegens);
            $rctr=0;foreach($data as $ca):$rctr+=1;?>
                    <div id="bca<?php echo $ca->id_moa_monitoring ?>" class="showdata">
                        <button type="button" class="btn btn-danger removemonitoringreportEdit" id="<?php echo $ca->id_moa_monitoring  ?>" data-id="<?php echo $ca->id_moa_monitoring  ?>" style="position: absolute;right: 25px">
                        Remove
                        </button>
                        <fieldset>
                            <div class="col-xs-12">
                                <div class="col-xs-6 col-lg-6">Monitoring Report details : </div>
                                <div class="col-xs-6 col-lg-6"><?php echo $ca->monitoring_details; ?></div>
                            </div>
                            <div class="col-xs-12">
                                <div class="col-xs-6 col-lg-6">File Upload </div>
                                <div class="col-xs-6 col-lg-6"><?php echo '<a href="'.base_url().'bmb_assets2/upload/tenure_moa_monitoringreport/'.$ca->upload_monitoringreports.'">'.$ca->upload_monitoringreports.'</a>'; ?></div>
                            </div>
                        </fieldset>
                    </div>
                    <?php endforeach;

    }

    public function DisbursementPARIA()
    {
        if(isset($_FILES["disburseparia"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/incomedisburseparia_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('disburseparia'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legismapcompilationUpload()
    {
        if(isset($_FILES["legis_compileMap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_map_compilation';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_compileMap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legismapcompilationUploadshp()
    {
        if(isset($_FILES["legis_compileMapshp"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_map_compilation_shp';
            $config['allowed_types'] = 'zip|7z|gz|bz2|rar|tar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_compileMapshp'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    // public function recognitionfileshape()
    // {

    //     if($_FILES["recog_shapefile"]["name"] != '')
    //     {
    //      $output = '';
    //      $config["upload_path"] = 'bmb_assets2/upload/recognition_shapefile';
    //      $config["allowed_types"] = 'zip|rar';
    //      $this->load->library('upload', $config);
    //      $this->upload->initialize($config);
    //      for($count = 0; $count<count($_FILES["recog_shapefile"]["name"]); $count++)
    //      {
    //       $_FILES["file"]["name"] = $_FILES["recog_shapefile"]["name"][$count];
    //       $_FILES["file"]["type"] = $_FILES["recog_shapefile"]["type"][$count];
    //       $_FILES["file"]["tmp_name"] = $_FILES["recog_shapefile"]["tmp_name"][$count];
    //       $_FILES["file"]["error"] = $_FILES["recog_shapefile"]["error"][$count];
    //       $_FILES["file"]["size"] = $_FILES["recog_shapefile"]["size"][$count];

    //       if($this->upload->do_upload('file'))
    //       {
    //        $uploadData = $this->upload->data();
    //         $this->load->library('image_lib', $config);
    //         $this->image_lib->initialize($config);
    //         $this->image_lib->resize();
    //         $filenames = $uploadData['file_name'];
    //         $output = $filenames;
    //         }
    //       }
    //      echo $output;

    //     }
    // }

    public function recognitionfileshape()
    {
        if(isset($_FILES["recog_shapefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/recognition_shapefile';
            $config['allowed_types'] = 'zip|7z|gz|bz2|rar|tar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('recog_shapefile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function recognitionfileshapeEdit()
    {
        if(isset($_FILES["edit-recog_shapefile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/recognition_shapefile';
            $config['allowed_types'] = 'zip|7z|gz|bz2|rar|tar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-recog_shapefile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legismapcompilationUploadshpEdit()
    {
        if(isset($_FILES["edit-legis_compileMapshp"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_map_compilation_shp';
            $config['allowed_types'] = 'zip|7z|gz|bz2|rar|tar';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_compileMapshp'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispasasrpaoUpload()
    {
        if(isset($_FILES["legis_pasasrpao"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_pasasrpao';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_pasasrpao'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legiscertprodUpload()
    {
        if(isset($_FILES["legis_certproceed"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_certprod';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_certproceed'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legiscertconsultUpload()
    {
        if(isset($_FILES["legis_certconsult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_certconsult';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_certconsult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legiscertprodUploadEdit()
    {
        if(isset($_FILES["edit-legis_certproceed"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_certprod';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_certproceed'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legiscertconsultUploadEdit()
    {
        if(isset($_FILES["edit-legis_certconsult"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_certconsult';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_certconsult'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispaplanUpload()
    {
        if(isset($_FILES["legis_paplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_paplan';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_paplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevUpload()
    {
        if(isset($_FILES["legis_regionalreview"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreview';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_regionalreview'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevstaffworkUpload()
    {
        if(isset($_FILES["legis_regionalreviewstaffwork"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreviewstaffwork';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_regionalreviewstaffwork'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevendorseUpload()
    {
        if(isset($_FILES["legis_regionalreviewendorse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreviewendorse';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_regionalreviewendorse'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevstaffworkUploadEdit()
    {
        if(isset($_FILES["edit-legis_regionalreviewstaffwork"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreviewstaffwork';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_regionalreviewstaffwork'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevendorseUploadEdit()
    {
        if(isset($_FILES["edit-legis_regionalreviewendorse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreviewendorse';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_regionalreviewendorse'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevUpload()
    {
        if(isset($_FILES["legis_nationalreview"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreview';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_nationalreview'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevstaffworkUpload()
    {
        if(isset($_FILES["legis_nationalreviewstaffwork"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreviewstaffwork';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_nationalreviewstaffwork'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevendorseUpload()
    {
        if(isset($_FILES["legis_nationalreviewendorse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreviewendorse';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_nationalreviewendorse'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevstaffworkUploadEdit()
    {
        if(isset($_FILES["edit-legis_nationalreviewstaffwork"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreviewstaffwork';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_nationalreviewstaffwork'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevendorseUploadEdit()
    {
        if(isset($_FILES["edit-legis_nationalreviewendorse"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreviewendorse';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_nationalreviewendorse'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispresprocUpload()
    {
        if(isset($_FILES["legis_presproc"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_presidentialproc';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_presproc'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispresprocrecomUpload()
    {
        if(isset($_FILES["legis_presprocrecom"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_presidentialprocrecom';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_presprocrecom'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispresprocrecomUploadEdit()
    {
        if(isset($_FILES["edit-legis_presprocrecom"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_presidentialprocrecom';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_presprocrecom'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

     public function legiscongressenactUpload()
    {
        if(isset($_FILES["legis_congressenact"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_congressenactment';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('legis_congressenact'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legismapcompileupload()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getalllegismapcompile($codegens);
        $output = '';
        foreach ($data as $row) {
           $output .= '
           <div class="col-md-12">
           <button type="button" name="remove" data-row="row" class="btn btn-danger btn-xs removepasuso" data-id="'.$row->id_compilemap.'">-</button>&nbsp;File attached :
           <a href="'.base_url().'bmb_assets2/upload/legal_map_compilation/'.$row->map_compilation_file.'">'.$row->map_compilation_file.'</a>
           </div><br>
           ';
        }
         echo $output;
    }

    public function legismapcompilationUploadEdit()
    {
        if(isset($_FILES["edit-legis_compileMap"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_map_compilation';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_compileMap'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
                // $data['mainproj'] = (object)$postDataImage = [
                //     'generatedcode '    => $this->input->post('gencode',true),
                //     'legal_generatedcode '    => $this->input->post('legalcodegenerated',true),
                //     'map_compilation_file'          => (!empty($filenames)?$filenames:$this->input->post('old_picture')),
                //     'date_uploaded'       =>  date("Y-m-d H:i:s")
                // ];

                // $this->pamain_model->insertlegismapcompile($postDataImage);
            }
        }
    }

    public function legispasasrpaoUploadEdit()
    {
        if(isset($_FILES["edit-legis_pasasrpao"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_pasasrpao';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_pasasrpao'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispaplanUploadEdit()
    {
        if(isset($_FILES["edit-legis_paplan"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_paplan';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_paplan'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisregrevUploadEdit()
    {
        if(isset($_FILES["edit-legis_regionalreview"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_regionalreview';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_regionalreview'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legisnationalrevUploadEdit()
    {
        if(isset($_FILES["edit-legis_nationalreview"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_nationalreview';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_nationalreview'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function legispresprocUploadEdit()
    {
        if(isset($_FILES["edit-legis_presproc"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_presidentialproc';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_presproc'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

     public function legiscongressenactUploadEdit()
    {
        if(isset($_FILES["edit-legis_congressenact"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/legal_congressenactment';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-legis_congressenact'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function DisbursementSAGF()
    {
        if(isset($_FILES["disbursesagf"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/incomedisbursesagf_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('disbursesagf'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                $filenames = $data['file_name'];
                $output['status'] = $filenames;
                echo json_encode($output);
            }
        }
    }

    public function DisbursementPARIAEdit()
    {
        if(isset($_FILES["edit-disburseparia"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/incomedisburseparia_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-disburseparia'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function DisbursementSAGFEdit()
    {
        if(isset($_FILES["edit-disbursesagf"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/incomedisbursesagf_file';
            $config['allowed_types'] = 'csv|pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-disbursesagf'))
            {
                echo $this->upload->display_errors();
            }
            else
            {
                $data = $this->upload->data();
                $this->load->library('image_lib', $config);
                $this->image_lib->initialize($config);
                $filenames = $data['file_name'];
                $output['status'] = $filenames;
                echo json_encode($output);
            }
        }
    }

    public function fetchDisbursementIncomes2(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllDisburReportsourceincome($codegens);

        $dataAnnualIncome = $this->pamain_model->getTotalSourceIncomeForDisbursement($codegens);
        $dataAnnualIncomeOthers = $this->pamain_model->getTotalotherincomesDisbursement($codegens);
        $dataAnnualIncomeOthers2 = $this->pamain_model->getTotalsourceotherincomesDisbursement($codegens);
        $datadonation = $this->pamain_model->getTotalDonationCashForDisbursement($codegens);
        $dataGT = $this->pamain_model->getAllGrandTotalDisburPDFReportform($codegens);
        $totalincome = 0.00;
        $otherincome1 = 0.00;
        $otherincome2 = 0.00;
        $donationCash = 0.00;
        $annaulincome = 0.00;

        foreach($data as $row):
            $year = $row->year_disbursement;
            $runningbalance = $this->pamain_model->getrunningbalances($codegens,$year);
            $rbal = 0.00;
                foreach($runningbalance as $bal):
                       $rbal =  $bal->balance_oldsubfund + $row->annual_income_old - $row->disbursement_oldsubfund;
                    endforeach;
            ?>
            <tr id="<?php echo $row->id_disburementsec ; ?>">
                <td><?php echo $row->year_disbursement; ?></td>
                <td><?php echo number_format($row->annual_income_old,2); ?></td>
                <td class="hidden precio1"><?php echo $row->annual_income_old; ?></td>

                <td><?php echo number_format($row->annual_disbursements,2); ?></td>
                <?php
                    $rrr =  0.00;
                    $rrr = $row->annual_disbursements;

                ?>
                <td><?php
                       echo number_format($row->annual_balances,2);
                 ?></td>

                <td><?php echo number_format($row->disbursement_old_income,2); ?></td>
                <td class="hidden precio2"><?php echo $row->disbursement_old_income; ?></td>
                <td><?php echo number_format($row->disbursement_oldsubfund,2); ?></td>
                <td class="hidden precio3"><?php echo $row->disbursement_oldsubfund; ?></td>
                <td><?php echo number_format($row->balance_oldsubfund,2); ?></td>
                <td class="hidden precio4"><?php echo $row->balance_oldsubfund; ?></td>
                <td class="hidden">

                    <?php foreach($dataAnnualIncomeOthers as $rowO):
                        if($row->year_disbursement == $rowO->income_other_year):
                            $otherincome1= $rowO->sumOtherincomes;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncomeOthers2 as $rowO2):
                        if($row->year_disbursement == $rowO2->otherincome_other_year):
                            $otherincome2= $rowO2->sumOtherincomes2;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($datadonation as $rowD):
                        if($row->year_disbursement == $rowD->income_donate_year):
                            $donationCash= $rowD->cashSum;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncome as $rowM):
                        if($row->year_disbursement == $rowM->income_date_year):
                        echo number_format($rowM->sumall + $otherincome1 + $otherincome2 + $donationCash,2);
                        $annaulincome = $rowM->sumall + $otherincome1 + $otherincome2 + $donationCash;
                    endif;
                    endforeach; ?>
                </td>
                <td class="hidden precio5">
                    <?php foreach($dataAnnualIncomeOthers as $rowO):
                        if($row->year_disbursement == $rowO->income_other_year):
                            $otherincome1= $rowO->sumOtherincomes;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncomeOthers2 as $rowO2):
                        if($row->year_disbursement == $rowO2->otherincome_other_year):
                            $otherincome2= $rowO2->sumOtherincomes2;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($datadonation as $rowD):
                        if($row->year_disbursement == $rowD->income_donate_year):
                            $donationCash= $rowD->cashSum;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncome as $rowM):
                        if($row->year_disbursement == $rowM->income_date_year):
                        echo $rowM->sumall + $otherincome1 + $otherincome2 + $donationCash;
                    endif;
                    endforeach; ?>
                </td>
                <td><?php echo number_format($row->income_paria,2); ?></td>
                <td class="hidden precio6"><?php echo $row->income_paria; ?></td>
                <td><?php echo number_format($row->disbursement_paria,2); ?></td>
                <td class="hidden precio7"><?php echo $row->disbursement_paria; ?></td>
                <td><?php echo number_format($row->balance_paria,2); ?></td>
                <td class="hidden precio8"><?php echo $row->balance_paria; ?></td>
                <td><?php echo number_format($row->income_sagf,2); ?></td>
                <td class="hidden precio9"><?php echo $row->income_sagf; ?></td>
                <td><?php echo number_format($row->disbursement_sagf,2); ?></td>
                <td class="hidden precio10"><?php echo $row->disbursement_sagf; ?></td>
                <td><?php echo number_format($row->balance_sagf,2); ?></td>
                <td class="hidden precio11"><?php echo $row->balance_sagf; ?></td>
                <td class="hidden"><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/incomedisburseparia_file/').$row->disbursement_paria_file ?>"><?php echo $row->disbursement_paria_file ?></a></td>
                <td class="hidden"><?php echo $row->disbursement_paria_file; ?></td>
                <td class="hidden"><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/incomedisbursesagf_file/').$row->disbursement_sagf_file ?>"><?php echo $row->disbursement_sagf_file ?></a></td>
                <td class="hidden"><?php echo $row->disbursement_sagf_file; ?></td>
                <td class="hidden"><?php echo number_format($row->starting_balance_prev,2); ?></td>
                <td class="hidden"><?php echo number_format($row->starting_balance_oldsub,2); ?></td>
                <td class="hidden"><?php echo number_format($row->starting_balance_paria,2); ?></td>
                <td class="hidden"><?php echo number_format($row->starting_balance_sagf,2); ?></td>
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_disburementsec;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_disburements(this)">Edit</button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removedisbursementsa" data-id="<?php echo $row->id_disburementsec ?>" title="Remove">Remove</button>
                    <input type="hidden" id="disburse_year<?php echo $row->id_disburementsec;?>" value="<?php echo $row->year_disbursement ?>" />
                    <input type="hidden" id="disburse_subparia<?php echo $row->id_disburementsec;?>" value="<?php echo $row->oldsubparia ?>" />
                </td>
            </tr>
        <?php endforeach; ?>
        <?php foreach($dataGT as $rowgt): ?>
            <tr style="background-color: #ff8566; font-weight: 700; color: #fff;">
                <td>GRAND TOTAL</td>
                <td id="sumthiscolumn1"></td>
                <td><?php echo number_format($rowgt->gtad,2) ?></td>
                <td><?php echo number_format($rowgt->gtab,2) ?></td>
                <td id="sumthiscolumn2"></td>
                <td id="sumthiscolumn3"></td>
                <td id="sumthiscolumn4"></td>
                <td class="hidden" id="sumthiscolumn5"></td>
                <td id="sumthiscolumn6"></td>
                <td id="sumthiscolumn7"></td>
                <td id="sumthiscolumn8"></td>
                <td id="sumthiscolumn9"></td>
                <td id="sumthiscolumn10"></td>
                <td id="sumthiscolumn11"></td>
            </tr>
        <?php
        endforeach;
    }
    public function fetchDisbursementIncomes(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getAllDisburReport($codegens);
        $dataAnnualIncome = $this->pamain_model->getTotalSourceIncomeForDisbursement($codegens);
        $dataAnnualIncomeOthers = $this->pamain_model->getTotalotherincomesDisbursement($codegens);
        $dataAnnualIncomeOthers2 = $this->pamain_model->getTotalsourceotherincomesDisbursement($codegens);
        $datadonation = $this->pamain_model->getTotalDonationCashForDisbursement($codegens);
        $totalincome = 0.00;
        $otherincome1 = 0.00;
        $otherincome2 = 0.00;
        $donationCash = 0.00;
        $annaulincome = 0.00;
        foreach ($data as $row): ?>
            <tr id="<?php echo $row->id_disburementsec; ?>">
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <td class="hidden"><?php echo $row->disbursement_oldsubfund; ?></td>
                <td class="hidden"><?php echo $row->balance_oldsubfund; ?></td>
                <td class="hidden"><?php echo $row->disbursement_paria; ?></td>
                <td class="hidden"><?php echo $row->balance_paria; ?></td>
                <td class="hidden"><?php echo $row->disbursement_sagf; ?></td>
                <td class="hidden"><?php echo $row->balance_sagf; ?></td>
                <td class="hidden"><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/incomedisburseparia_file/').$row->disbursement_paria_file ?>"><?php echo $row->disbursement_paria_file ?></a></td>
                <td class="hidden"><?php echo $row->disbursement_paria_file; ?></td>
                <td class="hidden"><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/incomedisbursesagf_file/').$row->disbursement_sagf_file ?>"><?php echo $row->disbursement_sagf_file ?></a></td>
                <td class="hidden"><?php echo $row->disbursement_sagf_file; ?></td>
                <td><?php echo $row->year_disbursement; ?></td>
                <td>

                    <?php foreach($dataAnnualIncomeOthers as $rowO):
                        if($row->year_disbursement == $rowO->year):
                            $otherincome1= $rowO->sumOtherincomes;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncomeOthers2 as $rowO2):
                        if($row->year_disbursement == $rowO2->year):
                            $otherincome2= $rowO2->sumOtherincomes2;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($datadonation as $rowD):
                        if($row->year_disbursement == $rowD->year):
                            $donationCash= $rowD->cashSum;
                        endif;
                        endforeach;
                    ?>
                    <?php foreach($dataAnnualIncome as $rowM):
                        if($row->year_disbursement == $rowM->year):
                        $annaulincome = $rowM->efamount + $rowM->ffamount + $rowM->rfsum + $rowM->rffsum +$rowM->SAPAsum + $rowM->MOAsum + $rowM->RSAsum + $rowM->CLAsum + $otherincome1 + $rowM->FINEsum + $rowM->GRsum + $rowM->ENDsum + $otherincome2 + $donationCash;
                        echo number_format($rowM->efamount + $rowM->ffamount + $rowM->rfsum + $rowM->rffsum +$rowM->SAPAsum + $rowM->MOAsum + $rowM->RSAsum + $rowM->CLAsum + $otherincome1 + $rowM->FINEsum + $rowM->GRsum + $rowM->ENDsum + $otherincome2 + $donationCash,2);
                    endif;
                    endforeach; ?>
                </td>
                <td class="hidden precio1">
                    <?php echo $annaulincome?>
                </td>
                <td>
                    <?php echo $row->year_disbursement>=2015?'':number_format($annaulincome*.75,2)?>
                </td>
                <td class="hidden precio2">
                    <?php echo $row->year_disbursement>=2015?'':$annaulincome*.75?>
                </td>
                <!-- 75%  Old Subfund Disbursement -->
                <td>
                    <?php echo $row->year_disbursement>=2015?'':number_format($row->disbursement_oldsubfund,2) ?>
                </td>
                <td class="hidden precio3">
                    <?php echo $row->year_disbursement>=2015?'':$row->disbursement_oldsubfund ?>
                </td>
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo $row->year_disbursement>=2015?'':number_format(($annaulincome)*.75 - $row->disbursement_oldsubfund,2);
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio4">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo $row->year_disbursement>=2015?'':($annaulincome)*.75 - $row->disbursement_oldsubfund;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo ($rowAI->year<=2016?'':number_format(($annaulincome)*.75,2));
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio5">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo $rowAI->year<=2016?'':($annaulincome)*.75;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo number_format($row->disbursement_paria,2);
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio6">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo $row->disbursement_paria;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <!-- 75% PARIA BALANCE -->
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo ($rowAI->year>=2016?($row->balance_paria=="0.00"?number_format(($annaulincome)*.75 - $row->disbursement_paria,2):number_format($row->balance_paria,2)):'0.00');
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio7">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo ($rowAI->year>=2016?($row->balance_paria=="0.00"?($annaulincome)*.75 - $row->disbursement_paria:$row->balance_paria):'0.00');
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <!-- SAGF 25% -->
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo number_format(($annaulincome)*.25,2);
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio8">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo ($annaulincome)*.25;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo number_format($row->disbursement_sagf,2);
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio9">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo $row->disbursement_sagf;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td>
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo number_format(($annaulincome)*.25 - $row->disbursement_sagf,2);
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden precio10">
                    <?php foreach ($dataAnnualIncome as $rowAI): ?>
                        <?php if ($row->year_disbursement == $rowAI->year):
                            echo ($annaulincome)*.25 - $row->disbursement_sagf;
                         endif ?>
                    <?php endforeach; ?>
                </td>
                <td>
                    <button type="button" value="<?php echo $row->id_disburementsec;?>" class="btn btnbtn btn-info btn-xs" onclick="edit_disburements(this)">Edit</button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removedisbursementsa" data-id="<?php echo $row->id_disburementsec ?>" title="Remove">Remove</button>
                    <input type="hidden" id="disburse_year<?php echo $row->id_disburementsec;?>" value="<?php echo $row->year_disbursement ?>" />
                </td>
            </tr>
            <?php endforeach;?>
            <tr>
                <td>GRAND TOTAL</td>
                <td id="sumthiscolumn1"></td>
                <td id="sumthiscolumn2"></td>
                <td id="sumthiscolumn3"></td>
                <td id="sumthiscolumn4"></td>
                <td id="sumthiscolumn5"></td>
                <td id="sumthiscolumn6"></td>
                <td id="sumthiscolumn7"></td>
                <td id="sumthiscolumn8"></td>
                <td id="sumthiscolumn9"></td>
                <td id="sumthiscolumn10"></td>
            </tr>
    <?php
    }

        public function update_disbursements()
    {
        // if(!empty($_FILES['edit-disburseparia']['name'])){
        //     $config ['upload_path'] = 'bmb_assets2/upload/incomedisburseparia_file';
        //     $config['file_name'] = $_FILES['edit-disburseparia']['name'];
        //     $config['allowed_types'] = 'pdf|csv';

        //     $this->load->library('upload', $config);
        //     $this->upload->initialize($config);
        //      if($this->upload->do_upload('edit-disburseparia')){
        //         $uploadData = $this->upload->data();
        //         $filenames = $uploadData['file_name'];
        //     }
        // }

        // if(!empty($_FILES['edit-disbursesagf']['name'])){
        //     $config ['upload_path'] = 'bmb_assets2/upload/incomedisbursesagf_file';
        //     $config['file_name'] = $_FILES['edit-disbursesagf']['name'];
        //     $config['allowed_types'] = 'pdf|csv';

        //     $this->load->library('upload', $config);
        //     $this->upload->initialize($config);
        //      if($this->upload->do_upload('edit-disbursesagf')){
        //         $uploadData1 = $this->upload->data();
        //         $filenames1 = $uploadData1['file_name'];
        //     }
        // }


        $gencode = $this->input->post("disbursement-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("disbursement-id");
            $details = array(
                'disbursement_paria' =>      ($this->input->post('edit-oldsubparia')==2?str_replace(',','',$this->input->post('edit-paria',true)):""),
                'disbursement_sagf' =>      str_replace(',','',$this->input->post('edit-sagf',true)),
                'disbursement_oldsubfund' =>      ($this->input->post('edit-oldsubparia')==1?str_replace(',','',$this->input->post('edit-subfund_disbursement',true)):""),
                'balance_oldsubfund' =>      ($this->input->post('edit-oldsubparia')==1?str_replace(',','',$this->input->post('edit-subfund_balance',true)):""),
                'balance_paria' =>      ($this->input->post('edit-oldsubparia')==2?str_replace(',','',$this->input->post('edit-paria_balance',true)):""),
                'balance_sagf' =>      str_replace(',','',$this->input->post('edit-sagf_balance',true)),
                'disbursement_paria_file' => (!empty($this->input->post('edit-disburseparia_span'))?$this->input->post('edit-disburseparia_span'):$this->input->post('edit-olddisbursefileparia')),
                'disbursement_sagf_file' => (!empty($this->input->post('edit-disbursesagf_span'))?$this->input->post('edit-disbursesagf_span'):$this->input->post('edit-olddisbursefilesagf')),
                'disbursement_old_income' =>  ($this->input->post('edit-oldsubparia')==1?str_replace(',','',$this->input->post('edit-subfund_disbursement_income',true)):""),
                'income_paria' =>  ($this->input->post('edit-oldsubparia')==2?str_replace(',','',$this->input->post('edit-income_paria',true)):""),
                'income_sagf' =>  str_replace(',','',$this->input->post('edit-income_sagf',true)),
                'annual_income_old' =>  str_replace(',','',$this->input->post('edit-actual_income_annuals',true)),
                'oldsubparia' => $this->input->post('edit-oldsubparia',true),
                'annual_disbursements' =>  str_replace(',','',$this->input->post('edit-annual_disbursements',true)),
                'annual_balances' =>  str_replace(',','',$this->input->post('edit-annual_balances',true)),
                'starting_balance_prev' =>  str_replace(',','',$this->input->post('edit-remaining_balance',true)),
                'starting_balance_oldsub' =>  ($this->input->post('edit-oldsubparia')==1?str_replace(',','',$this->input->post('edit-running_balance2015',true)):""),
                'starting_balance_paria' =>  ($this->input->post('edit-oldsubparia')==2?str_replace(',','',$this->input->post('edit-running_balance2016',true)):""),
                'starting_balance_sagf' =>  str_replace(',','',$this->input->post('edit-running_balancesagf',true)),
            );
                // 'disbursement_paria' =>      str_replace(',','',$this->input->post('edit-paria',true)),
                //              'disbursement_sagf' =>      str_replace(',','',$this->input->post('edit-sagf',true)),
                //              'disbursement_oldsubfund' =>      str_replace(',','',$this->input->post('edit-subfund_disbursement',true)),
                //              'balance_oldsubfund' =>      str_replace(',','',$this->input->post('edit-subfund_balance',true)),
                //              'balance_paria' =>      str_replace(',','',$this->input->post('edit-paria_balance',true)),
                //              'balance_sagf' =>      str_replace(',','',$this->input->post('edit-sagf_balance',true)),
                //              'annual_income_old' =>      str_replace(',','',$this->input->post('edit-actual_income_oldsub',true)),
                //              'disbursement_old_income' =>      str_replace(',','',$this->input->post('edit-subfund_disbursement_income',true)),
                //              'disbursement_oldsubfund' =>      str_replace(',','',$this->input->post('edit-subfund_disbursement',true)),
                //              'balance_oldsubfund' =>      str_replace(',','',$this->input->post('edit-subfund_balance',true)),
                //              'disbursement_paria_file' => (!empty($this->input->post('edit-disburseparia_span'))?$this->input->post('edit-disburseparia_span'):$this->input->post('edit-olddisbursefileparia')),
                //              'disbursement_sagf_file'  => (!empty($this->input->post('edit-disbursesagf_span'))?$this->input->post('edit-disbursesagf_span'):$this->input->post('edit-olddisbursefilesagf')));

            $this->pamain_model->updatequerydisbursements($details,$id);

            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function refreshwhendeletepayment(){
        $id = $this->input->post('codegens');
        $payment = $this->pamain_model->getpaymentvisitors($id);
        $pctr=0;foreach($payment as $cc):$pctr+=1;
        ?>
        <div id="divdevelopmentedit<?php echo $cc->id_visitor_payment?>" class="showdata" style="display: inline-block;">
        <fieldset>
            <div class="col-xs-12" style="display: table-cell;">
                <b>Type of fee paid : </b><?php echo $cc->typefee_details; ?><br>
                <b>Amount : </b><?php echo number_format($cc->amount_payment,2); ?>
            </div>
            <button type="button" class="btn btn-danger btn-xs removevisitorspayment" id="<?php echo $cc->id_visitor_payment ?>" data-id="<?php echo $cc->id_visitor_payment ?>">Remove
        </button>
        </fieldset>

        </div>
        <?php endforeach;
    }

    public function fetchVisitorsLogs(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallvisitorslogs($codegens);

            ?>
            <?php  foreach($data as $row){ ?>
                <?php
                    $id = $row->visitors_gencode;
                    $payment = $this->pamain_model->getpaymentvisitors($id);
                ?>
                <tr id="<?php echo $row->id_visitorslog ; ?>" class="trow">
                    <td><?php echo $row->visitorlog_month."/".$row->visitorlog_day."/".$row->visitorlog_year; ?></td>
                    <td><?php echo $row->visitorlog_fullname; ?></td>
                    <td><?php echo $row->sexdesc; ?></td>
                    <td><?php echo $row->visitorsforloc_details." ".$row->visitorlog_nationality; ?></td>
                    <td><?php echo $row->visitor_category_details; ?></td>
                    <td><?php echo $row->visitorlog_address; ?></td>
                    <td class="hidden">
                    <?php foreach ($payment as $key): ?>
                        <?php echo (!empty($key->typefee_details)?$key->typefee_details.": ":"").number_format($key->amount_payment,2).'<br>' ?>
                        <?php if ($key->types_of_payment=='6'): ?>
                            <b>Trust fund : </b><?php echo ($key->trust_fund==1?"Donation":"").($key->trust_fund==2?"Grants":"").($key->trust_fund==3?"Endowment":"")."<br>"; ?>
                            <b>Mode of payment : </b><?php echo ($key->mode_payment==1?"In-kind":"").($key->mode_payment==2?"Cash":"")."<br>"; ?>
                        <?php endif ?>
                    <?php endforeach ?>
                    </td>
                    <td><?php echo $row->visitor_purpose; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_forloc; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_nationality; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_below; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_student; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_senior; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_pwd; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_sex; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_typeofpaid; ?></td>
                    <td class="hide"><?php echo $row->visitor_purpose; ?></td>
                    <td class="hidden">
                        <?php $pctr=0;foreach($payment as $cc):$pctr+=1;
                        if($row->visitors_gencode == $cc->visitors_gencode):
                        ?>
                        <div id="divdevelopmentedit<?php echo $cc->id_visitor_payment?>" class="showdata" style="display: inline-block;">
                        <fieldset>
                            <div class="col-xs-12" style="display: table-cell;">
                                <b>Type of fee paid : </b><?php echo $cc->typefee_details; ?><br>
                                <?php if ($cc->types_of_payment=='6'): ?>
                                    <b>Trust fund : </b><?php echo ($cc->trust_fund==1?"Donation":"").($cc->trust_fund==2?"Grants":"").($cc->trust_fund==3?"Endowment":"")."<br>"; ?>
                                    <b>Mode of payment : </b><?php echo ($cc->mode_payment==1?"In-kind":"").($cc->mode_payment==2?"Cash":"")."<br>"; ?>
                                <?php endif ?>
                                <b>Amount : </b><?php echo number_format($cc->amount_payment,2); ?>
                            </div>
                            <button type="button" class="btn btn-danger btn-xs removevisitorspayment" id="<?php echo $cc->id_visitor_payment ?>" data-id="<?php echo $cc->id_visitor_payment ?>">Remove
                        </button>
                        </fieldset>

                        </div>
                        <?php endif; endforeach;?>
                    </td>
                    <td class="hide"><?php echo $row->visitorlog_month; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_day; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_year; ?></td>
                    <td class="hide"><?php echo $row->generatedcode; ?></td>
                    <td class="hide"><?php echo $row->visitors_gencode; ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_visitorslog ;?>" class="btn btn-info btn-xs" onclick="edit_visitorslogs(this)">Edit</button>
                        <button type="button" class="btn btn-danger btn-flat btn-xs removeVisitorsLog" data-id="<?php echo $row->id_visitorslog  ?>" title="Remove">Remove</button>
                        <input type="hidden" id="pym1<?php echo $row->id_visitorslog;?>" value="<?php echo $row->visitors_category ?>" />
                    </td>
                </tr>
            <?php
                if (!empty($row->visitors_gencode)) {
                    $codegenss = $row->visitors_gencode;
                    $dataTotal = $this->pamain_model->getsearchallvisitorsLogbook($codegens);
                }
            }
            if (!empty($row->visitors_gencode)) {
                foreach($dataTotal as $Trow){ ?>
                    <tr class="hidden">
                        <td style="color: red;font-weight: 700;text-align: right;font-size: 24px" colspan="6">GRAND TOTAL</td>
                        <td style="color: red;font-weight: 700;text-align: right;font-size: 24px"><?php echo number_format($Trow->amounts,2); ?></td>
                        <td colspan="2"></td>
                    </tr>
            <?php
            }}
    }



    public function update_visitorsLogs(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');
        $data1 = $this->input->post('tablevisitorslogfeeEdits');
        if($this->session->userdata('email')){
            $id = $this->input->post("visitorlog-id");
            $details = array('visitorlog_fullname' => $this->input->post("edit-visitorsname"),
                             'visitorlog_forloc' => $this->input->post("edit-visitorsforloc"),
                             'visitorlog_nationality' => $this->input->post("edit-visitorsnationality"),
                             'visitorlog_sex' => $this->input->post("edit-visitorssex"),
                             'visitorlog_address' => $this->input->post("edit-visitorsaddress"),
                             'visitorlog_typeofpaid' => $this->input->post("edit-visitorsfeetype"),
                             'visitorlog_amount' => $this->input->post("edit-visitorsfeeamount"),
                             'visitor_purpose' => $this->input->post("edit-visitorpurpose"),
                             'visitors_category' => $this->input->post("edit-visit_cat"),
                             'date_created' => date('Y-m-d'),
                            );
            $this->pamain_model->update_visitorsLogs($details,$id,$data1);

            echo json_encode(['result' => 'things you want to show']);
        }
    }

    public function deleteVisitorLog($id = null)
    {
        $output = array();
         $sql = "DELETE FROM tblipafvisitorslog WHERE id_visitorslog = '$id'";
         // $sql2 = "DELETE FROM tblpavisitorspayment WHERE visitors_gencode = '$id'";
        if($this->db->query($sql) && $this->db->query($sql2)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function fetchVisitorsLogsSearch(){
        $codegens = $this->input->post('code');
        $year = $this->input->post('yearselect');
        $month = $this->input->post('monthselect');
        $data = $this->pamain_model->getallvisitorslogsSearch($codegens,$year,$month);
        $dataTotal = $this->pamain_model->getsearchallvisitorsLogbookAmount($codegens,$year,$month);

            ?>
            <?php  foreach($data as $row){ ?>
                <?php
                $id = $row->visitors_gencode;
                $payment = $this->pamain_model->getsearchpaymentvisitors($id,$year,$month);
                ?>
                <tr id="<?php echo $row->id_visitorslog ; ?>" class="trow">
                    <td><?php echo $row->visitorlog_month."/".$row->visitorlog_day."/".$row->visitorlog_year; ?></td>
                    <td><?php echo $row->visitorlog_fullname; ?></td>
                    <td><?php echo $row->sexdesc; ?></td>
                    <td><?php echo $row->visitorsforloc_details." ".$row->visitorlog_nationality; ?></td>
                    <td><?php echo $row->visitor_category_details; ?></td>
                    <td><?php echo $row->visitorlog_address; ?></td>
                    <td class="hidden">
                    <?php foreach ($payment as $key): ?>
                        <?php echo (!empty($key->typefee_details)?$key->typefee_details.": ":"").number_format($key->amount_payment,2).'<br>' ?>
                        <?php if ($key->types_of_payment=='6'): ?>
                            <b>Trust fund : </b><?php echo ($key->trust_fund==1?"Donation":"").($key->trust_fund==2?"Grants":"").($key->trust_fund==3?"Endowment":"")."<br>"; ?>
                            <b>Mode of payment : </b><?php echo ($key->mode_payment==1?"In-kind":"").($key->mode_payment==2?"Cash":"")."<br>"; ?>
                        <?php endif ?>
                    <?php endforeach ?>
                    </td>
                    <td><?php echo $row->visitor_purpose; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_forloc; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_nationality; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_below; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_student; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_senior; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_pwd; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_sex; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_typeofpaid; ?></td>
                    <td class="hide"><?php echo $row->visitor_purpose; ?></td>
                    <td class="hidden">
                        <?php $pctr=0;foreach($payment as $cc):$pctr+=1;
                        if($row->visitors_gencode == $cc->visitors_gencode):
                        ?>
                        <div id="divdevelopmentedit<?php echo $cc->id_visitor_payment?>" class="showdata" style="display: inline-block;">
                        <fieldset>
                            <div class="col-xs-12" style="display: table-cell;">
                                <b>Type of fee paid : </b><?php echo $cc->typefee_details; ?><br>
                                <?php if ($cc->types_of_payment=='6'): ?>
                                    <b>Trust fund : </b><?php echo ($cc->trust_fund==1?"Donation":"").($cc->trust_fund==2?"Grants":"").($cc->trust_fund==3?"Endowment":"")."<br>"; ?>
                                    <b>Mode of payment : </b><?php echo ($cc->mode_payment==1?"In-kind":"").($cc->mode_payment==2?"Cash":"")."<br>"; ?>
                                <?php endif ?>
                                <b>Amount : </b><?php echo number_format($cc->amount_payment,2); ?>
                            </div>
                            <button type="button" class="btn btn-danger btn-xs removevisitorspayment" id="<?php echo $cc->id_visitor_payment ?>" data-id="<?php echo $cc->id_visitor_payment ?>">Remove
                            <!-- <input type="hidden" name="pym1<?php echo $rctr;?>" value="<?php echo $ca->id_transportation; ?>"/>                         -->
                        </button>
                        </fieldset>

                        </div>
                        <?php endif; endforeach;?>
                    </td>
                    <td class="hide"><?php echo $row->visitorlog_month; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_day; ?></td>
                    <td class="hide"><?php echo $row->visitorlog_year; ?></td>
                    <td class="hide"><?php echo $row->generatedcode; ?></td>
                    <td class="hide"><?php echo $row->visitors_gencode; ?></td>
                    <td>
                        <button type="button" value="<?php echo $row->id_visitorslog ;?>" class="btn btn-info btn-edit-reference" onclick="edit_visitorslogs(this)">
                        Edit </button>
                        <button type="button" class="btn btn-danger btn-flat removeVisitorsLog" data-id="<?php echo $row->visitors_gencode  ?>" title="Remove">Remove</button>
                        <input type="hidden" id="pym1<?php echo $row->id_visitorslog;?>" value="<?php echo $row->visitors_category ?>" />
                    </td>
                </tr>
            <?php
            }

            foreach($dataTotal as $Trow){ ?>
                <tr class="hidden">
                    <td style="color: red;font-weight: 700;text-align: right;font-size: 24px" colspan="6">GRAND TOTAL</td>
                    <td style="color: red;font-weight: 700;text-align: right;font-size: 24px"><?php echo number_format($Trow->amounts,2); ?></td>
                    <td colspan="2"></td>
                </tr>
            <?php
            }
    }

    public function getbdfeSubCategories()
        {
       $category = $this->input->post('categorys');
            if (!empty($category)) {
            $query = $this->db->select('*')
                ->from('tblpalivelihood_type')
                ->where('prod_id',$category)
                ->get();
            $option = "<option value=\"\">Select sub category</option>";
            if ($query->num_rows() > 0) {
                foreach ($query->result() as $apt) {
                    $option .= "<option value=\"$apt->id_lh_type\">$apt->lh_type</option>";
                }
                $data['message'] = $option;
                $data['status'] = true;
            } else {
                $data['message'] = "No available";
                $data['status'] = false;
            }
        } else {
            $data['message'] = "Invalid item selected";
            $data['status'] = null;
        }

        echo json_encode($data);
    }

    public function insertlogs(){
        $output = array();
        $user = $this->session->userdata('user_id');
        $region = $this->session->userdata('region');
        $prev = $this->input->post('prev');
        $current = $this->input->post('current');
        $code = $this->input->post('gencode');
        $data['logs'] = (object)$postData = [
            'user_account' => $user,
            'generatedcode' => $code,
            'region' => $region,
            // 'status_id' => $this->input->post('search-searchcode',true),
            'event' => "Previous details : ".$prev."<br>Current Changes : ".$current,
            'event_time' => date("Y-m-d H:i:s")
        ];
        $query = $this->pamain_model->addIntoLogs($postData);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully updated!';
        }else{

        }
        echo json_encode($output);
    }

    public function update_elevation_high(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('elevation_highest' => str_replace(',','',$this->input->post('highestelev')));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetelevationhigh()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->elevation_highest";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_elevation_low(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('elevation_lowest' => str_replace(',','',$this->input->post('lowestelev')));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetelevationlow()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->elevation_lowest";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_ethnicity(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('ethinicity' => $this->input->post('ethinicity'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetethnicity()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->ethinicity";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_archeology(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('archeology' => $this->input->post('archeology'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetarcheology()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->archeology";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_culres(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('cultural_resource' => $this->input->post('culturalresource'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetculres()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->cultural_resource";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_belief(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('belief' => $this->input->post('belief'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetbelief()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->belief";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_likp(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('local_inter_knowledge_practices' => $this->input->post('likp'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetlikp()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->local_inter_knowledge_practices";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_mbdatemonth(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('pamb_month' => $this->input->post('pamb_month'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetmbdatemonth()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->pamb_month";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_mbdateday(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('pamb_day' => $this->input->post('pamb_day'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetmbdateday()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->pamb_day";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_mbdateyear(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('pamb_year' => $this->input->post('pamb_year'));
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function resetmbdateyear()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->pamb_year";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_main(){
        $output = array();
        $paname = $this->input->post('paname');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");

        $id = $this->input->post("id_main");
            $details = array('pa_name' => $this->input->post('pa_name')
                         );
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function update_main_formername(){
        $output = array();
        $formerpaname = $this->input->post('formerpa_name');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('formerpaname' => $this->input->post('formerpa_name')
                         );
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function update_main_kbas(){
        $output = array();
        $kba = $this->input->post('cpabi_id');
        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('cpabi_id' => $this->input->post('cpabi_id')
                         );
            $this->pamain_model->update_main_paname($details,$id);

        echo json_encode($output);
    }

    public function update_pamain_land(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('terrestrial' => str_replace(',','',$this->input->post('terrestrial',true)),
                             'area' => str_replace(',','',$this->input->post('area',true)));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function update_pamain_water(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('marine_area' => str_replace(',','',$this->input->post('marine',true)),
                             'area' => str_replace(',','',$this->input->post('area',true)));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function update_pamain_terrestrialbuffer(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('buffer' => str_replace(',','',$this->input->post('buffer',true)));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function resetinfoterrestrialbuffer()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= number_format("$try->buffer",3);
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_pamain_marinebuffer(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('marine_buffer' => str_replace(',','',$this->input->post('marine_buffer',true)));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function resetinfomarinebuffer()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= number_format("$try->marine_buffer",3);
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_pamain_accessibility(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('accessibility' => $this->input->post('accessibility',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function resetinfoaccessibility()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->accessibility";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);
    }

    public function update_pamain_accessibility_whereto(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('embeded_map'  => (!empty($this->input->post('embded_map_link',true))?$this->input->post('embded_map_link',true):$this->input->post('backup_html_map')));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function resetinfoaccessibility_whereto()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->embeded_map";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_wdpa_desigtype(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('desig_type'  => $this->input->post('desig_type',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_desigtype()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->desig_type";
        }
        $data['output'] = $output;
    }

         // echo $output;
        echo json_encode($data);

    }

    public function update_wdpa_iucn(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('iucn_cat'  => $this->input->post('iucn_cat',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_iucn()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->iucn_cat";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_wdpa_marine(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('wdpamarineid'  => $this->input->post('wdpamarineid',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_marine()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->wdpamarineid";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_wdpa_notake(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('wdpanotake'  => $this->input->post('wdpanotake',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_notake()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->wdpanotake";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_wdpa_status(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('wdpastatus'  => $this->input->post('wdpastatus',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_status()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->wdpastatus";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_wdpa_verify(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('wdpaverif'  => $this->input->post('wdpaverif',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_verify()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->wdpaverif";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_wdpa_iso(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('wdpaiso'  => $this->input->post('wdpaiso',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_wdpa_iso()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->wdpaiso";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_boundary(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('boundary_upper'  => $this->input->post('boundary_upper',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_boundary()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->boundary_upper";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_uml_dd(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('uml_long_decimal'  => $this->input->post('uml2_clongoutputdd',true),
                             'uml_long_degree'  => $this->input->post('uml2_clongdmsdegree',true),
                             'uml_long_minutes'  => $this->input->post('uml2_clongdmsminute',true),
                             'uml_long_seconds'  => $this->input->post('uml2_clongdmssecond',true)
        );
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_uml_dd()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_long_decimal";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_uml_long_dir(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('uml_long_direction'  => $this->input->post('uml2_clongdmsdir',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_uml_long_dir()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_long_direction";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_degree()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_long_degree";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_minutes()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_long_minutes";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_seconds()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_long_seconds";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_uml_lat_dd(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('uml_lat_decimal'  => $this->input->post('uml2_clatoutputdd',true),
                             'uml_lat_degree'  => $this->input->post('uml2_clatdmsdegree',true),
                             'uml_lat_minute'  => $this->input->post('uml2_clatdmsminute',true),
                             'uml_lat_seconds'  => $this->input->post('uml2_clatdmssecond',true)
        );
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_uml_lat_dd()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_lat_decimal";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_uml_lat_dir(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('uml_lat_direction'  => $this->input->post('uml2_clatdmsdir',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_uml_lat_dir()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_lat_direction";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_lat_degree()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_lat_degree";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_lat_minutes()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_lat_minute";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_uml_lat_seconds()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->uml_lat_seconds";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_lmr_long_dd(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('lmr_long_decimal'  => $this->input->post('lmr2_clongoutputdd',true),
                             'lmr_long_degree'  => $this->input->post('lmr2_clongdmsdegree',true),
                             'lmr_long_minutes'  => $this->input->post('lmr2_clongdmsminute',true),
                             'lmr_long_seconds'  => $this->input->post('lmr2_clongdmssecond',true)
        );
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_lmr_long_dd()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_long_decimal";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_lmr_long_dir(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('lmr_long_direction'  => $this->input->post('lmr2_clongdmsdir',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_lmr_long_dir()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_long_direction";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_long_degree()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_long_degree";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_long_minutes()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_long_minutes";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_long_seconds()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_long_seconds";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_lmr_lat_dd(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('lmr_lat_decimal'  => $this->input->post('lmr2_clatoutputdd',true),
                             'lmr_lat_degree'  => $this->input->post('lmr2_clatdmsdegree',true),
                             'lmr_lat_minutes'  => $this->input->post('lmr2_clatdmsminute',true),
                             'lmr_lat_seconds'  => $this->input->post('lmr2_clatdmssecond',true)
        );
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_lmr_lat_dd()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_lat_decimal";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function update_lmr_lat_dir(){
        $output = array();

        $code = $this->input->post('gencode');
        $id_main = $this->input->post("id_main");
        $id = $this->input->post("id_main");
            $details = array('lmr_lat_direction'  => $this->input->post('lmr2_clatdmsdir',true));
            $this->pamain_model->update_main_paname($details,$id);
        echo json_encode($output);
    }

    public function reset_lmr_lat_dir()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_lat_direction";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_lat_degree()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_lat_degree";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_lat_minutes()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_lat_minutes";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function reset_lmr_lat_seconds()
    {
        $codegens = $this->input->post('codegens');
        $output = '';
        $query = $this->db->select('*')
                ->from('tblpamain')
                ->where('generatedcode',$codegens)
                ->get();
        if ($query->num_rows() > 0) {
        foreach ($query->result() as $try) {
           $output .= "$try->lmr_lat_seconds";
        }
        $data['output'] = $output;
    }
        echo json_encode($data);
    }

    public function addipafphysicalreport()
    {
        $rel_data1 = $this->input->post('tblphysicalmeasures');
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('gencode',true),
            'physical_code '    => $this->input->post('physical_code',true),
            // 'physical_month '    => $this->input->post('phyquartersmonth',true),
            'physical_year '      => $this->input->post('phyquarteryear2',true),
            // 'physical_quarter '     => $this->input->post('phyquarter',true),
            'physical_progactivityproj '     => $this->input->post('progactproj',true),
            'physical_cost '     => str_replace(',','',$this->input->post('physicalcost',true)),
            // 'physical_performance_measure'         => $this->input->post('physicalpermeasure'),
            // 'physical_target'         => str_replace(',','',$this->input->post('physicaltarget')),
            // 'physical_accom'         => str_replace(',','',$this->input->post('physicalaccomplishment')),
            // 'physical_variance'         => str_replace(',','',$this->input->post('physicalvariance')),
            'physical_remarks'         => $this->input->post('physicalremarks'),
            'physical_mfo_file'         => $this->input->post('old_mfofile'),
            'date_created'       =>  date("Y-m-d"),
            // 'financial_targets'         => str_replace(',','',$this->input->post('financialtarget')),
            // 'financial_accomp'         => str_replace(',','',$this->input->post('financialaccomplishment')),
            // 'financial_variance'         => str_replace(',','',$this->input->post('financialvariance')),
            // 'financial_percentage'         => $this->input->post('financialvariancepercent'),
            'utilization_file'         => $this->input->post('approveutilization_span'),
            'bar1_file'         => $this->input->post('far4file_span'),
            'physical_indicator' => $this->input->post('physical_perindicator'),
            'physical_quantity' => str_replace(',','',$this->input->post('pap_quantity')),
        ];
            $query = $this->pamain_model->insertPhysicalReport($postDataImage,$rel_data1);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function addipafphysicaltargetandaccom()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('phyfinanphy-gencode',true),
            'physical_code '    => $this->input->post('phyfinanphy-gencode2',true),
            'id_physical_pap'         => $this->input->post('phyfinanphy-papid'),
            'physical_target_month '    => $this->input->post('phyquartersmonth',true),
            'physical_target_year '      => $this->input->post('phyfinanphy-years',true),
            'physical_target_quarter '     => $this->input->post('phyquarter',true),
            'physical_target_quantity'         => str_replace(',','',$this->input->post('physicaltarget')),
            'physical_target_accomp'         => str_replace(',','',$this->input->post('physicalaccomplishment')),
            'physical_target_variance'         => str_replace(',','',$this->input->post('physicalvariance')),
            'physical_cost_target'         => str_replace(',','',$this->input->post('financialtarget')),
            'physical_cost_accomplishment'         => str_replace(',','',$this->input->post('financialaccomplishment')),
            'physical_cost_variance'         => str_replace(',','',$this->input->post('financialvariance')),
        ];
            $query = $this->pamain_model->insertphysandfinancialtargetaccom($postDataImage);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function addipafphysicalfinancialreport()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('gencode',true),
            'physical_code '    => $this->input->post('physical_code',true),
            'pap_year'      => $this->input->post('phyquarteryear2',true),
            'pap_title'      => $this->input->post('progactproj',true),
            'pap_wfp_file'      => $this->input->post('old_mfofile',true),
            'pap_bar1_file'      => $this->input->post('far4file_span',true),
            'pap_utilization_file'      => $this->input->post('approveutilization_span',true),
            'pap_remarks'      => $this->input->post('physicalremarks',true),
            'pap_quantity'      => $this->input->post('pap_quantity',true),
            'pap_cost'      => str_replace(',','',$this->input->post('physicalcost',true)),
            'pap_meoco'      => $this->input->post('pap_moeco',true),
            'pap_indicator'      => $this->input->post('physical_perindicator',true),

        ];
            $query = $this->pamain_model->insertphysfinancialreps($postDataImage);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function addipafphysicalfinancialreport_modal()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('phyfinrep-gencode',true),
            'physical_code '    => $this->input->post('phyfinrep-gencode2',true),
            'pap_year'      => $this->input->post('phyfinrep-year',true),
            'pap_title'      => $this->input->post('add-progactproj',true),
            'pap_remarks'      => $this->input->post('add-physicalremarks',true),
            'pap_quantity'      => $this->input->post('add-pap_quantity',true),
            'pap_cost'      => str_replace(',','',$this->input->post('add-physicalcost',true)),
            'pap_meoco'      => $this->input->post('add-pap_moeco',true),
            'pap_indicator'      => $this->input->post('add-physical_perindicator',true),
            'pap_id_title'      => $this->input->post('phyfinrep-id',true),

        ];
            $query = $this->pamain_model->insertphysfinancialreps($postDataImage);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function addipafprevannualincome()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('gencode',true),
            'previncome_year '      => $this->input->post('prevYear',true),
            'prev_annualincome '      => str_replace(',','',$this->input->post('prevAnnualIncome',true)),
            'prev_incdep_agdb '      => str_replace(',','',$this->input->post('incomedepAGDB',true)),
            'riadeposit_fileprev '      => $this->input->post('old_riadepositfileprev',true),
            'sagfbtr_fileprev '      => $this->input->post('old_sagfbtrfileprev',true),
            'previncome_remarks '      => $this->input->post('prevAnnualIncomeremarks',true),
            'prev_startingbalance '      => str_replace(',','',$this->input->post('prevstartingbalance',true)),
            'date_created'       =>  date("Y-m-d")
        ];
            $query = $this->pamain_model->insertprevAnnualIncome($postDataImage);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function fetchprevyearincome(){
        $year = $this->input->post('year');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getallyearprevactualincome($year,$codegens);

        if (!empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchstartingbalances(){
        $year = $this->input->post('year');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getallyearstartingbalances($year,$codegens);

        if (!empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchactualincomeyearselected(){
        $year = $this->input->post('year');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getallyearactualincome($year,$codegens);

        if (!empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchPrevactualIncome()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallprevactualincomes($codegens);
        foreach($data as $row):?>

            <tr id="<?php echo $row->id_previncome; ?>" class="trows">
                <td><?php echo $row->previncome_year; ?></th>
                <td style="text-align:right;"><?php echo number_format($row->prev_annualincome,2); ?></th>
                <td style="text-align:right;"><?php echo number_format($row->prev_startingbalance,2); ?></th>
                <td style="text-align:right;" class="hide"><?php echo number_format($row->prev_incdep_agdb,2); ?></th>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit_prev/').$row->riadeposit_fileprev ?>"><?php echo $row->riadeposit_fileprev ?></a></td>
                <td class="hide"><?php echo $row->riadeposit_fileprev?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf_prev/').$row->sagfbtr_fileprev ?>"><?php echo $row->sagfbtr_fileprev ?></a></td>
                <td class="hide"><?php echo $row->sagfbtr_fileprev?></td>
                <td class="hide"><?php echo $row->previncome_remarks?></td>
                <td style="text-align:right;"><?php echo number_format(($row->prev_annualincome + $row->prev_startingbalance)*0.75,2); ?></th>
                <td style="text-align:right;"><?php echo number_format(($row->prev_annualincome + $row->prev_startingbalance)*0.25,2); ?></th>
                <td>
                    <button type="button" value="<?php echo $row->id_previncome;?>" class="btn btnbtn btn-info btn-xs" onclick="editprevIncome(this);">Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeprevincomeyear" data-id="<?php echo $row->id_previncome ?>" title="Remove">Remove</button>
                    <input type="hidden" id="preactinc<?php echo $row->id_previncome ?>" value="<?php echo $row->previncome_year ?>" />
                </td>
            </tr>
        <?php endforeach;
    }

    public function fetchactualIncome2()
    {
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallInitactualincomes($codegens);



        $othertotal = 0;
        $donatetotal = 0;
        $othertotal2 = 0;
        $fpdtotal = 0;
        $sbtotal = 0;
        $sbid = 0;
        ?>


        <?php
        foreach($data as $row):
            $years = $row->income_date_year;
            $data2 = $this->pamain_model->getallInitactualincomesOthers($codegens,$years);
            $data3 = $this->pamain_model->getallInitactualincomesDonation($codegens,$years);
            $data4 = $this->pamain_model->getallInitactualincomesOthers2($codegens,$years);
            $data5 = $this->pamain_model->getallInitactualincomesfinespenaltydmg($codegens,$years);
            $data6 = $this->pamain_model->getallInitactualincomesstartingbalance($codegens,$years);
            $data7 = $this->pamain_model->getallInitactualincomesstartingbalancenotbyyear($codegens,$years);

            ?>
            <?php foreach($data2 as $row2):
                $othertotal = $row2->sumother;
            ?>
            <?php endforeach; ?>

            <?php foreach($data3 as $row3):
                $donatetotal = $row3->sumdonate;
                ?>
            <?php endforeach; ?>

            <?php foreach($data4 as $row4):
                $othertotal2 = $row4->sumother2;
                ?>
            <?php endforeach; ?>
            <?php foreach($data5 as $row5):
                $fpdtotal = $row5->sumfpd;
                ?>
            <?php endforeach; ?>

            <tr id="<?php echo $row->id_source_income; ?>" class="trows">
                <td><?php echo $row->income_date_year; ?></td>
                <td style="text-align:right;"><?php echo number_format($row->sumentrance+$othertotal+$donatetotal+$othertotal2+$fpdtotal,2); ?></td>
                <td style="text-align:right;">
                    <?php foreach($data6 as $row6):
                        echo number_format($row6->income_sb_amount,2);
                        ?>
                    <?php endforeach; ?>
                </td>
                <td class="hidden" style="text-align:right;">
                    <?php foreach($data6 as $rodi):
                        echo $rodi->id_startingbalance;
                        ?>
                    <?php endforeach; ?>
                </td>
                <td style="text-align:right;"><?php echo number_format(($row->sumentrance+$othertotal+$donatetotal+$othertotal2+$fpdtotal)*0.75,2); ?></td>
                <td style="text-align:right;"><?php echo number_format(($row->sumentrance+$othertotal+$donatetotal+$othertotal2+$fpdtotal)*0.25,2); ?></td>
                <td class="hidden"><?php echo $row->id_source_income; ?></td>
                <td class="hidden"><?php echo $row->generatedcode; ?></td>
                <!-- <td class="hidden"><?php echo $row->income_gencode; ?></td> -->
                <!-- <td class="hidden"><?php echo $row->income_sb_amount; ?></td> -->
                <!-- <td class="hidden"><?php echo $row->income_sb_remarks; ?></td> -->
                <td>
                    <button type="button" value="<?php echo $row->income_date_year;?>" class="btn btnbtn btn-info btn-xs" onclick="addstartingbalanceform(this);">Edit Starting Balance </button>
                </td>
            </tr>
        <?php endforeach;
    }

    public function fetchactualincomedate(){
        $month = $this->input->post('month');
        $day = $this->input->post('day');
        $year = $this->input->post('year');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getalldateactualincome($codegens,$month,$day,$year);

        if (!empty($month) || !empty($day) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchcertificateuploadbymonthly(){
        $month = $this->input->post('month');
        $year = $this->input->post('year');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getalldatamonthlycertificateupload($codegens,$month,$year);

        if (!empty($month) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchcertificateuploadbyweekly(){
        $vdate = $this->input->post('vdate');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getalldataweeklycertificateupload($codegens,$vdate);

        if (!empty($vdate)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchcertificateuploadbydaily(){
        $vdate = $this->input->post('vdate');
        $codegens = $this->input->post('code');
        $data = $this->pamain_model->getalldatadailycertificateupload($codegens,$vdate);

        if (!empty($vdate)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select Year!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function insertcertificateMonthly()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'certificate_date_month' => $this->input->post('certi_month1',true),
            'certificate_date_year' => str_replace(',','',$this->input->post('certi_year1',true)),
            'certificate_file_paria' => $this->input->post('old_riadepositfile',true),
            'certificate_file_sagf' => $this->input->post('old_sagfbtrfile',true),
            'certificate_remarks' => $this->input->post('certi_remarks1',true),
            'date_upload' => $now,
        ];
                $query = $this->pamain_model->createcertificatemonthly($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchcertificatebyMonthly(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcertificatebyMonth($codegens);
        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_certificate_monthly ; ?>" class="trow">
                <td><?php echo (!empty($row->certificate_date_month)?$row->month." ":"").(!empty($row->certificate_date_year)?$row->certificate_date_year:""); ?></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit/').$row->certificate_file_paria ?>"><?php echo $row->certificate_file_paria ?></a></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf/').$row->certificate_file_sagf ?>"><?php echo $row->certificate_file_sagf ?></a></td>
                <td><?= $row->certificate_remarks ?></td>
                <td class="hidden"><?= $row->certificate_file_paria ?></td>
                <td class="hidden"><?= $row->certificate_file_sagf ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_certificate_monthly ;?>" class="btn btnbtn btn-info btn-xs" onclick="editCertificatemonthly(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removemonthlycertificate" data-id="<?php echo $row->id_certificate_monthly  ?>" title="Remove">Remove</button>
                    <input type="hidden" id="certiM1<?php echo $row->id_certificate_monthly ?>" value="<?php echo $row->certificate_date_month ?>" />
                    <input type="hidden" id="certiM2<?php echo $row->id_certificate_monthly ?>" value="<?php echo $row->certificate_date_year ?>" />
                </td>
            </tr>
            <?php
        }
    }

    public function deletemonthlyCertificate($id = null)
        {
        $sql = "DELETE FROM tblipafincomecertificate_monthly WHERE id_certificate_monthly = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_monthlycertificates()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-certi-id");
            $details = array('certificate_date_month' =>      $this->input->post('edit-certi_month1',true),
                             'certificate_date_year' =>     $this->input->post('edit-certi_year1',true),
                             'certificate_file_paria' =>     (empty($this->input->post('edit-new_riadepositfile',true))?$this->input->post('edit-old_riadepositfile',true):$this->input->post('edit-new_riadepositfile',true)),
                             'certificate_file_sagf' =>      (empty($this->input->post('edit-new_sagfbtrfile',true))?$this->input->post('edit-old_sagfbtrfile',true):$this->input->post('edit-new_sagfbtrfile',true)),
                             'certificate_remarks' =>      $this->input->post('edit-certi_remarks1',true)
                            );

            $this->pamain_model->updatemonthlycertificate($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function insertcertificateWeekly()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'certificate_daterange' => $this->input->post('datetimes',true),
            'certificate_file_paria' => $this->input->post('old_riadepositfile2',true),
            'certificate_file_sagf' => $this->input->post('old_sagfbtrfile2',true),
            'certificate_remarks' => $this->input->post('certi_remarks2',true),
            'date_upload' => $now,
        ];
                $query = $this->pamain_model->createcertificateweekly($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchcertificatebyWeekly(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcertificatebyWeek($codegens);
        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_certificate_weekly; ?>" class="trow">
                <td><?php echo (!empty($row->certificate_daterange)?$row->certificate_daterange:""); ?></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit/').$row->certificate_file_paria ?>"><?php echo $row->certificate_file_paria ?></a></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf/').$row->certificate_file_sagf ?>"><?php echo $row->certificate_file_sagf ?></a></td>
                <td><?= $row->certificate_remarks ?></td>
                <td class="hidden"><?= $row->certificate_file_paria ?></td>
                <td class="hidden"><?= $row->certificate_file_sagf ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_certificate_weekly ;?>" class="btn btnbtn btn-info btn-xs" onclick="editCertificateweekly(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeweeklycertificate" data-id="<?php echo $row->id_certificate_weekly  ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function deleteweeklyCertificate($id = null)
        {
        $sql = "DELETE FROM tblipafincomecertificate_weekly WHERE id_certificate_weekly = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_weeklycertificates()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-certi2-id");
            $details = array('certificate_daterange' =>      $this->input->post('edit-datetimes',true),
                             'certificate_file_paria' =>     (empty($this->input->post('edit-new_riadepositfile2',true))?$this->input->post('edit-old_riadepositfile2',true):$this->input->post('edit-new_riadepositfile2',true)),
                             'certificate_file_sagf' =>      (empty($this->input->post('edit-new_sagfbtrfile2',true))?$this->input->post('edit-old_sagfbtrfile2',true):$this->input->post('edit-new_sagfbtrfile2',true)),
                             'certificate_remarks' =>      $this->input->post('edit-certi_remarks2',true)
                            );

            $this->pamain_model->updateweeklycertificate($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_dailycertificates()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-certi3-id");
            $details = array('certificate_date' =>      $this->input->post('edit-datetimes2',true),
                             'certificate_file_paria' =>     (empty($this->input->post('edit-new_riadepositfile3',true))?$this->input->post('edit-old_riadepositfile3',true):$this->input->post('edit-new_riadepositfile3',true)),
                             'certificate_file_sagf' =>      (empty($this->input->post('edit-new_sagfbtrfile3',true))?$this->input->post('edit-old_sagfbtrfile3',true):$this->input->post('edit-new_sagfbtrfile3',true)),
                             'certificate_remarks' =>      $this->input->post('edit-certi_remarks3',true)
                            );

            $this->pamain_model->updatedailycertificate($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function insertcertificateDaily()
    {
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d H:i:s');
        $output = array();
        $data['data'] = (object)$postData = [
            'generatedcode' => $this->input->post('gencode',true),
            'certificate_date' => $this->input->post('datetimes2',true),
            'certificate_file_paria' => $this->input->post('old_riadepositfile3',true),
            'certificate_file_sagf' => $this->input->post('old_sagfbtrfile3',true),
            'certificate_remarks' => $this->input->post('certi_remarks3',true),
            'date_upload' => $now,
        ];
                $query = $this->pamain_model->createcertificatedaily($postData);
                // }
                if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added';
                }else{

                }
        echo json_encode($output);
    }

    public function fetchcertificatebyDaily(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallcertificatebyDay($codegens);
        foreach($data as $row){
            // if (!empty($row->id_visitors)) {
            ?>
             <tr id="<?php echo $row->id_certificate_daily; ?>" class="trow">
                <td><?php echo (!empty($row->certificate_date)?$row->certificate_date:""); ?></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit/').$row->certificate_file_paria ?>"><?php echo $row->certificate_file_paria ?></a></td>
                <td class=""><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf/').$row->certificate_file_sagf ?>"><?php echo $row->certificate_file_sagf ?></a></td>
                <td><?= $row->certificate_remarks ?></td>
                <td class="hidden"><?= $row->certificate_file_paria ?></td>
                <td class="hidden"><?= $row->certificate_file_sagf ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_certificate_daily ;?>" class="btn btnbtn btn-info btn-xs" onclick="editCertificatedaily(this);">
                    Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removedailycertificate" data-id="<?php echo $row->id_certificate_daily  ?>" title="Remove">Remove</button>
                </td>
            </tr>
            <?php
        }
    }

    public function deletedailyCertificate($id = null)
        {
        $sql = "DELETE FROM tblipafincomecertificate_daily WHERE id_certificate_daily = '$id'";
            if ($this->db->query($sql)) {

                $output['status'] = 'success';
                $output['message'] = 'Successfully removed';
            } else {
                $output['status'] = 'error';
                $output['message'] = 'Something went wrong in deleting the data';
            }
              echo json_encode($output);
        }

    public function update_prevAnnualIncome()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("previncome-id");
            $details = array('prev_annualincome' =>      str_replace(',','',$this->input->post('edit-prevAnnualIncome',true)),
                             'prev_startingbalance' =>      str_replace(',','',$this->input->post('edit-prevstartingbalance',true)),
                             'prev_incdep_agdb' =>      str_replace(',','',$this->input->post('edit-incomedepAGDB',true)),
                             'previncome_remarks' =>      $this->input->post('edit-prevAnnualIncomeremarks',true),
                             'riadeposit_fileprev' => (!empty($this->input->post('edit-old_riadepositfileprev'))?$this->input->post('edit-old_riadepositfileprev'):$this->input->post('edit-disriadepositfileprev')),
                             'sagfbtr_fileprev'  => (!empty($this->input->post('edit-old_sagfbtrfileprev'))?$this->input->post('edit-old_sagfbtrfileprev'):$this->input->post('edit-dissagfbtrfileprev')));

            $this->pamain_model->updatequeryprevannualinc($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function fetchsameyearmonthandpcode(){
        $codegens = $this->input->post('idCode');
        $month = $this->input->post('idMonth');
        $year = $this->input->post('idYear');


        $data = $this->pamain_model->getAlldatawhensameyrmonthid($year,$month,$codegens);

        if (!empty($month) || !empty($year)) {
            if (!empty($data)) {
               $message = 'Not Empty';
               $message2 = 'Not Empty';
            }else if (empty($data)) {
                $message = 'Empty';
                $message2 = 'Empty';
            }
        } else {
            $message = 'no';
            $message2 = "Select species!";
        }

        $output['status'] = $message;
        $output['message'] = $message2;
        echo json_encode($output);
    }

    public function fetchphysicalreports(){
        $codegens = $this->input->post('codegens');
        //
        $yearheader = $this->pamain_model->getyeartoheader($codegens);
        foreach($yearheader as $yr):?>
            <tr style="background-color: #99ccff;text-align: left;text-transform: uppercase;">
              <th><?php echo $yr->physical_year?></th>
               <th colspan="77"></th>
            </tr>
            <?php
                $yrid = $yr->physical_year;
                $data = $this->pamain_model->getallyearsphysical($codegens,$yrid);
                foreach($data as $row):
                    $pcode = $row->physical_code;
                    $pyear = $row->physical_year;

            ?>
            <tr id="<?php echo $row->id_ipaf_physical; ?>" class="trow">
                <td class="hide"><?php echo $row->generatedcode ?></td>
                <td class="hide"><?php echo $row->physical_code ?></td>
                <td class="hide"><?php echo $row->id_ipaf_physical ?></td>
                <td class="hide"><?php echo $row->physical_year ?></td>
                <td class="hide"><?php echo $row->physical_progactivityproj ?></td>
                <td style="border:1px dotted #000 !important"><?php echo $row->physical_progactivityproj."<br>"?>
                    <button type="button" value="<?php echo $row->id_ipaf_physical;?>" class="btn btnbtn btn-info btn-xs" onclick="editPhysicalFinancialReportMain(this);">Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removephyfinanrepaccom" data-id="<?php echo $row->physical_code ?>" title="Remove">Remove</button>
                    <button type="button" value="<?php echo $row->id_ipaf_physical;?>" class="btn btnbtn btn-warning btn-xs" onclick="addphytargets(this);">Add/view Physical and Financial Target and Accomplishment </button>
                    <input type="hidden" id="phyrepmonth<?php echo $row->id_ipaf_physical ?>" value="<?php echo $row->physical_month ?>" />
                    <input type="hidden" id="phyrepyear<?php echo $row->id_ipaf_physical ?>" value="<?php echo $row->physical_year ?>" />
                    <input type="hidden" id="phyrepqtr<?php echo $row->id_ipaf_physical ?>" value="<?php echo $row->physical_quarter ?>" />
                </td>
                <td><?php echo $row->physical_indicator ?></td>
                <td style="text-align:right"><?php echo number_format($row->physical_cost,2)?></td>
                <td style="text-align:right"><?php echo number_format($row->physical_quantity)?></td>
                <td class="hide"><?php echo $row->physical_remarks ?></td>
                <td class="hide"><?php echo "CY ".$row->physical_year ?></td>
                <td class="hide"><?php echo $row->month; ?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/income_mfo_file/').$row->physical_mfo_file ?>"><?php echo $row->physical_mfo_file ?></a></td>
                <td class="hide"><?php echo $row->physical_mfo_file?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/physical_bar1_file/').$row->bar1_file ?>"><?php echo $row->bar1_file ?></a></td>
                <td class="hide"><?php echo $row->bar1_file?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/physical_utilization_file/').$row->utilization_file ?>"><?php echo $row->utilization_file ?></a></td>
                <td class="hide"><?php echo $row->utilization_file?></td>
                <?php
                    $pJan = $this->pamain_model->getallphyrepJan($pcode,$pyear);
                    $pFeb = $this->pamain_model->getallphyrepFeb($pcode,$pyear);
                    $pMar = $this->pamain_model->getallphyrepMar($pcode,$pyear);
                    $p1Q = $this->pamain_model->getallphyrep1q($pcode,$pyear);
                    $a1Q = $this->pamain_model->getallphyacc1q($pcode,$pyear);

                    $pApr = $this->pamain_model->getallphyrepApr($pcode,$pyear);
                    $pMay = $this->pamain_model->getallphyrepMay($pcode,$pyear);
                    $pJun = $this->pamain_model->getallphyrepJun($pcode,$pyear);
                    $p2Q = $this->pamain_model->getallphyrep2q($pcode,$pyear);
                    $a2Q = $this->pamain_model->getallphyacc2q($pcode,$pyear);

                    $pJul = $this->pamain_model->getallphyrepJul($pcode,$pyear);
                    $pAug = $this->pamain_model->getallphyrepAug($pcode,$pyear);
                    $pSep = $this->pamain_model->getallphyrepSep($pcode,$pyear);
                    $p3Q = $this->pamain_model->getallphyrep3q($pcode,$pyear);
                    $a3Q = $this->pamain_model->getallphyacc3q($pcode,$pyear);

                    $pOct = $this->pamain_model->getallphyrepOct($pcode,$pyear);
                    $pNov = $this->pamain_model->getallphyrepNov($pcode,$pyear);
                    $pDec = $this->pamain_model->getallphyrepDec($pcode,$pyear);
                    $p4Q = $this->pamain_model->getallphyrep4q($pcode,$pyear);
                    $a4Q = $this->pamain_model->getallphyacc4q($pcode,$pyear);

                    $ptotal = $this->pamain_model->getalltotalannualphyrep($pcode,$pyear);
                    $atotal = $this->pamain_model->getalltotalannualphyaccom($pcode,$pyear);
                    $peratotal = $this->pamain_model->getalltotalannualpercentagephysicalreport($pcode,$pyear);

                    $fJan = $this->pamain_model->getallfinrepJan($pcode,$pyear);
                    $fFeb = $this->pamain_model->getallfinrepFeb($pcode,$pyear);
                    $fMar = $this->pamain_model->getallfinrepMar($pcode,$pyear);
                    $f1Q = $this->pamain_model->getalfinyrep1q($pcode,$pyear);
                    $fa1Q = $this->pamain_model->getallfinacc1q($pcode,$pyear);
                    $fApr = $this->pamain_model->getallfinrepApr($pcode,$pyear);
                    $fMay = $this->pamain_model->getallfinrepMay($pcode,$pyear);
                    $fJun = $this->pamain_model->getallfinrepJun($pcode,$pyear);
                    $f2Q = $this->pamain_model->getalfinyrep2q($pcode,$pyear);
                    $fa2Q = $this->pamain_model->getallfinacc2q($pcode,$pyear);
                    $fJul = $this->pamain_model->getallfinrepJul($pcode,$pyear);
                    $fAug = $this->pamain_model->getallfinrepAug($pcode,$pyear);
                    $fSep = $this->pamain_model->getallfinrepSep($pcode,$pyear);
                    $f3Q = $this->pamain_model->getalfinyrep3q($pcode,$pyear);
                    $fa3Q = $this->pamain_model->getallfinacc3q($pcode,$pyear);
                    $fOct = $this->pamain_model->getallfinrepOct($pcode,$pyear);
                    $fNov = $this->pamain_model->getallfinrepNov($pcode,$pyear);
                    $fDec = $this->pamain_model->getallfinrepDec($pcode,$pyear);
                    $f4Q = $this->pamain_model->getalfinyrep4q($pcode,$pyear);
                    $fa4Q = $this->pamain_model->getallfinacc4q($pcode,$pyear);

                    $ftotal = $this->pamain_model->getalltotalannualfinrep($pcode,$pyear);
                    $fatotal = $this->pamain_model->getalltotalannualfinaccom($pcode,$pyear);
                ?>
                <td class="">
                    <?php foreach($pJan as $pjan): echo $pjan->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pFeb as $pfeb): echo $pfeb->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pMar as $pmar): echo $pmar->physical_target_quantity; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($p1Q as $pq1): echo $pq1->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pApr as $papr): echo $papr->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pMay as $pmay): echo $pmay->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pJun as $pjun): echo $pjun->physical_target_quantity; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($p2Q as $pq2): echo $pq2->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pJul as $pjul): echo $pjul->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pAug as $paug): echo $paug->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pSep as $psep): echo $psep->physical_target_quantity; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($p3Q as $pq3): echo $pq3->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pOct as $poct): echo $poct->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pNov as $pnov): echo $pnov->physical_target_quantity; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pDec as $pdec): echo $pdec->physical_target_quantity; endforeach;?>
                </td>
                <td style="color:red;">
                    <?php foreach($p4Q as $pq4): echo $pq4->totalpt; endforeach;?>
                </td>
                <td style="color:red; font-weight: 700; text-align: right;">
                    <?php foreach($ptotal as $pt): echo $pt->annualphyrep; endforeach;?>
                </td>
                <!-- END PHYSICAL TARGET -->

                <!-- PHYSICAL ACCOMPLISHMENT -->

                <td class="">
                    <?php foreach($pJan as $pjan): echo $pjan->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pFeb as $pfeb): echo $pfeb->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pMar as $pmar): echo $pmar->physical_target_accomp; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($a1Q as $aq1): echo $aq1->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pApr as $papr): echo $papr->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pMay as $pmay): echo $pmay->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pJun as $pjun): echo $pjun->physical_target_accomp; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($a2Q as $aq2): echo $aq2->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pJul as $pjul): echo $pjul->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pAug as $paug): echo $paug->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pSep as $psep): echo $psep->physical_target_accomp; endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($a3Q as $aq3): echo $aq3->totalpt; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pOct as $poct): echo $poct->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pNov as $pnov): echo $pnov->physical_target_accomp; endforeach;?>
                </td>
                <td class="">
                    <?php foreach($pDec as $pdec): echo $pdec->physical_target_accomp; endforeach;?>
                </td>
                <td style="color:red;">
                    <?php foreach($a4Q as $aq4): echo $aq4->totalpt; endforeach;?>
                </td>
                <td style="color:red; font-weight: 700; text-align: right;">
                    <?php foreach($atotal as $at): echo $at->annualphyaccom; endforeach;?>
                </td>
                <td style="color:red; font-weight: 700; text-align: right;">
                    <?php foreach($peratotal as $pat): echo number_format(($pat->annualphyaccom / $pat->annualphytar)*100,2)."%"; endforeach;?>
                </td>
                <!-- END PHYSICAL ACCOMPLISHMENT -->

                <!-- FINANCIAL TARGET -->
                <td class="">
                    <?php foreach($fJan as $fjan): echo number_format($fjan->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fFeb as $ffeb): echo number_format($ffeb->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fMar as $fmar): echo number_format($fmar->physical_cost_target,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($f1Q as $fq1): echo number_format($fq1->totalft,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fApr as $f4): echo number_format($f4->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fMay as $f5): echo number_format($f5->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fJun as $f6): echo number_format($f6->physical_cost_target,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($f2Q as $fq2): echo number_format($fq2->totalft,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fJul as $f7): echo number_format($f7->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fAug as $f8): echo number_format($f8->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fSep as $f9): echo number_format($f9->physical_cost_target,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($f3Q as $fq3): echo number_format($fq3->totalft,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fOct as $f10): echo number_format($f10->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fNov as $f11): echo number_format($f11->physical_cost_target,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fDec as $f12): echo number_format($f12->physical_cost_target,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($f4Q as $fq4): echo number_format($fq4->totalft,2); endforeach;?>
                </td>
                <td style="color:red; font-weight: 700; text-align: right;">
                    <?php foreach($ftotal as $ft): echo number_format($ft->annualfinrep,2); endforeach;?>
                </td>
                <!-- END FINANCIAL TARGET -->

                <!-- FINANCIAL ACCOMPLISHMENT -->
                <td class="">
                    <?php foreach($fJan as $fjan): echo number_format($fjan->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fFeb as $ffeb): echo number_format($ffeb->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fMar as $fmar): echo number_format($fmar->physical_cost_accomplishment,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($fa1Q as $fq1): echo number_format($fq1->totalfa,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fApr as $f4): echo number_format($f4->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fMay as $f5): echo number_format($f5->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fJun as $f6): echo number_format($f6->physical_cost_accomplishment,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($fa2Q as $fq2): echo number_format($fq2->totalfa,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fJul as $f7): echo number_format($f7->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fAug as $f8): echo number_format($f8->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fSep as $f9): echo number_format($f9->physical_cost_accomplishment,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($fa3Q as $fq3): echo number_format($fq3->totalfa,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fOct as $f10): echo number_format($f10->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fNov as $f11): echo number_format($f11->physical_cost_accomplishment,2); endforeach;?>
                </td>
                <td class="">
                    <?php foreach($fDec as $f12): echo number_format($f12->physical_cost_accomplishment,2); endforeach;?>
                </td>
                 <td style="color:red;">
                    <?php foreach($fa4Q as $fq4): echo number_format($fq4->totalfa,2); endforeach;?>
                </td>
                <td style="color:red; font-weight: 700; text-align: right;">
                    <?php foreach($fatotal as $fa): echo number_format($fa->annualfinaccom,2); endforeach;?>
                </td>
            </tr>

        <?php
            endforeach;
        endforeach;
    }

    public function fetchphysicalandfinancialreportsdata(){
        $codegens = $this->input->post('codegens');
        $codegens2 = $this->input->post('codegens2');
        $papid = $this->input->post('papid');
        $data = $this->pamain_model->getallphysicalfinancialreportdata($codegens,$codegens2,$papid);

        foreach($data as $row):
            $code2=$row->physical_code;
            ?>
            <tr id="<?php echo $row->id_physical_target; ?>">
                <td><?php echo $row->month ?></td>
                <td class="hidden"><?php echo $row->month." ".$row->physical_target_year ?></td>
                <td><?php echo $row->physical_target_quantity ?></td>
                <td><?php echo $row->physical_target_accomp ?></td>
                <td><?php echo $row->physical_target_variance ?></td>
                <td><?php echo number_format($row->physical_cost_target,2) ?></td>
                <td><?php echo number_format($row->physical_cost_accomplishment,2) ?></td>
                <td><?php echo number_format($row->physical_cost_variance,2) ?></td>
                <td class="hidden"><?php echo $row->generatedcode ?></td>
                <td>
                    <button type="button" value="<?php echo $row->id_physical_target;?>" class="btn btnbtn btn-info btn-xs" onclick="editPhysicalFinancialReport(this);">Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removephyfinanrepaccom" data-id="<?php echo $row->id_physical_target ?>" title="Remove">Remove</button>
            </tr>

            <?php
            endforeach;
    }

    public function update_physicalandfinancialreportsdata()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-phyfinanphy-id");
            $details = array('physical_target_quantity' =>      str_replace(',','',$this->input->post('edit-physicaltarget',true)),
                             'physical_target_accomp' =>      str_replace(',','',$this->input->post('edit-physicalaccomplishment',true)),
                             'physical_target_variance' =>      str_replace(',','',$this->input->post('edit-physicalvariance',true)),
                             'physical_cost_target' =>      str_replace(',','',$this->input->post('edit-financialtarget',true)),
                             'physical_cost_accomplishment' =>      str_replace(',','',$this->input->post('edit-financialaccomplishment',true)),
                             'physical_cost_variance' =>      str_replace(',','',$this->input->post('edit-financialvariance',true)));

            $this->pamain_model->updatequeryphyfinaccomtart($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_physicalandfinancialreportsdataMain()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-phyfin-id");
            $details = array('physical_year' =>      str_replace(',','',$this->input->post('edit-phyquarteryear2',true)),
                             'physical_progactivityproj' =>     $this->input->post('edit-progactproj',true),
                             'physical_indicator' =>      $this->input->post('edit-physical_perindicator',true),
                             'physical_quantity' =>      str_replace(',','',$this->input->post('edit-physicalcost',true)),
                             'physical_cost' =>      str_replace(',','',$this->input->post('edit-pap_quantity',true)),
                             'physical_mfo_file' =>     (empty($this->input->post('edit-approveutilization_span',true))?$this->input->post('edit-approveutilization_old',true):$this->input->post('edit-approveutilization_span',true)),
                             'utilization_file' =>      (empty($this->input->post('edit-mfofile_span',true))?$this->input->post('edit-mfofile_old',true):$this->input->post('edit-mfofile_span',true)),
                             'bar1_file' =>      (empty($this->input->post('edit-far4file_span',true))?$this->input->post('edit-far4file_old',true):$this->input->post('edit-far4file_span',true)),
                             'physical_remarks' =>      $this->input->post('edit-physicalremarks',true)
                            );

            $this->pamain_model->updatequeryphyfinaccomtartMAIN($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }


    public function update_startingbalanceMain()
    {
        if($this->session->userdata('email')){
            $id = $this->input->post("edit-sbi-ids");
                $details = array('income_sb_amount' =>      str_replace(',','',$this->input->post('edit-prevstartingbalance2',true)),
                             'income_sb_remarks' =>      str_replace(',','',$this->input->post('edit-prevstartingbalanceremarks',true)));
            $this->pamain_model->updatequerystartbalance($details,$id);
                echo json_encode(['result' => 'things you want to show']);

        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function Addbstrtingblnce()
    {
        $data['mainproj'] = (object)$postDataImage = [
                    'generatedcode'    => $this->input->post('edit-sbi-gencode',true),
                    'income_sb_year'    => $this->input->post('edit-sbi-year',true),
                    'income_sb_amount'    => str_replace(',','',$this->input->post('edit-prevstartingbalance2',true)),
                    'income_sb_remarks'    => str_replace(',','',$this->input->post('edit-prevstartingbalanceremarks',true)),
                ];

        $query = $this->pamain_model->insertstartingbalances($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Starting Balance';
                }
        echo json_encode($output);
    }


    public function fetchphysicalfinancialreports(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallphysicalfinancialreport($codegens);
        $datagroupYear = $this->pamain_model->getallphysicalfinancialreport_groupbyYear($codegens);
        foreach($datagroupYear as $row2):?>
            <tr style="background-color: #99ccff;text-align: left;text-transform: uppercase;">
                <th><?php echo $row2->pap_year?></th>
                <th colspan="9"></th>
            </tr>
            <?php

            foreach($data as $row): ?>
                <tr>
                    <td><?php echo "<b>".$row->pap_title."</b>" ?></td>
                </tr>
                <?php
                $codeid = $row->id_pap;
                $datagroupTitle = $this->pamain_model->getallphysicalfinancialreport_sub($codeid);?>
                <?php
                    if($row->pap_year == $row2->pap_year):
                        foreach($datagroupTitle as $rowgt):
                            if ($row->id_pap == $rowgt->pap_id_title):
                ?>
                <tr>
                    <td><?php echo $rowgt->pap_title ?><br><button type="button" value="<?php echo $rowgt->id_pap;?>" class="btn btnbtn btn-info btn-xs" onclick="addsubindicator(this);">Add sub PAP</button></td>
                </tr>

            <?php
                    endif;
                    endforeach; ?>
        <!-- <tr>

            <td><?php echo ($row->pap_id_title==0?"<b>".$row->pap_title."</b>":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;".$row->pap_title); ?><br><button type="button" value="<?php echo $row->id_pap;?>" class="btn btnbtn btn-info btn-xs" onclick="addsubindicator(this);">Add sub PAP</button></td>
            <td><?php echo $row->pap_indicator; ?></td>
            <td><?php echo number_format($row->pap_cost,2); ?></td>
            <td><?php echo $row->pap_quantity; ?></td>
            <td></td>
            <td></td>
            <td class="hide"><?php echo $row->pap_year; ?></td>

            <td></td>
        </tr> -->
        <input type="hidden" id="papcodes1<?php echo $row->id_pap ?>" value="<?php echo $row->generatedcode ?>" />
        <input type="hidden" id="papcodes2<?php echo $row->id_pap ?>" value="<?php echo $row->physical_code ?>" />
        <input type="hidden" id="papyear<?php echo $row->id_pap ?>" value="<?php echo $row->pap_year ?>" />

    <?php
        endif;
        endforeach;
        endforeach;
    }


    public function AddbperformancemeaEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('phyrep-gencode',true),
            'physical_code'    => $this->input->post('phyrep-gencode2',true),
            'perfomance_measure'    => $this->input->post('edit-physicalpermeasure',true),
        ];

        $query = $this->pamain_model->insertperformeas($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Performance Measure';
                }
        echo json_encode($output);
    }

    public function fetchphysicalPerformancemeasures(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallperformacemeasuressIn($codegens);
            foreach($data as $cc): ?>
                <div id="divdevelopmentedit<?php echo $cc->id_performance_measure?>" class="showdata">
                    <div class="col-xs-12 container-boxes">
                        <div class="row-boxes">
                            <?php echo (!empty($cc->perfomance_measure)?$cc->perfomance_measure:""); ?>
                            <button type="button" class="btn btn-danger btn-xs removeperformacemeasures" id="<?php echo $cc->id_performance_measure ?>" data-id="<?php echo $cc->id_performance_measure ?>">Remove</button>
                        </div>
                    </div>
                </div>
    <?php endforeach;
    }

    public function update_physicalReport(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        $gencode = $this->input->post("phyrep-gencode");
        if($this->session->userdata('email')){
            $id = $this->input->post("phyrep-id");
            $details = array('physical_month' => $this->input->post("edit-phyquartersmonth"),
                             'physical_year' => $this->input->post("edit-phyquarteryear2"),
                             'physical_quarter' => $this->input->post("edit-phyquarter"),
                             'physical_progactivityproj' => $this->input->post("edit-progactproj"),
                             'physical_cost' => $this->input->post("edit-physicalcost"),
                             'physical_performance_measure' => $this->input->post("edit-physicalpermeasure"),
                             'physical_target' => str_replace(',','',$this->input->post("edit-physicaltarget")),
                             'physical_accom' => str_replace(',','',$this->input->post("edit-physicalaccomplishment")),
                             'physical_variance' => str_replace(',','',$this->input->post("edit-physicalvariance")),
                             'physical_remarks' => $this->input->post("edit-physicalremarks"),
                             'date_updated' => date('Y-m-d'),
                             'physical_mfo_file' =>(empty($this->input->post('edit-current_mfofile'))?$this->input->post('edit-old_mfofile'):$this->input->post('edit-current_mfofile')),
                             'utilization_file' =>(empty($this->input->post('edit-approveutilization_span'))?$this->input->post('edit-approveutilization_old'):$this->input->post('edit-approveutilization_span')),
                             'bar1_file' => (empty($this->input->post('edit-far4file_span'))?$this->input->post('edit-far4file_old'):$this->input->post('edit-far4file_span')),
                             'financial_targets' => str_replace(',','',$this->input->post("edit-financialtarget")),
                             'financial_accomp' => str_replace(',','',$this->input->post("edit-financialaccomplishment")),
                             'financial_variance' => str_replace(',','',$this->input->post("edit-financialvariance"))
                         );
            $this->pamain_model->updatePhysicalReport($details,$id);
            echo json_encode(['result' => 'things you want to show']);
            // redirect('pasu/pamain/edit/'.$gencode);
            // echo "<script>alert('Successfully updated service.');</script>";
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function update_actualIncome(){
        date_default_timezone_set('Asia/Manila'); # add your city to set local time zone
        $now = date('Y-m-d');

        if($this->session->userdata('email')){
            $id = $this->input->post("actincome-id");
            $details = array('generatedcode '    => $this->input->post('actincome-gencode',true),
                            'income_gencode'    => $this->input->post('actincome-gencode2',true),
                            'income_date_month '    => $this->input->post('edit-phyquartermonth',true),
                            'income_date_year '      => $this->input->post('edit-phyquarteryear',true),
                            'income_date_day '      => $this->input->post('edit-phyquarteday',true),
                            'income_date_quarter '     => $this->input->post('edit-phyquarterincome',true),
                            'grant_source '     => $this->input->post('edit-ipafgrantfee_source',true),
                            'endowment_source '     => $this->input->post('edit-ipafendowmentfee_source',true),
                            'entrance_fee '     => str_replace(',','',$this->input->post('edit-ipafentrancefee',true)),
                            'facility_fee '     => str_replace(',','',$this->input->post('edit-ipaffacilityfee',true)),
                            'recreational_fee'         => str_replace(',','',$this->input->post('edit-ipafrecreationalfee')),
                            'resource_fee'         => str_replace(',','',$this->input->post('edit-ipafresourcefee')),
                            'sapa_fee'         => str_replace(',','',$this->input->post('edit-ipafsapafee')),
                            'moa_fee'         => str_replace(',','',$this->input->post('edit-ipafmoafee')),
                            'rsa_fee'         => str_replace(',','',$this->input->post('edit-ipafrsafee')),
                            'cla_fee'         => str_replace(',','',$this->input->post('edit-ipafclearancefee')),
                            // 'fines_fee'         => str_replace(',','',$this->input->post('edit-ipaffinesfee')),
                            'grant_fee'         => str_replace(',','',$this->input->post('edit-ipafgrantfee')),
                            'endowment_fee'         => str_replace(',','',$this->input->post('edit-ipafendowmentfee')),
                            // 'riadeposit_file'         => (!empty($this->input->post('edit-current_riadepositfile'))?$this->input->post('edit-current_riadepositfile'):$this->input->post('edit-old_riadepositfile')),
                            // 'sagfbtr_file'         => (!empty($this->input->post('edit-current_sagfbtrfile'))?$this->input->post('edit-current_sagfbtrfile'):$this->input->post('edit-old_sagfbtrfile')),
                            'date_updated'       =>  date("Y-m-d"));
            $this->pamain_model->updateactualincomer($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }

    public function deletePhysicalReps($id = null)
    {
            $sql1 = $this->db->where('id_ipaf_physical',$id)
                                            ->get('tblipaf_physical')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblipaf_physical WHERE id_ipaf_physical = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function mfofilesEdit()
    {
        if(isset($_FILES["edit-mfofile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/income_mfo_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-mfofile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function utilizationfiles()
    {
        if(isset($_FILES["approveutilization"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/physical_utilization_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('approveutilization'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function utilizationfilesEdit()
    {
        if(isset($_FILES["edit-approveutilization"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/physical_utilization_file';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-approveutilization'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function addipafactualincome()
    {
        $rel_data1 = $this->input->post('tabledonations');
        $rel_data2 = $this->input->post('tabledonationsotherincome');
        $rel_data3 = $this->input->post('tableothersourceincome');
        $rel_data4 = $this->input->post('tablefinespenaltyincome');

        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode '    => $this->input->post('gencode',true),
            'income_gencode '    => $this->input->post('incomegens-gencode',true),
            'income_date_month '    => $this->input->post('phyquartermonth',true),
            'income_date_day '      => $this->input->post('phyquarteday',true),
            'income_date_year '      => $this->input->post('phyquarteryear',true),
            'income_date_quarter '     => $this->input->post('phyquarterincome',true),
            'entrance_fee '     => str_replace(',','',$this->input->post('ipafentrancefee',true)),
            'facility_fee '     => str_replace(',','',$this->input->post('ipaffacilityfee',true)),
            'recreational_fee'         => str_replace(',','',$this->input->post('ipafrecreationalfee')),
            'resource_fee'         => str_replace(',','',$this->input->post('ipafresourcefee')),
            'sapa_fee'         => str_replace(',','',$this->input->post('ipafsapafee')),
            'moa_fee'         => str_replace(',','',$this->input->post('ipafmoafee')),
            'rsa_fee'         => str_replace(',','',$this->input->post('ipafrsafee')),
            'cla_fee'         => str_replace(',','',$this->input->post('ipafclearancefee')),
            'other_fee'         => str_replace(',','',$this->input->post('ipafincomeotherfee')),
            'fines_fee'         => str_replace(',','',$this->input->post('ipaffinesfee')),
            'grant_fee'         => str_replace(',','',$this->input->post('ipafgrantfee')),
            'endowment_fee'         => str_replace(',','',$this->input->post('ipafendowmentfee')),
            'other_donation_fees'         => str_replace(',','',$this->input->post('ipafotherincomesourcefee')),
            // 'riadeposit_file'         => $this->input->post('old_riadepositfile'),
            // 'sagfbtr_file'         => $this->input->post('old_sagfbtrfile'),
            'grant_source '     => $this->input->post('ipafgrantfee_source',true),
            'endowment_source '     => $this->input->post('ipafendowmentfee_source',true),
            // 'other_donation_fees'         => $this->input->post('minutesfile_span'),
            'date_create'       =>  date("Y-m-d")
        ];
            $query = $this->pamain_model->insertactualincome($postDataImage,$rel_data1,$rel_data2,$rel_data3,$rel_data4);
        if($query){
            $output['message'] = 'Add';
            $output['status'] = 'Successfully added';
        }
        echo json_encode($output);
    }

    public function fetchactualincomes3()
    {
        $codegens = $this->input->post('codegens');
        $datayear = $this->pamain_model->getallyears2($codegens);

        foreach($datayear as $row){
            $year=$row->income_date_year;
            $datamonth = $this->pamain_model->getallmonth2($codegens,$year);
            ?>
            <tr>
                <th colspan="10" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $row->income_date_year?></th>
            </tr>
                <?php
                    foreach($datamonth as $rowM){
                        // if($rowM->income_date_year == $row->income_date_year){
                 ?>
                    <tr>
                        <th colspan="10" style="background-color:;text-align: left;text-transform: uppercase;"><?php echo $rowM->month?></th>
                    </tr>
                <?php } ?>
        <?php
        }//endforeach $datayear as $row)
    }

    public function fetchactualincomes2()
    {
        $codegens = $this->input->post('codegens');
        $datayear = $this->pamain_model->getallyears2($codegens);
        $data = $this->pamain_model->getallactualincomes2($codegens);

        $t1=0;
        $t2=0;
        $t3=0;
        $t4=0;
        $t5=0;
        $t6=0;
        $t7=0;
        $t8=0;
        $t9=0;
        $t10=0;
        $t11=0;
        $t12=0;
        $t13=0;
        $t14=0;
        $gettotal1=0;
        $gettotal2=0;
        $gettotal3=0;
        $gettotal4=0;

        foreach($datayear as $row){
            $years = $row->income_date_year;
            $datasum1 = $this->pamain_model->getsumactualincomebyYr($codegens,$years);
            $datasum2 = $this->pamain_model->getsumactualincomeotherincomebyYr($codegens,$years);
            $datasum3 = $this->pamain_model->getsumothersourceCashDonatebyYr($codegens,$years);
            $datasum4 = $this->pamain_model->getsumothersourceOthersbyYr($codegens,$years);
            $datasum5 = $this->pamain_model->getsumfinesbyYr($codegens,$years);
            ?>
            <tr>
                <th colspan="10" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $row->income_date_year?></th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                        <?php
                        foreach($datasum2 as $rowsums2):
                            // if($row->income_date_year == $rowsums2->income_other_year):
                                $gettotal1= $rowsums2->sumnumber2;
                            // endif;
                        endforeach;
                        ?>
                        <?php
                        foreach($datasum1 as $rowsums):
                            // if($row->income_date_year == $rowsums->income_date_year):
                                echo number_format($rowsums->sumnumber1 + $gettotal1,2);
                                $gt1= $rowsums->sumnumber1 + $gettotal1;
                            // endif;
                        endforeach;
                        ?>
                </th>
                <th colspan="6" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                    <?php
                    foreach($datasum3 as $rowsums3):
                        // if($row->income_date_year == $rowsums3->income_donate_year):
                            $gettotal2= $rowsums3->sumnumber3;
                        // endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum4 as $rowsums4):
                        // if($row->income_date_year == $rowsums4->otherincome_other_year):
                            $gettotal3= $rowsums4->sumnumber4;
                        // endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum5 as $rowsums5):
                        // if($row->income_date_year == $rowsums4->otherincome_other_year):
                            $gettotal4= $rowsums5->sumnumber5;
                        // endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum1 as $rowsums):
                        // if($row->income_date_year == $rowsums->income_date_year):
                            echo $gt2= number_format($rowsums->sumothersourceother + $gettotal2 + $gettotal3 + $gettotal4,2);
                            $gt2= $rowsums->sumothersourceother + $gettotal2 + $gettotal3 + $gettotal4;
                        // endif;
                    endforeach;
                    ?>
                </th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                  <?php echo number_format($gt1 + $gt2,2);  ?>
                </th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"><?php echo number_format(($gt1 + $gt2)*0.75,2);  ?></th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"><?php echo number_format(($gt1 + $gt2)*0.25,2);  ?></th>
                <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"></th>
            </tr>
            <?php
                $year=$row->income_date_year;
                $datamonth = $this->pamain_model->getallmonth2($codegens,$year);
                foreach($datamonth as $rowM):
                    $months = $rowM->income_date_month;
                    $years = $rowM->income_date_year;
                    $day = $rowM->income_date_day;
                    $dataSumEFbyMonth = $this->pamain_model->getbyMonthSumEntranceFee($codegens,$months,$years);
                    $dataSumFUFbyMonth = $this->pamain_model->getbyMonthSumFacilityUserFee($codegens,$months,$years);
                    $dataSumRFbyMonth = $this->pamain_model->getbyMonthSumRecreationalFee($codegens,$months,$years);
                    $dataSumRUFbyMonth = $this->pamain_model->getbyMonthSumResourceUserFee($codegens,$months,$years);
                    $dataSumSAPAbyMonth = $this->pamain_model->getbyMonthSumSAPAFee($codegens,$months,$years);
                    $dataSumMOAbyMonth = $this->pamain_model->getbyMonthSumMOAFee($codegens,$months,$years);
                    $dataSumRSAbyMonth = $this->pamain_model->getbyMonthSumRSAFee($codegens,$months,$years);
                    $dataSumCLAbyMonth = $this->pamain_model->getbyMonthSumCLAFee($codegens,$months,$years);
                    $dataSumOtherIncomebyMonth = $this->pamain_model->getbyMonthSumOIFee($codegens,$months,$years);
                    $dataSumFinesbyMonth = $this->pamain_model->getbyMonthSumFines($codegens,$months,$years);
                    $dataSumDonationbyMonth = $this->pamain_model->getbyMonthSumDonation($codegens,$months,$years);
                    $dataSumGrantbyMonth = $this->pamain_model->getbyMonthSumGrant($codegens,$months,$years);
                    $dataSumEndowmentbyMonth = $this->pamain_model->getbyMonthSumEndowment($codegens,$months,$years);
                    $dataSumOthersourcebyMonth = $this->pamain_model->getbyMonthSumOthersources($codegens,$months,$years);

                    // if ($rowM->income_date_year == $row->income_date_year):

            ?>
            <tr>
                <td style="background-color:#b3e6ff;text-align: right"><?php echo $rowM->month; ?></td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumEFbyMonth as $rowsEF) {
                     $t1 = $rowsEF->EFsumbyMonth; echo number_format($rowsEF->EFsumbyMonth,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumFUFbyMonth as $rowsFUF) {
                     $t2 = $rowsFUF->FUFsum; echo number_format($rowsFUF->FUFsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumRFbyMonth as $rowsRF) {
                     $t3 = $rowsRF->RFsum; echo number_format($rowsRF->RFsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumRUFbyMonth as $rowsRUF) {
                     $t4 = $rowsRUF->RUFsum; echo number_format($rowsRUF->RUFsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumSAPAbyMonth as $rowsSAPA) {
                     $t5 = $rowsSAPA->SAPAsum; echo number_format($rowsSAPA->SAPAsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumMOAbyMonth as $rowsMOA) {
                     $t6 = $rowsMOA->MOAsum; echo number_format($rowsMOA->MOAsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumRSAbyMonth as $rowsRSA) {
                     $t7 = $rowsRSA->RSAsum; echo number_format($rowsRSA->RSAsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumCLAbyMonth as $rowsCLA) {
                     $t8 = $rowsCLA->CLAsum; echo number_format($rowsCLA->CLAsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumOtherIncomebyMonth as $rowOI) {
                     $t9 = $rowOI->OIsum1; echo number_format($rowOI->OIsum1,2);
                }?>
               </td>
                <td style="background-color:#b3e6ff;text-align: right;color:red;font-weight: 700"><?php echo $subtotal1 = number_format($t1 + $t2 + $t3 + $t4 + $t5 + $t6 + $t7 + $t8 + $t9,2); ?></td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumFinesbyMonth as $rowFines) {
                    // if($rowM->month == $rowFines->month):
                        $t10 = $rowFines->Finesum; echo number_format($rowFines->Finesum,2);
                    // endif;
                }?>
                </td>
                <?php foreach ($dataSumDonationbyMonth as $rowdonate) {
                         $t11 = $rowdonate->Donationsum; echo number_format($rowdonate->Donationsum,2);
                }?>
                <td style="background-color:#b3e6ff;text-align: right">
                    <?php echo $t11; ?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right"></td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumGrantbyMonth as $rowGrant) {
                     $t12 = $rowGrant->Grantsum; echo number_format($rowGrant->Grantsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumEndowmentbyMonth as $rowEndow) {
                     $t13 = $rowEndow->Endowmentsum; echo number_format($rowEndow->Endowmentsum,2);
                }?>
                </td>
                <td style="background-color:#b3e6ff;text-align: right">
                <?php foreach ($dataSumOthersourcebyMonth as $rowOSI) {
                     $t14 = $rowOSI->OtherSourcesSum; echo number_format($rowOSI->OtherSourcesSum,2);
                }?>
                </td>
                <td class="" style="background-color:#b3e6ff;text-align: right;color:red;font-weight: 700"><?php echo $subtotal2 = number_format($t10 + $t11 + $t12 + $t13 + $t14,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700;background-color:#b3e6ff;"><?php echo number_format($t1 + $t2 + $t3 + $t4 + $t5 + $t6 + $t7 + $t8 + $t9 + $t10 + $t11 + $t12 + $t13 + $t14,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700;background-color:#b3e6ff;"><?php echo number_format(($t1 + $t2 + $t3 + $t4 + $t5 + $t6 + $t7 + $t8 + $t9 + $t10 + $t11 + $t12 + $t13 + $t14)*0.75,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700;background-color:#b3e6ff;"><?php echo number_format(($t1 + $t2 + $t3 + $t4 + $t5 + $t6 + $t7 + $t8 + $t9 + $t10 + $t11 + $t12 + $t13 + $t14)*0.25,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700;background-color:#b3e6ff;"></td>
            </tr>
            <?php

            $dataAllincomeperday = $this->pamain_model->getallincomebymonths($codegens,$year,$months);
            // $dataAllincomefpdperday = $this->pamain_model->getallincomefinespenaltiesdamagebymonths($codegens,$year,$months);
            foreach ($dataAllincomeperday as $rowke):
                    $months = $rowke->income_date_month;
                    $years = $rowke->income_date_year;
                    $day = $rowke->income_date_day;
                    $dataSumOtherIncomebyDay = $this->pamain_model->getbyDaySumOIFee($codegens,$months,$years,$day);
                    $dataSumOtherIncomebyDaySUM = $this->pamain_model->getbyDaySumOIFee22($codegens,$months,$years,$day);
                    $dataDonation1 = $this->pamain_model->getbyDayDonation1($codegens,$months,$years);
                    $dataDonation2 = $this->pamain_model->getbyDayDonation2($codegens,$months,$years);
                    $datafpd = $this->pamain_model->getbyDayfinespenaltiesdamage($codegens,$months,$years,$day);
                    $dataSumOtherIncomebyDay2 = $this->pamain_model->getbyDaySumOIFee2($codegens,$months,$years);
                    $datasumbyDayothersources = $this->pamain_model->getbyDayothersourceother($codegens,$months,$years,$day);
                    $data5 = $this->pamain_model->getalldonationsEdita($codegens,$months,$years,$day);
                    $data6 = $this->pamain_model->getallotherincomea($codegens,$months,$years,$day);
                    $data7 = $this->pamain_model->getallothersourceincomea($codegens,$months,$years,$day);
                    $data8 = $this->pamain_model->getallfinespenaltiesdamageEdita($codegens,$months,$years,$day);
                $s1=0;
                $s2=0;
                $s3=0;
                $s4=0;
                $s5=0;
                $s6=0;
                $s7=0;
                $s8=0;
                $s9=0;
                $s10=0;

                $u1=0;
                $u2=0;
                $u3=0;
                $u4=0;
                $u5=0;

                $a1=0;
                $a2=0;
                ?>
            <tr>
                <td><?php echo $rowke->income_date_day ?></td>
                <td style="text-align:right;"><?php $s2 = $rowke->entrance_fee;     echo number_format($rowke->entrance_fee,2) ?></td>
                <td style="text-align:right;"><?php $s3 = $rowke->facility_fee;     echo number_format($rowke->facility_fee,2) ?></td>
                <td style="text-align:right;"><?php $s4 = $rowke->recreational_fee; echo number_format($rowke->recreational_fee,2) ?></td>
                <td style="text-align:right;"><?php $s5 = $rowke->resource_fee;     echo number_format($rowke->resource_fee,2) ?></td>
                <td style="text-align:right;"><?php $s6 = $rowke->sapa_fee;         echo number_format($rowke->sapa_fee,2) ?></td>
                <td style="text-align:right;"><?php $s7 = $rowke->moa_fee;          echo number_format($rowke->moa_fee,2) ?></td>
                <td style="text-align:right;"><?php $s8 = $rowke->rsa_fee;          echo number_format($rowke->rsa_fee,2) ?></td>
                <td style="text-align:right;"><?php $s9 = $rowke->cla_fee;          echo number_format($rowke->cla_fee,2) ?></td>
                <td style="text-align:right;">
                    <?php
                        foreach($dataSumOtherIncomebyDaySUM as $oso):
                           $s10=$oso->OIsum2;
                        endforeach;
                        foreach($dataSumOtherIncomebyDay as $oi):
                                echo $oi->income_others_desc."<br>Amount : ".number_format($oi->income_others_amount,2);
                        endforeach;
                    ?>
                </td>
                <td style="text-align: right;color:red"><?php  $a1=$s2+$s3+$s4+$s5+$s6+$s7+$s8+$s9+$s10; echo number_format($s2+$s3+$s4+$s5+$s6+$s7+$s8+$s9+$s10,2) ?></td>
                <td style="text-align:right;">
                    <?php
                        foreach($datafpd as $pdf):
                            // if ($pdf->income_pfd_day==$rowke->income_date_day):
                                echo "Total Amount : ".number_format($pdf->totalamountpdf,2);
                                $u1 = number_format($pdf->totalamountpdf,2);
                                // $u2 = $pdf->totalamountpdf;
                            // endif;
                        endforeach;
                    ?>
                </td>
                <td style="text-align:right;">
                    <?php
                        foreach($dataDonation1 as $d1):
                            if ($d1->income_donate_day==$rowke->income_date_day):
                                echo "Total Amount : ".number_format($d1->totalamount,2);
                                $u2=$d1->totalamount;
                            endif;
                        endforeach;
                    ?>
                </td>
                <td style="text-align:left;">
                    <?php
                        foreach($dataDonation2 as $d2):
                            if ($d2->income_donate_day==$rowke->income_date_day):
                                echo $d2->income_donation_desc."<br>Book Value : ".$d2->income_donation_bookval."<br>";
                            endif;
                        endforeach;
                    ?>
                </td>
                <td style="text-align:right;"><?php echo $u3 = number_format($rowke->grant_fee,2) ?></td>
                <td style="text-align:right;"><?php echo $u4 = number_format($rowke->endowment_fee,2) ?></td>
                <td style="text-align:right;">
                    <?php
                        foreach($dataSumOtherIncomebyDay2 as $oi2):
                            if ($oi2->otherincome_other_day==$rowke->income_date_day):
                                echo $oi2->otherincome_other_desc."<br>Amount : ".number_format($oi2->otherincome_other_amount,2);
                            endif;
                        endforeach;
                        foreach($datasumbyDayothersources as $oo):
                           $u5=$oo->totalamountothersourse;
                        endforeach;
                    ?>
                </td>
                <td style="text-align: right;color:red"><?php $a2 = $u1+$u2+$u3+$u4+$u5; echo number_format($u1+$u2+$u3+$u4+$u5,2); ?></td>
                <td style="text-align: right;color:red"><?php echo number_format($a1 + $a2,2); ?></td>
                <td style="text-align: right;color:red"><?php echo number_format(($a1 + $a2)*.75,2); ?></td>
                <td style="text-align: right;color:red"><?php echo number_format(($a1 + $a2)*.25,2); ?></td>
                <!-- <td style="text-align: right;color:red"><?php echo number_format($s1+$s2+$s3+$s4+$s5+$s6+$s6+$s7+$s8+$s9+$u1+$u2+$u3+$u4+$u5,2); ?></td> -->
                <!-- <td style="text-align: right;color:red"><?php echo number_format(($s1+$s2+$s3+$s4+$s5+$s6+$s6+$s7+$s8+$s9+$u1+$u2+$u3+$u4+$u5)*0.75,2); ?></td> -->
                <!-- <td style="text-align: right;color:red"><?php echo number_format(($s1+$s2+$s3+$s4+$s5+$s6+$s6+$s7+$s8+$s9+$u1+$u2+$u3+$u4+$u5)*0.25,2); ?></td> -->
                <td class="hidden">
                    <?php foreach($data5 as $cc):;
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_income_donation?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeincomedonations" id="<?php echo $cc->id_income_donation ?>" data-id="<?php echo $cc->id_income_donation ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <?php if ($cc->income_donation==1) { ?>
                        <fieldset>
                            <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                            <?php echo "Amount (Php) : ".number_format($cc->donation_amount,2)."<br>"; ?>
                            <?php echo "Source : ".$cc->income_donation_source; ?>
                        </fieldset>
                    <?php } ?>
                    <?php if ($cc->income_donation==2) { ?>
                        <fieldset>
                        <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                        <?php echo "Book value : ".$cc->income_donation_bookval."<br>"; ?>
                        <?php echo "Description : ".$cc->income_donation_desc."<br>"; ?>
                        <?php echo "Source : ".$cc->income_donation_source; ?>
                        </fieldset>
                    <?php } ?>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php foreach($data6 as $dd):;
                    ?>
                    <div id="divdevelopmentedit<?php echo $dd->id_income_others?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeincomeothers" id="<?php echo $dd->id_income_others ?>" data-id="<?php echo $dd->id_income_others ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <?php echo "Specify others : ".$dd->income_others_desc."<br>"."Amount (Php) : ".number_format($dd->income_others_amount,2); ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php foreach($data7 as $ee):
                    ?>
                    <div id="divdevelopmentedit<?php echo $ee->id_otherincomesource_other?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removesourceothers" id="<?php echo $ee->id_otherincomesource_other ?>" data-id="<?php echo $ee->id_otherincomesource_other ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <?php echo "Specify others : ".$ee->otherincome_other_desc."<br>"."Amount (Php) : ".number_format($ee->otherincome_other_amount,2); ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit/').$rowke->riadeposit_file ?>"><?php echo $rowke->riadeposit_file ?></a></td>
                <td class="hide"><?php echo $rowke->riadeposit_file?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf/').$rowke->sagfbtr_file ?>"><?php echo $rowke->sagfbtr_file ?></a></td>
                <td class="hide"><?php echo $rowke->sagfbtr_file?></td>
                <td class="hide"><?php echo $rowke->income_gencode?></td>
                <td class="hidden">
                    <?php foreach($data8 as $ccc):
                    ?>
                    <div id="divdevelopmentedit<?php echo $ccc->id_income_pfd?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeincomefinespenaltydmgs" id="<?php echo $ccc->id_income_pfd ?>" data-id="<?php echo $ccc->id_income_pfd ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <?php if ($ccc->income_pfd==1 || $ccc->income_pfd==2 || $ccc->income_pfd==3) { ?>
                        <fieldset>
                            <?php echo "Category : ".$ccc->receipt_name."<br>"; ?>
                            <?php echo "Amount (Php) : ".number_format($ccc->income_pfd_amount,2)."<br>"; ?>
                            <?php echo "Source : ".$ccc->income_pfd_source; ?>
                        </fieldset>
                    <?php } ?>
                    <?php if ($ccc->income_pfd==4) { ?>
                        <fieldset>
                            <?php echo "Specify Others : ".$ccc->income_pfd_others."<br>"; ?>
                            <?php echo "Amount (Php) : ".number_format($ccc->income_pfd_amount,2)."<br>"; ?>
                            <?php echo "Source : ".$ccc->income_pfd_source; ?>
                        </fieldset>
                    <?php } ?>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><?php echo $rowke->grant_source?></td>
                <td class="hide"><?php echo $rowke->endowment_source?></td>
                <td>
                    <button type="button" value="<?php echo $rowke->id_source_income;?>" class="btn btnbtn btn-info btn-xs" onclick="editactualincomes(this);">Edit </button>
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeactualincome" data-id="<?php echo $rowke->income_gencode ?>" title="Remove">Remove</button>
                <input type="hidden" id="actincomeyear<?php echo $rowke->id_source_income ?>" value="<?php echo $rowke->income_date_year ?>" />
                <input type="hidden" id="actincomemonths<?php echo $rowke->id_source_income ?>" value="<?php echo $rowke->income_date_month ?>" />
                <input type="hidden" id="actincomeday<?php echo $rowke->id_source_income ?>" value="<?php echo $rowke->income_date_day ?>" />
                <input type="hidden" id="actincomeqtrs<?php echo $rowke->id_source_income ?>" value="<?php echo $rowke->income_date_quarter ?>" />
                <input type="hidden" id="actincomegencode<?php echo $rowke->id_source_income ?>" value="<?php echo $rowke->generatedcode ?>" />
                </td>
            </tr>
            <?php
                endforeach;
            endforeach;
            ?>
            <?php
        }

    }

    public function fetchactualincomes(){
        $codegens = $this->input->post('codegens');
        $data = $this->pamain_model->getallactualincomes($codegens);
        $data2 = $this->pamain_model->getallyears($codegens);
        $datasum1 = $this->pamain_model->getsumactualincomebyYr($codegens);
        $datasum2 = $this->pamain_model->getsumactualincomeotherincomebyYr($codegens);
        $datasum3 = $this->pamain_model->getsumothersourceCashDonatebyYr($codegens);
        $datasum4 = $this->pamain_model->getsumothersourceOthersbyYr($codegens);
        $sss=0;
        $ttt=0;
        $vvv=0;
        $zzz=0;
        $subtotal1=0;
        $subtotal2=0;

        $gettotal1=0;
        $gettotal2=0;
        $gettotal3=0;

        $gt1=0;
        $gt2=0;
        foreach($data2 as $row){
            ?>
            <tr>
              <th colspan="10" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"><?php echo $row->income_date_year?></th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                    <?php
                    foreach($datasum2 as $rowsums2):
                        if($row->income_date_year == $rowsums2->income_other_year):
                            $gettotal1= $rowsums2->sumnumber2;
                        endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum1 as $rowsums):
                        if($row->income_date_year == $rowsums->income_date_year):
                            echo number_format($rowsums->sumnumber1 + $gettotal1,2);
                            $gt1= $rowsums->sumnumber1 + $gettotal1;
                        endif;
                    endforeach;
                    ?>
              </th>
              <th colspan="6" style="background-color: #ffcccc;text-align: left;text-transform: uppercase;"></th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                    <?php
                    foreach($datasum3 as $rowsums3):
                        if($row->income_date_year == $rowsums3->income_donate_year):
                            $gettotal2= $rowsums3->sumnumber3;
                        endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum4 as $rowsums4):
                        if($row->income_date_year == $rowsums4->otherincome_other_year):
                            $gettotal3= $rowsums4->sumnumber4;
                        endif;
                    endforeach;
                    ?>
                    <?php
                    foreach($datasum1 as $rowsums):
                        if($row->income_date_year == $rowsums->income_date_year):
                            echo $gt2= number_format($rowsums->sumothersourceother + $gettotal2 + $gettotal3,2);
                            $gt2= $rowsums->sumothersourceother + $gettotal2 + $gettotal3;
                        endif;
                    endforeach;
                    ?>
              </th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;">
                <?php echo number_format($gt1 + $gt2,2);  ?>
              </th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"><?php echo number_format(($gt1 + $gt2)*0.75,2);  ?></th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"><?php echo number_format(($gt1 + $gt2)*0.25,2);  ?></th>
              <th style="background-color: #ffcccc;text-align: right;text-transform: uppercase;"></th>
            </tr>
            <?php
                foreach($data as $row2):
                    $months = $row2->income_date_month;
                    $years = $row2->income_date_year;
                    $data3 = $this->pamain_model->getalldonations($codegens,$months,$years);
                    $data4 = $this->pamain_model->getalldonationsinkind($codegens,$months,$years);
                    $data5 = $this->pamain_model->getalldonationsEdit($codegens,$months,$years);
                    $datasubtotal = $this->pamain_model->getalldonationtotalcash($codegens,$months,$years);
                    $dataotherincome = $this->pamain_model->getallotherincome($codegens,$months,$years);
                    $dataothersourceincome = $this->pamain_model->getallothersourceincome($codegens,$months,$years);
                    $dataotherincomesum = $this->pamain_model->getallotherincomeSUM($codegens,$months,$years);
                    $dataothersourceincomesum = $this->pamain_model->getallothersourceincomeSUM($codegens,$months,$years);
                    $data6 = $this->pamain_model->getallotherincome($codegens,$months,$years);
                    $data7 = $this->pamain_model->getallothersourceincome($codegens,$months,$years);


                    foreach ($dataothersourceincomesum as $sumiocs) {
                            $ttt = $sumiocs->incomesum;
                    }
                if ($row2->income_date_year == $row->income_date_year):
            ?>
            <tr id="<?php echo $row->id_source_income; ?>" class="trow">
                <td style="text-align: right;"><?php echo $row2->month; ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->entrance_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->facility_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->recreational_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->resource_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->sapa_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->moa_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->rsa_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->cla_fee,2); ?></td>
                <td>
                    <?php foreach($dataotherincome as $rowio):?>
                        <?php echo $rowio->income_others_desc."<br>".number_format($rowio->income_others_amount,2) ?>
                    <?php endforeach; ?>
                </td>
                <?php
                foreach ($dataotherincomesum as $sumioc) {
                    $sss = $sumioc->incomesum;
                }
                ?>
                <td class="" style="background-color:#ffb3d9;text-align: right"><?php echo $subtotal1 = number_format($row2->entrance_fee + $row2->facility_fee + $row2->recreational_fee + $row2->resource_fee + $row2->sapa_fee + $row2->moa_fee + $row2->rsa_fee + $row2->cla_fee + $sss,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->fines_fee,2); ?></td>
                <td style="text-align: right;">
                <?php foreach($data3 as $row3):?>
                        <?php echo number_format($row3->donation_amount,2) ?>
                <?php endforeach; ?>
                </td>
                <td class="">
                <?php foreach($data4 as $row4):?>
                        <?php echo $row4->inkinddonate ?>
                <?php endforeach; ?>
                <?php foreach ($datasubtotal as $row5) {
                    // if ($row5->income_donate_month == $row->income_date_month) {
                        $vvv = $row5->totaldonataion;

                    // }
                } ?>
                </td>
                <td style="text-align: right;"><?php echo number_format($row2->grant_fee,2); ?></td>
                <td style="text-align: right;"><?php echo number_format($row2->endowment_fee,2); ?></td>
                <td>
                    <?php foreach($dataothersourceincome as $rowios):?>
                        <?php echo $rowios->otherincome_other_desc."<br>".number_format($rowios->otherincome_other_amount,2) ?>
                    <?php endforeach; ?>
                </td>
                <td style="background-color:#ffb3d9;text-align: right"><?php echo $subtotal2 = number_format($row2->fines_fee + $row2->grant_fee + $row2->endowment_fee + $vvv + $ttt,2); ?></td>
                <td class="hidden">
                    <?php foreach($data5 as $cc):;
                    ?>
                    <div id="divdevelopmentedit<?php echo $cc->id_income_donation?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeincomedonations" id="<?php echo $cc->id_income_donation ?>" data-id="<?php echo $cc->id_income_donation ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                    <?php if ($cc->income_donation==1) { ?>
                        <fieldset>
                            <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                            <?php echo "Amount (Php) : ".number_format($cc->donation_amount,2); ?>
                        </fieldset>
                    <?php } ?>
                    <?php if ($cc->income_donation==2) { ?>
                        <fieldset>
                        <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                        <?php echo "Book value : ".$cc->income_donation_bookval."<br>"; ?>
                        <?php echo "Description : ".$cc->income_donation_desc; ?>
                        </fieldset>
                    <?php } ?>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php foreach($data6 as $dd):;
                    ?>
                    <div id="divdevelopmentedit<?php echo $dd->id_income_others?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeincomeothers" id="<?php echo $dd->id_income_others ?>" data-id="<?php echo $dd->id_income_others ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <?php echo "Specify others : ".$dd->income_others_desc."<br>"."Amount (Php) : ".number_format($dd->income_others_amount,2); ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hidden">
                    <?php foreach($data7 as $ee):;
                    ?>
                    <div id="divdevelopmentedit<?php echo $ee->id_otherincomesource_other?>" class="showdata">
                    <button type="button" class="btn btnbtn btn-danger btn-xs removesourceothers" id="<?php echo $ee->id_otherincomesource_other ?>" data-id="<?php echo $ee->id_otherincomesource_other ?>" style="position: absolute;right: 25px">
                        Remove
                    </button>
                        <fieldset>
                            <?php echo "Specify others : ".$ee->otherincome_other_desc."<br>"."Amount (Php) : ".number_format($ee->otherincome_other_amount,2); ?>
                        </fieldset>
                    </div>
                    <?php endforeach;?>
                </td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_ria_deposit/').$row2->riadeposit_file ?>"><?php echo $row2->riadeposit_file ?></a></td>
                <td class="hide"><?php echo $row2->riadeposit_file?></td>
                <td class="hide"><i class="cap-icon ci-pdf"></i><a target='_blank' href="<?php echo base_url('bmb_assets2/upload/ipaf_sagf/').$row2->sagfbtr_file ?>"><?php echo $row2->sagfbtr_file ?></a></td>
                <td class="hide"><?php echo $row2->sagfbtr_file?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700"><?php echo number_format($row2->entrance_fee + $row2->facility_fee + $row2->recreational_fee + $row2->resource_fee + $row2->sapa_fee + $row2->moa_fee + $row2->rsa_fee + $row2->cla_fee  + $row2->fines_fee + $row2->grant_fee + $row2->endowment_fee + $sss +$vvv + $ttt,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700"><?php echo number_format(($row2->entrance_fee + $row2->facility_fee + $row2->recreational_fee + $row2->resource_fee + $row2->sapa_fee + $row2->moa_fee + $row2->rsa_fee + $row2->cla_fee  + $row2->fines_fee + $row2->grant_fee + $row2->endowment_fee + $sss +$vvv + $ttt)*0.75,2); ?></td>
                <td style="text-align:right;font-size: 14px;color:#ff0000;font-weight:700"><?php echo number_format(($row2->entrance_fee + $row2->facility_fee + $row2->recreational_fee + $row2->resource_fee + $row2->sapa_fee + $row2->moa_fee + $row2->rsa_fee + $row2->cla_fee  + $row2->fines_fee + $row2->grant_fee + $row2->endowment_fee + $sss +$vvv + $ttt)*0.25,2); ?></td>
                <td>
                    <button type="button" value="<?php echo $row2->id_source_income;?>" class="btn btnbtn btn-info btn-xs" onclick="editactualincome(this);">Edit </button>
                    <!-- <button type="button" value="<?php echo $row2->id_source_income;?>" class="btn btnbtn btn-info btn-xs" onclick="editrock(this);">Edit </button> -->
                    <button type="button" class="btn btnbtn btn-danger btn-xs removeactualincome" data-id="<?php echo $row2->id_source_income ?>" title="Remove">Remove</button>
                <input type="hidden" id="actincomeyear<?php echo $row2->id_source_income ?>" value="<?php echo $row2->income_date_year ?>" />
                <input type="hidden" id="actincomemonth<?php echo $row2->id_source_income ?>" value="<?php echo $row2->income_date_month ?>" />
                <input type="hidden" id="actincomeqtr<?php echo $row2->id_source_income ?>" value="<?php echo $row2->income_date_quarter ?>" />
                <input type="hidden" id="actincomegencode<?php echo $row2->id_source_income ?>" value="<?php echo $row2->generatedcode ?>" />
                </td>

            </tr>
            <?php
                endif;
                endforeach;
            ?>
            <?php
        }
    }

    public function fetchactualincomesDonationEdit(){
        $codegens = $this->input->post('codegens');
        $year = $this->input->post('year');
        $month = $this->input->post('month');
        $data = $this->pamain_model->getalldonationsEdit($codegens,$month,$year);
        foreach($data as $row):?>
            <tr>
                <td><?php echo $row->donation_desc ?></td>
                <td><?php if ($row->income_donation==1) {
                    echo $row->donation_amount;
                } else if($row->income_donation==2){
                    echo "Book value : ".$row->income_donation_bookval;
                }else{
                    echo "";
                }

                 ?></td>
            </tr>
        <?php endforeach;
    }

    public function riafiles()
    {
        if(isset($_FILES["riadepositfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('riadepositfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafiles2()
    {
        if(isset($_FILES["riadepositfile2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('riadepositfile2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafiles3()
    {
        if(isset($_FILES["riadepositfile3"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('riadepositfile3'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafilesEdit()
    {
        if(isset($_FILES["edit-riadepositfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-riadepositfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafiles2Edit()
    {
        if(isset($_FILES["edit-riadepositfile2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-riadepositfile2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafiles3Edit()
    {
        if(isset($_FILES["edit-riadepositfile3"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-riadepositfile3'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function riafilesprev()
    {
        if(isset($_FILES["riadepositfileprev"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_ria_deposit_prev';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('riadepositfileprev'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfiles()
    {
        if(isset($_FILES["sagfbtrfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sagfbtrfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfiles2()
    {
        if(isset($_FILES["sagfbtrfile2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sagfbtrfile2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfiles3()
    {
        if(isset($_FILES["sagfbtrfile3"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sagfbtrfile3'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfilesprev()
    {
        if(isset($_FILES["sagfbtrfileprev"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf_prev';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('sagfbtrfileprev'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }


    public function sagfbtrfilesEdit()
    {
        if(isset($_FILES["edit-sagfbtrfile"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sagfbtrfile'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfiles2Edit()
    {
        if(isset($_FILES["edit-sagfbtrfile2"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sagfbtrfile2'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function sagfbtrfiles3Edit()
    {
        if(isset($_FILES["edit-sagfbtrfile3"]["name"]))
           {
            $config['upload_path'] = 'bmb_assets2/upload/ipaf_sagf';
            $config['allowed_types'] = 'pdf';
            $this->load->library('upload', $config);
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('edit-sagfbtrfile3'))
            {
                 echo $this->upload->display_errors();
            }
            else
            {
                 $data = $this->upload->data();
                 $this->load->library('image_lib', $config);
                 $this->image_lib->initialize($config);
                    $filenames = $data['file_name'];
                    $output['status'] = $filenames;
                    echo json_encode($output);
            }
        }
    }

    public function AddDonationEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('actincome-gencode',true),
            'income_gencode'    => $this->input->post('actincome-gencode2',true),
            'income_donate_month'    => $this->input->post('edit-phyquartermonth',true),
            'income_donate_year'    => $this->input->post('edit-phyquarteryear',true),
            'income_donate_day'    => $this->input->post('edit-phyquarteday',true),
            'income_donate_quarter'      => $this->input->post('edit-phyquarterincome'),
            'income_donation'      => $this->input->post('edit-ipafdonationselect'),
            'donation_amount'      => str_replace(',','',$this->input->post('edit-ipafdonationcash')),
            'income_donation_desc'      => $this->input->post('edit-ipafinkindbookvalue'),
            'income_donation_bookval'      => $this->input->post('edit-ipafinkinddesc')
        ];

        $query = $this->pamain_model->insertipafdonations($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Donation';
                }
        echo json_encode($output);
    }

    public function AddPenaltyFinesDmgEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('actincome-gencode',true),
            'income_gencode'    => $this->input->post('actincome-gencode2',true),
            'income_pfd_month'    => $this->input->post('edit-phyquartermonth',true),
            'income_pfd_year'    => $this->input->post('edit-phyquarteryear',true),
            'income_pfd_day'    => $this->input->post('edit-phyquarteday',true),
            'income_pfd_quarter'      => $this->input->post('edit-phyquarterincome'),
            'income_pfd'      => $this->input->post('edit-ipaffinesfee_dd'),
            'income_pfd_amount'      => str_replace(',','',$this->input->post('edit-ipaffinesfee')),
            'income_pfd_source'      => $this->input->post('edit-ipaffinesfee_source'),
            'income_pfd_others'      => $this->input->post('edit-ipaffinesfee_others')
        ];

        $query = $this->pamain_model->insertipaffinespenaltiesdmgs($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added Donation';
                }
        echo json_encode($output);
    }

    public function addOtherfeeS()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('actincome-gencode',true),
            'income_gencode'    => $this->input->post('actincome-gencode2',true),
            'income_other_month'    => $this->input->post('edit-phyquartermonth',true),
            'income_other_year'    => $this->input->post('edit-phyquarteryear',true),
            'income_other_day'    => $this->input->post('edit-phyquarteday',true),
            'income_other_quarter'      => $this->input->post('edit-phyquarterincome'),
            'income_others_amount'      => str_replace(',','',$this->input->post('edit-ipafincomeotherfee')),
            'income_others_desc'      => $this->input->post('edit-ipafincomeotherfee_desc'),
        ];

        $query = $this->pamain_model->insertincomeotherfee($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added other fees';
                }
        echo json_encode($output);
    }

    public function addsourceOtherfeeS()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('actincome-gencode',true),
            'income_gencode'    => $this->input->post('actincome-gencode2',true),
            'otherincome_other_month'    => $this->input->post('edit-phyquartermonth',true),
            'otherincome_other_year'    => $this->input->post('edit-phyquarteryear',true),
            'otherincome_other_day'    => $this->input->post('edit-phyquarteday',true),
            'otherincome_other_quarter'      => $this->input->post('edit-phyquarterincome'),
            'otherincome_other_amount'      => str_replace(',','',$this->input->post('edit-ipafotherincomesourcefee')),
            'otherincome_other_desc'      => $this->input->post('edit-ipafotherincomesourcefeespec'),
        ];

        $query = $this->pamain_model->insertsourceotherfee($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added other source fees';
                }
        echo json_encode($output);
    }

		public function addinitialcomphistoryEdit()
    {
        $data['mainproj'] = (object)$postDataImage = [
            'generatedcode'    => $this->input->post('legis-gencode',true),
            'legal_generatedcode'    => $this->input->post('legis-gencode2',true),
            'nipid_status'    => $this->input->post('edit-nipsub_id',true),
            'nipid_category'      => $this->input->post('edit-previouscat'),
            'legal_basis_id'      => $this->input->post('edit-history-legis_id'),
						'legal_basis_no'      => $this->input->post('edit-history-legisno'),
						'legal_basis_area'      => $this->input->post('edit-history-legis_area'),
						'legal_basis_month'      => $this->input->post('edit-history-date_month'),
						'legal_basis_day'      => $this->input->post('edit-history-date_day'),
						'legal_basis_year'      => $this->input->post('edit-history-date_year')
        ];

        $query = $this->pamain_model->insertinitialcompHistory($postDataImage);

        if($query){
                $output['message'] = 'Add';
                $output['status'] = 'Successfully added';
                }
        echo json_encode($output);
    }

    public function refreshdonationlisted()
    {
        $codes = $this->input->post('codegens');
        $month = $this->input->post('month');
        $year = $this->input->post('year');
        $day = $this->input->post('day');
        $donation = $this->pamain_model->getallEditDonations($codes,$month,$year,$day);
        foreach($donation as $cc):?>
            <div id="divdevelopmentedit<?php echo $cc->id_income_donation?>" class="showdata">
                <button type="button" class="btn btnbtn btn-danger btn-xs removeeditdevelopment" id="<?php echo $cc->id_income_donation ?>" data-id="<?php echo $cc->id_income_donation ?>" style="position: absolute;right: 25px">
                    Remove
                </button>
            <?php if ($cc->income_donation==1) { ?>
                <fieldset>
                    <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                    <?php echo "Amount (Php) : ".number_format($cc->donation_amount,2); ?>
                </fieldset>
            <?php } ?>
            <?php if ($cc->income_donation==2) { ?>
                <fieldset>
                <?php echo "Donation : ".$cc->donation_desc."<br>"; ?>
                <?php echo "Book value : ".$cc->income_donation_bookval; ?>
                </fieldset>
            <?php } ?>
            </div>
        <?php endforeach;
    }

    public function refreshfinepenaltydmgslisted()
    {
        $codegens = $this->input->post('codegens');
        $months = $this->input->post('month');
        $years = $this->input->post('year');
        $day = $this->input->post('day');
        $data8 = $this->pamain_model->getallfinespenaltiesdamageEdita($codegens,$months,$years,$day);
        foreach($data8 as $ccc):
            ?>
            <div id="divdevelopmentedit<?php echo $ccc->id_income_pfd?>" class="showdata">
            <button type="button" class="btn btnbtn btn-danger btn-xs removeincomefinespenaltydmgs" id="<?php echo $ccc->id_income_pfd ?>" data-id="<?php echo $ccc->id_income_pfd ?>" style="position: absolute;right: 25px">
                Remove
            </button>
            <?php if ($ccc->income_pfd==1 || $ccc->income_pfd==2 || $ccc->income_pfd==3) { ?>
                <fieldset>
                    <?php echo "Category : ".$ccc->receipt_name."<br>"; ?>
                    <?php echo "Amount (Php) : ".number_format($ccc->income_pfd_amount,2)."<br>"; ?>
                    <?php echo "Source : ".$ccc->income_pfd_source; ?>
                </fieldset>
            <?php } ?>
            <?php if ($ccc->income_pfd==4) { ?>
                <fieldset>
                    <?php echo "Specify Others : ".$ccc->income_pfd_others."<br>"; ?>
                    <?php echo "Amount (Php) : ".number_format($ccc->income_pfd_amount,2)."<br>"; ?>
                    <?php echo "Source : ".$ccc->income_pfd_source; ?>
                </fieldset>
            <?php } ?>
            </div>
            <?php endforeach;

    }

    public function refreshincomeotherfee()
    {
        $codes = $this->input->post('codegens');
        $month = $this->input->post('month');
        $year = $this->input->post('year');
        $day = $this->input->post('day');
        $donation = $this->pamain_model->getallincomeotherfee($codes,$month,$year,$day);
        foreach($donation as $dd):;                    ?>
            <div id="divdevelopmentedit<?php echo $dd->id_income_others?>" class="showdata">
            <button type="button" class="btn btnbtn btn-danger btn-xs removeeditdevelopment" id="<?php echo $dd->id_income_others ?>" data-id="<?php echo $dd->id_income_others ?>" style="position: absolute;right: 25px">
                Remove
            </button>
                <fieldset>
                    <?php echo "Specify others : ".$dd->income_others_desc."<br>"."Amount (Php) : ".number_format($dd->income_others_amount,2); ?>
                </fieldset>
            </div>
        <?php endforeach;
    }

    public function refreshsourceotherfee()
    {
        $codes = $this->input->post('codegens');
        $month = $this->input->post('month');
        $year = $this->input->post('year');
        $day = $this->input->post('day');
        $donation = $this->pamain_model->getallsourceotherfee($codes,$month,$year,$day);
        foreach($donation as $dd):;                    ?>
            <div id="divdevelopmentedit<?php echo $dd->id_otherincomesource_other?>" class="showdata">
            <button type="button" class="btn btnbtn btn-danger btn-xs removeeditdevelopment" id="<?php echo $dd->id_otherincomesource_other ?>" data-id="<?php echo $dd->id_otherincomesource_other ?>" style="position: absolute;right: 25px">
                Remove
            </button>
                <fieldset>
                    <?php echo "Specify others : ".$dd->otherincome_other_desc."<br>"."Amount (Php) : ".number_format($dd->otherincome_other_amount,2); ?>
                </fieldset>
            </div>
        <?php endforeach;
    }

    public function deleteincomedonation($id = null)
    {
    $sql = "DELETE FROM tblipafsourceincome_donation WHERE id_income_donation = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteincomefinepenaltydmgs($id = null)
    {
    $sql = "DELETE FROM tblipafsourceincome_finespenaltydamage WHERE id_income_pfd = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteincomeothers($id = null)
    {
    $sql = "DELETE FROM tblipafsourceincome_others WHERE id_income_others = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deleteincomesourceothers($id = null)
    {
    $sql = "DELETE FROM tblipafsourceincomeother_others WHERE id_otherincomesource_other = '$id'";
    if ($this->db->query($sql)) {
        $output['status'] = 'success';
        $output['message'] = 'Successfully removed';
    } else {
        $output['status'] = 'error';
        $output['message'] = 'Something went wrong in deleting the data';
    }
      echo json_encode($output);
    }

    public function deletephysicalreports($id = null)
    {
            $sql1 = $this->db->where('id_ipaf_physical',$id)
                                            ->get('tblipaf_physical')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblipaf_physical WHERE id_ipaf_physical = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletephysicalfinancialreports($id = null)
    {
            $sql1 = $this->db->where('id_physical_target',$id)
                                            ->get('tblipaf_physical_target')
                                            ->row();

        $output = array();
         // $sql = "DELETE FROM tblipaf_physical_target WHERE id_physical_target = '$id'";
         // $sql = "DELETE FROM tblipaf_physical WHERE id_ipaf_physical = '$id'";
         $sql = "DELETE tblipaf_physical,tblipaf_physical_target
                FROM tblipaf_physical
                LEFT JOIN tblipaf_physical_target ON tblipaf_physical_target.physical_code = tblipaf_physical.physical_code
                WHERE tblipaf_physical.physical_code = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deletepreincomeyear($id = null)
    {
            $sql1 = $this->db->where('id_previncome',$id)
                                            ->get('tblpaipafincomeprevyear')
                                            ->row();

        $output = array();
         $sql = "DELETE FROM tblpaipafincomeprevyear WHERE id_previncome = '$id'";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function deleteactualincomes($id = null)
    {
            // $sql1 = $this->db->where('id_source_income',$id)
            //                                 ->get('tblipafsourceincome')
            //                                 ->row();

        $output = array();
         // $sql = "DELETE tblipafsourceincome,tblipafsourceincome_others,tblipafsourceincome_donation,tblipafsourceincomeother_others
         //         FROM tblipafsourceincome,tblipafsourceincome_others,tblipafsourceincome_donation,tblipafsourceincomeother_others
         //         WHERE tblipafsourceincome.income_gencode = tblipafsourceincome_others.income_gencode AND
         //         tblipafsourceincome_others.income_gencode = tblipafsourceincome_donation.income_gencode AND
         //         tblipafsourceincome_others.income_gencode = tblipafsourceincomeother_others.income_gencode AND
         //         tblipafsourceincome.income_gencode = '$id'";

        $sql = "DELETE tblipafsourceincome,tblipafsourceincome_others,tblipafsourceincome_donation,tblipafsourceincomeother_others
                FROM tblipafsourceincome
                LEFT JOIN tblipafsourceincome_others ON tblipafsourceincome_others.income_gencode = tblipafsourceincome.income_gencode
                LEFT JOIN tblipafsourceincome_donation ON tblipafsourceincome_donation.income_gencode = tblipafsourceincome.income_gencode
                LEFT JOIN tblipafsourceincomeother_others ON tblipafsourceincomeother_others.income_gencode = tblipafsourceincome.income_gencode
                WHERE tblipafsourceincome.income_gencode = '$id'
                ";

        if($this->db->query($sql)){
            $output['status'] = 'success';
            $output['message'] = 'Data Removed successfully';
        }
        else{
            $output['status'] = 'error';
            $output['message'] = 'Something went wrong in deleting the data';
        }
        echo json_encode($output);
    }

    public function file_check($str) {
        $allowed_mime_types = array('text/x-comma-separated-values', 'text/comma-separated-values', 'application/octet-stream', 'application/vnd.ms-excel', 'application/x-csv', 'text/x-csv', 'text/csv', 'application/csv', 'application/excel', 'application/vnd.msexcel', 'text/plain');
        if (isset($_FILES['file']['name']) && $_FILES['file']['name'] != "") {
            $mime = get_mime_by_extension($_FILES['file']['name']);
            $fileAr = explode('.', $_FILES['file']['name']);
            $ext = end($fileAr);
            if (($ext == 'csv') && in_array($mime, $allowed_mime_types)) {
                return true;
            } else {
                $this->form_validation->set_message('file_check', 'Please select only CSV file to upload.');
                return false;
            }
        } else {
            $this->form_validation->set_message('file_check', 'Please select a CSV file to upload.');
            return false;
        }
    }

    public function importVisitors3() {
        $data = array();
        $memData = array();
        $urldirect = $this->input->post('gencode2_1');

        // If import request is submitted
        if ($this->input->post('importSubmit')) {
            // Form field validation rules
            $this->form_validation->set_rules('file', 'CSV file', 'callback_file_check');

            // Validate submitted form data
            if ($this->form_validation->run() == true) {
                $insertCount = $updateCount = $rowCount = $notAddCount = 0;

                // If file uploaded
                if (is_uploaded_file($_FILES['file']['tmp_name'])) {
                    // Load CSV reader library
                    $this->load->library('CSVReader');

                    // Parse data from CSV file
                    $csvData = $this->csvreader->parse_csv($_FILES['file']['tmp_name']);

                    // Insert/update CSV data into database
                    if (!empty($csvData)) {
                        foreach ($csvData as $row) {
                            $rowCount++;

                            // Prepare data for DB insertion
                            $memData = array(
                                'visitors_gencode' => $row['Visitors Code'],
                                'generatedcode' => $row['PA Code'],
                                'visitorlog_fullname' => $row['Full Name'],
                                'visitorlog_address' => $row['Address'],
                                'visitors_category' => $row['Category'],
                                'visitorlog_forloc' => $row['Nationality'],
                                'visitorlog_nationality' => $row['Specify Nationality'],
                                'visitorlog_sex' => $row['Sex'],
                                'visitor_purpose' => $row['Purpose'],
                                'visitorlog_month' => $row['Month'],
                                'visitorlog_day' => $row['Day'],
                                'visitorlog_year' => $row['Year'],
//                                'date_created' => $row['Time'],
//                                'updated' => $row['Updated']
                            );

                            // Check whether email already exists in the database
                            $con = array(
                                'where' => array(
                                    'visitors_gencode' => $row['Visitors Code']
                                ),
                                'returnType' => 'count'
                            );
                            $prevCount = $this->pamain_model->getRows9($con);

                            if ($prevCount > 0) {
                                // Update member data
                                $condition = array('visitors_gencode' => $row['Visitors Code']);
                                $update = $this->pamain_model->update9($memData, $condition);

                                if ($update) {
                                    $updateCount++;
                                }
                            } else {
                                // Insert member data
                                $insert = $this->pamain_model->insert9($memData);

                                if ($insert) {
                                    $insertCount++;
                                }
                            }
                        }

                        // Status message with imported data count
                        $notAddCount = ($rowCount - ($insertCount + $updateCount));
                        $successMsg = 'Members imported successfully. Total Rows (' . $rowCount . ') | Inserted (' . $insertCount . ') | Updated (' . $updateCount . ') | Not Inserted (' . $notAddCount . ')';
                        $this->session->set_flashdata('success_msg', $successMsg);
                    }
                } else {
//                    echo 'haha';
                    $this->session->set_flashdata('error_msg', 'Error on file upload, please try again.');
                }
            } else {
//                echo 'hehe';
                $this->session->set_flashdata('error_msg', 'Invalid file, please select only CSV file.');
            }
        }
        redirect('/pasu/pamain/edit/'.$urldirect);
    }

    public function update_speciespopulation(){
        if($this->session->userdata('email')){
            $id = $this->input->post("ffbp-id");
            $details = array('fdateM' => $this->input->post("edit-fdateM"),
                             'fdateD' => $this->input->post("edit-fdateD"),
                             'fdateY' => $this->input->post("edit-fdateY"),
                             'activity_title' => $this->input->post("edit-populationactivity"),
                             'populationcount' => str_replace(',','',$this->input->post("edit-populationcounts")),
                             'populationremarks' => $this->input->post("edit-populationremarks"));
            $this->pamain_model->updateFaunaPopulations($details,$id);
            echo json_encode(['result' => 'things you want to show']);
        }
        else{
            echo "<script>alert('Login is required.');</script>";
            echo "<meta http-equiv=Refresh content=0;url=../../login>";
        }
    }
}
